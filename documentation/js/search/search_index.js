var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.287,1,1.046]],["body/components/AppComponent.html",[0,0.37,1,1.69,2,1.276,3,0.178,4,0.105,5,0.886,6,0.886,7,0.886,8,0.886,9,0.105,10,2.333,11,0.524,12,0.725,13,2.011,14,1.334,15,3.146,16,1.099,17,1.851,18,1.851,19,2.472,20,1.618,21,2.654,22,0.766,23,1.1,24,2.18,25,3.512,26,1.69,27,3.146,28,1.599,29,2.18,30,2.973,31,4.892,32,0.886,33,2.251,34,2.303,35,2.117,36,1.469,37,5.443,38,1.469,39,4.892,40,0.481,41,0.565,42,4.223,43,4.892,44,2.087,45,6.134,46,1.508,47,5.838,48,0.943,49,5.443,50,2.917,51,5.443,52,0.943,53,2.333,54,2.655,55,3.868,56,4.494,57,3.843,58,4.699,59,1.36,60,4.068,61,0.599,62,0.017,63,0.949,64,0.652,65,0.549,66,2.702,67,4.068,68,4.068,69,1.925,70,4.068,71,4.209,72,2.051,73,4.699,74,4.068,75,1.107,76,4.068,77,3.146,78,1.133,79,1.36,80,2.702,81,4.209,82,3.146,83,3.146,84,4.068,85,4.068,86,1.851,87,1.951,88,3.551,89,2.18,90,1.394,91,3.493,92,4.068,93,2.654,94,1.222,95,2.654,96,2.059,97,4.068,98,2.702,99,1.851,100,3.146,101,4.699,102,2.872,103,2.316,104,3.512,105,2.059,106,1.348,107,3.146,108,1.865,109,2.702,110,2.702,111,2.872,112,2.702,113,0.599,114,0.549,115,1.334,116,4.068,117,2.702,118,0.388,119,0.189,120,2.333,121,2.702,122,1.539,123,0.926,124,1.169,125,1.908,126,1.368,127,2.702,128,2.702,129,0.118,130,0.204,131,2.702,132,2.333,133,2.702,134,1.908,135,2.702,136,2.333,137,1.539,138,2.09,139,2.702,140,2.702,141,4.223,142,2.702,143,2.702,144,2.333,145,2.09,146,1.014,147,2.702,148,2.872,149,1.851,150,2.042,151,4.068,152,4.068,153,4.068,154,4.068,155,1.133,156,1.95,157,1.95,158,4.068,159,4.068,160,2.059,161,2.702,162,3.512,163,2.09,164,2.139,165,1.763,166,2.472,167,2.117,168,2.702,169,2.406,170,3.099,171,2.18,172,2.702,173,2.654,174,2.333,175,3.551,176,4.068,177,4.068,178,4.068,179,4.068,180,2.09,181,2.702,182,3.981,183,3.783,184,2.09,185,2.09,186,1.763,187,2.09,188,2.702,189,3.868,190,5.443,191,5.443,192,2.702,193,5.443,194,4.068,195,3.308,196,4.068,197,2.702,198,2.18,199,2.09,200,1.908,201,1.908,202,2.702,203,1.95,204,3.512,205,4.892,206,4.892,207,4.699,208,2.702,209,2.09,210,2.09,211,2.226,212,2.333,213,2.333,214,2.702,215,1.908,216,2.702,217,1.368,218,1.169,219,2.333,220,2.333,221,1.295,222,1.677,223,1.295,224,1.539,225,2.702,226,1.908,227,2.472,228,1.448,229,2.702,230,1.062,231,1.539,232,0.599,233,1.334,234,1.334,235,0.886,236,1.784,237,0.886,238,0.886,239,0.713,240,0.886,241,0.744,242,0.964,243,0.886,244,0.744,245,0.886,246,0.713,247,0.886,248,0.744,249,1.334,250,0.713,251,0.886,252,0.713,253,0.886,254,0.713,255,0.886,256,0.713,257,0.886,258,0.744,259,0.886,260,0.713,261,0.949,262,0.886,263,0.683,264,0.886,265,0.713,266,0.886,267,0.713,268,0.744,269,0.886,270,0.713,271,0.886,272,0.744,273,0.713,274,0.683,275,0.812,276,0.886,277,0.009,278,0.009]],["title/injectables/AppInitializerService.html",[56,2.682,279,1.046]],["body/injectables/AppInitializerService.html",[3,0.198,4,0.176,9,0.176,11,0.878,12,0.891,14,1.484,16,1.032,17,2.657,20,1.54,21,3.809,22,0.729,23,0.941,26,1.247,27,3.5,35,1.959,40,0.535,44,2.119,46,0.961,48,1.353,52,1.353,53,3.908,54,3.132,55,4.475,56,4.821,59,1.185,61,1.004,62,0.017,63,0.878,64,0.506,65,0.919,72,2.212,78,1.049,79,1.433,87,2.093,103,3.68,104,3.908,105,2.291,106,1.247,118,0.418,119,0.317,122,2.577,123,1.551,129,0.198,130,0.342,160,2.291,277,0.012,278,0.012,279,1.608,280,2.06,281,4.998,282,3.908,283,2.527,284,5.839,285,6.829,286,3.098,287,3.273,288,4.526,289,4.526,290,5.199,291,4.025,292,4.217,293,4.821,294,5.041,295,5.839,296,2.751,297,2.06,298,2.751,299,2.751,300,2.06,301,2.751,302,4.526,303,2.953,304,3.809,305,2.426,306,4.526,307,4.526,308,4.526,309,3.196,310,4.526,311,3.196,312,4.526,313,1.209,314,1.095,315,4.526,316,1.608,317,5.839,318,4.526,319,5.041,320,2.751,321,4.526,322,3.908,323,4.526,324,2.953,325,3.908,326,4.526,327,4.526]],["title/modules/AppModule.html",[328,0.737,329,2.682]],["body/modules/AppModule.html",[1,2.085,3,0.163,4,0.145,9,0.145,11,0.723,12,0.809,13,1.681,14,2.377,15,4.535,16,1,17,3.192,18,2.334,20,1.806,22,0.789,23,1.13,26,1.74,57,2.631,62,0.017,69,1.169,75,0.991,102,2.631,118,0.459,119,0.261,120,3.217,125,2.631,129,0.163,130,0.282,146,1.398,156,3.028,232,0.827,275,1.119,277,0.011,278,0.011,283,1.613,305,1.997,328,1.387,329,5.528,330,1.982,331,1.613,332,3.198,333,3.353,334,2.968,335,1.277,336,3.217,337,3.217,338,3.217,339,3.217,340,4.466,341,4.466,342,4.16,343,4.16,344,4.16,345,4.16,346,4.16,347,2.596,348,1.886,349,1.886,350,3.727,351,5.063,352,3.117,353,5.129,354,4.535,355,3.826,356,5.129,357,2.102,358,3.727,359,2.265,360,3.727,361,5.129,362,4.428,363,3.727,364,5.129,365,2.882,366,3.727,367,3.966,368,1.536,369,3.727,370,3.727,371,2.122,372,2.459,373,2.431,374,2.631,375,5.129,376,2.122,377,1.886,378,2.265,379,2.265,380,3.727,381,2.749,382,1.997,383,3.621,384,2.631,385,5.129,386,3.727,387,5.129,388,3.727,389,2.102,390,3.727,391,3.727,392,3.727,393,3.621,394,1.787,395,4.535,396,1.027,397,3.727,398,3.339,399,3.727,400,3.727,401,3.727,402,3.727,403,3.772,404,3.727,405,3.727,406,1.687,407,3.727,408,3.727,409,2.265,410,3.727,411,3.727,412,3.727,413,3.727,414,2.882,415,3.727,416,3.217,417,3.217,418,3.727,419,3.727,420,3.966,421,3.727,422,2.265,423,3.727,424,3.727,425,3.217,426,3.727,427,3.727,428,1.696,429,3.727]],["title/modules/AppRoutingModule.html",[328,0.737,340,2.478]],["body/modules/AppRoutingModule.html",[3,0.188,4,0.166,9,0.166,12,0.908,14,2.446,15,5.172,16,1.1,17,3.245,20,1.131,22,0.536,23,1.188,26,1.181,27,3.316,62,0.017,69,1.769,72,1.288,75,0.953,87,1.537,93,2.798,94,1.288,105,2.171,118,0.334,119,0.3,123,1.47,129,0.188,130,0.324,137,2.442,277,0.012,278,0.012,281,3.316,283,2.439,301,2.606,313,0.759,328,1.448,330,1.346,335,1.932,340,4.364,343,2.606,344,2.606,345,2.606,346,2.606,354,3.316,357,1.537,389,2.021,393,3.028,395,3.316,396,1.735,398,3.21,403,2.442,406,1.998,422,2.606,428,2.565,430,2.442,431,3.375,432,2.864,433,2.115,434,3.98,435,3.028,436,4.289,437,3.702,438,4.334,439,4.906,440,3.316,441,4.289,442,4.289,443,4.289,444,4.289,445,3.702,446,6.689,447,3.585,448,6.689,449,4.289,450,4.289,451,4.289,452,4.289,453,4.065,454,4.289,455,4.289,456,4.289,457,4.289,458,4.289,459,4.289,460,4.867,461,5.775,462,5.637,463,3.702,464,4.289,465,4.289,466,4.289,467,4.289,468,4.289,469,5.637,470,3.586,471,4.289,472,4.289,473,3.702,474,3.316,475,3.702,476,4.289,477,4.289,478,2.606,479,4.289,480,4.289]],["title/injectables/AuthService.html",[54,1.643,279,1.046]],["body/injectables/AuthService.html",[3,0.141,4,0.125,9,0.125,11,1.218,12,0.852,16,0.954,19,1.958,21,2.102,22,0.841,23,1.052,25,2.781,28,2.567,35,1.394,40,0.381,41,0.643,44,2.057,46,1.591,48,1.073,52,1.073,54,2.003,59,1.478,61,1.449,62,0.017,63,1.268,64,0.73,65,1.326,69,1.7,72,2.263,73,5.114,75,0.916,78,1.687,79,1.027,87,1.155,88,2.102,108,1.857,111,4.43,113,1.027,114,0.94,115,1.518,118,0.421,119,0.225,124,1.394,126,1.631,129,0.141,130,0.243,160,2.343,220,3.997,277,0.01,278,0.01,279,1.275,280,1.466,286,2.598,287,2.84,290,5.388,296,1.958,297,1.466,299,1.958,300,1.466,303,3.02,313,1.276,314,1.803,316,1.632,325,2.781,376,1.834,395,2.491,396,1.8,398,1.834,481,2.781,482,5.419,483,5.419,484,4.63,485,5.419,486,4.19,487,4.63,488,5.419,489,3.269,490,5.924,491,4.63,492,4.63,493,2.491,494,3.6,495,4.63,496,2.813,497,4.63,498,3.222,499,2.636,500,4.63,501,4.63,502,3.58,503,3.222,504,3.373,505,4.183,506,3.222,507,4.094,508,3.222,509,3.222,510,4.19,511,2.275,512,5.419,513,2.102,514,0.968,515,3.222,516,3.997,517,5.419,518,2.781,519,4.63,520,3.222,521,4.63,522,2.636,523,1.737,524,2.813,525,2.84,526,5.114,527,3.222,528,4.63,529,4.63,530,3.222,531,3.58,532,4.63,533,3.58,534,4.63,535,3.222,536,5.924,537,2.343,538,3.997,539,4.63,540,4.63,541,3.222,542,1.958,543,1.631,544,3.222,545,3.222,546,3.222,547,3.222,548,2.781,549,3.222,550,2.275,551,2.275,552,2.781,553,3.222,554,3.222,555,3.222,556,3.222,557,3.222,558,5.419,559,2.223,560,3.222,561,2.781,562,3.222,563,3.222,564,3.222,565,5.419,566,4.63,567,3.269,568,2.781,569,3.222,570,3.222,571,3.222,572,4.63,573,3.222,574,3.222,575,3.222,576,3.222,577,3.222,578,3.269,579,3.222,580,3.222]],["title/interfaces/Booking.html",[149,1.728,581,0.88]],["body/interfaces/Booking.html",[3,0.25,4,0.222,9,0.222,40,0.676,41,0.936,62,0.017,64,0.828,65,1.369,118,0.338,129,0.25,149,3.07,277,0.014,278,0.014,320,4.504,514,2.355,581,1.325,582,2.741,583,4.937,584,1.717,585,5.233,586,5.731,587,2.913,588,2.357]],["title/components/BookingComponent.html",[0,0.287,239,1.002]],["body/components/BookingComponent.html",[0,0.488,1,1.244,2,1.829,3,0.197,4,0.175,5,1.48,6,1.48,7,1.48,8,1.48,9,0.175,32,1.48,33,2.373,34,2.454,36,1.751,38,1.751,40,0.534,41,0.809,46,1.237,52,1.046,59,1.311,61,1.001,62,0.017,63,1.253,64,0.721,65,0.917,106,1.244,113,1.293,114,1.183,118,0.382,119,0.316,129,0.197,130,0.341,149,3.214,155,1.046,232,1.001,233,1.911,234,1.911,235,1.48,236,2.237,237,1.48,238,1.48,239,1.8,240,1.48,241,1.244,242,1.208,243,1.48,244,1.244,245,1.48,246,1.191,247,1.48,248,1.244,249,1.911,250,1.191,251,1.48,252,1.191,253,1.48,254,1.191,255,1.48,256,1.191,257,1.48,258,1.244,259,1.48,260,1.191,261,1.253,262,1.48,263,1.141,264,1.48,265,1.191,266,1.48,267,1.191,268,1.244,269,1.48,270,1.191,271,1.48,272,1.244,273,1.191,274,1.141,275,1.356,276,1.48,277,0.012,278,0.012,314,1.411,589,3.898,590,6.456,591,5.83,592,4.992,593,3.803,594,3.676,595,3.898,596,4.395,597,5.83,598,4.515,599,5.83,600,5.276,601,5.89,602,2.952,603,3.319,604,4.515,605,3.188,606,1.861,607,5.83,608,5.83,609,5.83,610,6.822]],["title/injectables/BookingFacadeService.html",[279,1.046,611,2.682]],["body/injectables/BookingFacadeService.html",[3,0.142,4,0.126,9,0.126,11,1.447,12,0.549,16,1.089,18,2.114,20,1.226,22,0.785,23,1.238,28,1.273,35,1.401,40,0.383,41,0.645,48,1.077,52,0.75,59,1.447,61,1.451,62,0.017,63,1.27,64,0.731,65,1.328,72,1.396,75,1.139,78,1.689,79,1.495,87,1.948,89,1.735,90,2.31,91,2.646,95,3.874,103,1.844,108,2.035,113,0.718,114,0.657,118,0.351,119,0.227,124,1.401,129,0.142,130,0.245,137,2.646,149,3.486,261,1.055,277,0.01,278,0.01,279,1.497,280,1.474,283,2.011,300,1.474,305,2.49,316,1.732,396,1.732,406,1.337,433,2.706,499,1.844,504,2.646,514,1.966,525,3.014,537,1.639,551,2.286,559,2.529,581,1.077,584,1.376,595,2.796,596,4.191,605,2.286,606,1.335,611,3.281,612,6.228,613,2.286,614,4.647,615,4.647,616,3.031,617,4.647,618,2.49,619,4.759,620,4.012,621,2.847,622,3.182,623,4.942,624,4.647,625,4.692,626,4.012,627,4.012,628,3.182,629,5.126,630,4.012,631,4.012,632,4.012,633,3.593,634,4.692,635,4.647,636,4.012,637,3.238,638,1.968,639,4.012,640,4.869,641,4.012,642,4.33,643,3.006,644,3.238,645,3.608,646,2.824,647,4.193,648,3.608,649,2.49,650,3.238,651,3.545,652,3.593,653,3.094,654,3.238,655,4.647,656,3.238,657,4.012,658,2.796,659,4.012,660,3.238,661,2.646,662,4.647,663,2.796,664,2.796,665,3.238,666,1.968,667,2.113,668,2.286,669,2.113,670,3.238,671,3.238,672,2.796,673,3.238,674,2.796,675,3.238,676,2.796,677,3.238,678,3.238,679,2.796,680,3.238,681,3.238,682,3.238]],["title/modules/BookingModule.html",[328,0.737,341,2.478]],["body/modules/BookingModule.html",[3,0.24,4,0.213,9,0.213,62,0.017,118,0.449,119,0.384,129,0.24,130,0.415,149,2.499,232,1.218,239,2.004,277,0.014,278,0.014,328,1.066,330,1.723,331,2.377,332,3.57,333,2.78,334,2.78,335,1.882,341,5.051,347,3.334,348,2.78,349,2.78,357,2.361,359,3.338,381,3.53,382,2.944,389,2.361,683,4.742,684,4.742,685,4.742,686,4.954,687,5.493,688,4.002,689,2.944,690,5.093,691,4.248,692,5.493]],["title/modules/BookingRoutingModule.html",[328,0.737,686,2.478]],["body/modules/BookingRoutingModule.html",[0,0.441,3,0.256,4,0.227,9,0.227,62,0.017,118,0.428,119,0.409,123,2.002,129,0.256,130,0.441,239,1.802,277,0.015,278,0.015,313,1.035,330,1.833,335,2.002,357,2.094,389,2.449,430,3.327,431,3.661,432,2.984,447,3.131,594,3.327,686,4.457,693,5.843,694,5.843,695,3.812]],["title/injectables/BookingService.html",[279,1.046,596,2.308]],["body/injectables/BookingService.html",[3,0.104,4,0.092,9,0.092,11,1.412,12,0.533,16,1.021,20,1.342,21,2.402,22,0.759,23,1.214,24,1.271,28,0.932,35,1.026,40,0.28,41,0.511,44,2.266,48,0.853,52,0.853,54,2.631,55,3.695,59,1.446,61,1.431,62,0.017,63,1.22,64,0.781,65,1.276,69,1.596,72,0.712,75,1.062,78,1.664,79,1.533,87,1.617,89,1.271,90,1.997,91,2.096,94,1.355,95,3.318,103,1.35,108,1.743,113,1.221,114,1.118,115,1.805,118,0.382,119,0.166,122,1.35,123,0.813,124,1.026,129,0.104,130,0.179,149,3.428,150,1.381,261,0.876,277,0.008,278,0.008,279,1.243,280,1.079,283,1.593,300,1.079,311,2.599,313,1.189,314,1.092,316,1.731,320,1.441,324,1.547,372,2.163,376,1.35,377,2.574,378,1.441,379,1.441,396,1.731,406,1.059,433,2.281,494,3.09,496,3.09,499,1.35,514,1.888,523,1.381,525,3.27,537,1.2,542,3.819,543,1.2,551,1.674,559,2.474,584,1.409,594,3.318,596,2.237,605,1.674,618,1.973,619,4.557,621,2.163,622,1.973,623,4.648,625,3.895,626,3.178,627,3.178,628,2.725,629,4.391,630,3.178,631,3.178,632,3.178,633,2.847,634,3.895,636,3.178,638,2.237,639,3.178,640,4.437,641,3.178,642,3.819,643,2.574,645,2.742,646,2.237,647,3.591,648,3.09,649,1.973,651,2.943,652,2.847,653,2.569,657,3.178,659,3.178,661,2.096,663,2.047,667,1.547,668,2.599,669,3.318,672,3.178,674,2.047,676,2.047,679,2.047,696,2.047,697,3.681,698,4.512,699,4.512,700,2.943,701,2.599,702,4.512,703,3.681,704,2.047,705,3.681,706,2.371,707,3.681,708,2.371,709,2.371,710,2.371,711,3.681,712,2.371,713,2.599,714,3.318,715,3.346,716,2.371,717,3.318,718,2.847,719,2.847,720,2.847,721,2.847,722,2.599,723,2.599,724,1.674,725,3.591,726,2.847,727,2.402,728,2.599,729,2.521,730,2.847,731,2.371,732,2.371,733,4.512,734,2.371,735,3.681,736,2.371,737,1.271,738,2.402,739,2.943,740,2.402,741,2.371,742,2.371,743,2.371,744,2.371,745,2.371,746,2.371,747,3.681,748,2.402,749,2.943,750,2.047,751,1.834,752,1.834,753,3.178,754,5.086,755,2.371,756,1.834,757,2.371,758,2.371,759,3.592,760,2.371,761,2.943,762,3.318,763,2.047,764,2.943,765,2.371,766,3.178,767,2.371,768,2.047,769,2.371,770,3.489,771,2.371,772,1.834,773,2.371,774,3.681,775,1.834,776,1.834,777,2.371,778,2.371,779,3.681,780,2.847,781,1.834,782,2.371,783,1.834,784,2.847,785,1.834,786,2.371,787,1.834,788,2.047,789,2.371,790,2.371,791,1.834,792,1.834,793,2.371,794,2.371,795,2.371,796,2.371,797,2.371,798,2.371,799,3.681,800,2.371,801,1.674,802,2.371,803,3.681,804,3.681,805,2.371,806,1.834,807,2.371,808,2.371,809,2.371,810,1.35,811,1.674,812,1.834,813,1.547,814,1.441,815,1.547]],["title/interfaces/DialogData.html",[581,0.88,816,2.682]],["body/interfaces/DialogData.html",[0,0.469,3,0.182,4,0.162,9,0.162,11,1.284,12,0.734,13,2.036,14,2.036,16,1.033,22,0.691,23,1.001,33,1.662,34,1.736,36,1.252,38,1.252,40,0.493,41,0.768,44,2.036,52,0.966,62,0.017,63,0.809,64,0.466,69,1.308,72,1.662,75,0.935,79,1.227,87,1.495,96,2.11,99,2.518,114,1.436,118,0.419,119,0.292,129,0.182,130,0.315,146,2.076,242,1.362,246,1.1,277,0.012,278,0.012,297,1.897,314,1.009,368,1.718,394,2.653,396,1.149,406,1.199,422,3.362,537,3.348,559,2.583,581,0.966,582,1.999,618,3.328,666,2.534,729,1.804,816,4.385,817,2.534,818,2.72,819,3.224,820,3.224,821,3.362,822,3.362,823,2.534,824,4.279,825,3.224,826,2.534,827,2.11,828,3.151,829,2.944,830,4.279,831,2.944,832,2.944,833,4.279,834,3.92,835,2.374,836,3.224,837,3.224,838,2.374,839,3.61,840,3.6,841,3.6,842,3.224,843,3.224,844,2.534,845,3.61,846,2.72,847,2.801,848,4.279,849,2.234,850,3.907,851,4.279,852,3.6,853,3.224,854,3.907,855,3.224,856,3.224,857,2.72,858,3.907,859,2.374,860,2.944,861,3.362,862,3.224,863,3.6,864,3.6,865,3.224,866,2.944,867,5.472,868,3.792,869,4.3,870,2.72,871,2.374,872,2.374,873,2.374,874,2.374,875,3.224,876,3.907,877,3.907,878,4.279,879,4.279,880,2.72,881,3.6,882,3.6,883,3.224,884,3.224,885,3.6,886,3.224]],["title/interfaces/Establishment.html",[242,0.673,581,0.88]],["body/interfaces/Establishment.html",[3,0.235,4,0.209,9,0.209,40,0.636,41,0.903,62,0.017,64,0.862,118,0.318,129,0.285,242,1.152,277,0.014,278,0.014,314,1.936,514,2.1,523,2.725,581,1.507,582,2.58,584,1.683,587,2.115,588,2.218,871,4.136,872,4.136,873,4.136,874,4.136,887,4.162,888,4.136,889,3.677,890,5.408,891,3.8,892,4.647]],["title/components/EstablishmentAddComponent.html",[0,0.287,241,1.046]],["body/components/EstablishmentAddComponent.html",[0,0.401,1,0.71,2,1.231,3,0.113,4,0.1,5,0.845,6,0.845,7,0.845,8,0.845,9,0.206,11,1.253,12,0.712,13,1.742,14,2.116,16,1.064,22,0.752,23,0.921,32,0.845,33,2.237,34,2.285,36,1.179,38,1.179,40,0.305,41,0.545,44,1.742,46,0.833,48,0.909,52,0.909,59,1.342,61,0.87,62,0.017,63,1.11,64,0.673,65,0.796,69,1.491,72,1.881,75,1.018,77,3.034,78,1.101,79,1.336,86,1.172,87,1.904,91,2.234,94,1.179,96,3.17,99,2.741,106,0.71,111,4.037,113,0.87,114,0.796,115,0.845,118,0.371,119,0.18,129,0.113,130,0.195,146,1.472,150,0.967,155,0.597,164,1.013,167,1.115,169,1.617,170,1.467,173,1.681,195,2.887,203,1.881,211,1.172,217,2.405,218,2.793,221,1.235,222,2.189,223,2.278,226,1.819,230,2.247,232,0.571,233,1.286,234,1.286,235,0.845,236,1.742,237,0.845,238,0.845,239,0.68,240,0.845,241,1.463,242,1.298,243,0.845,244,0.71,245,0.845,246,0.68,247,0.845,248,0.71,249,1.286,250,0.68,251,0.845,252,0.68,253,0.845,254,0.68,255,0.845,256,0.68,257,0.845,258,0.71,259,0.845,260,0.68,261,0.922,262,0.845,263,0.651,264,0.845,265,0.68,266,0.845,267,0.68,268,0.71,269,0.845,270,0.68,271,0.845,272,0.71,273,0.68,274,0.651,275,0.774,276,0.845,277,0.008,278,0.008,297,1.172,309,4.037,313,0.841,314,0.949,316,0.71,368,1.062,371,1.467,372,2.741,373,3.1,374,1.819,394,2.887,396,1.659,406,1.129,422,3.66,523,1.783,537,3.049,559,2.26,567,1.819,584,0.597,587,1.013,588,1.062,603,1.467,618,3.228,666,2.384,729,2.056,810,1.467,817,4.099,820,1.992,821,3.228,822,2.887,823,1.566,824,4.108,825,1.992,826,1.566,827,1.304,828,3.025,829,1.819,834,3.765,835,2.234,836,3.034,842,3.674,844,2.887,845,3.1,846,2.56,847,2.689,848,3.674,849,2.103,850,3.751,854,3.751,855,3.034,856,3.034,857,2.56,858,4.253,859,2.706,861,2.887,862,3.034,865,1.992,866,1.819,869,3.66,870,2.56,871,2.234,872,2.234,873,2.234,874,2.234,875,1.992,877,4.253,878,4.108,879,4.108,880,2.56,883,1.992,884,3.034,886,1.992,888,2.234,889,1.304,890,1.992,893,4.762,894,2.224,895,2.234,896,4.018,897,3.387,898,4.108,899,4.752,900,3.923,901,4.752,902,5.312,903,5.312,904,3.923,905,2.224,906,4.586,907,3.923,908,3.674,909,2.576,910,2.576,911,3.923,912,2.576,913,3.923,914,4.936,915,3.034,916,4.752,917,2.224,918,2.576,919,2.576,920,2.576,921,2.576,922,2.77,923,4.752,924,3.923,925,2.576,926,3.923,927,2.576,928,2.576,929,2.576,930,2.576,931,2.576,932,2.576,933,2.576,934,3.751,935,2.224,936,3.751,937,4.586,938,3.751,939,4.102,940,2.224,941,2.224,942,2.224,943,2.224,944,2.576,945,2.576,946,2.576,947,2.576,948,2.576,949,2.576,950,2.576,951,2.576,952,3.751,953,1.681,954,3.034,955,3.387,956,3.387,957,1.992,958,2.224,959,1.992,960,2.224,961,2.224,962,3.228,963,2.278,964,2.224,965,3.355,966,2.224,967,1.992,968,2.224,969,1.681,970,1.381,971,1.992,972,2.224,973,3.923,974,3.923,975,1.467,976,3.923,977,1.992,978,2.224]],["title/components/EstablishmentComponent.html",[0,0.287,244,1.046]],["body/components/EstablishmentComponent.html",[0,0.435,1,0.991,2,1.571,3,0.219,4,0.14,5,1.18,6,1.18,7,1.18,8,1.18,9,0.14,29,2.683,32,1.18,33,2.321,34,2.388,36,1.504,38,1.504,40,0.68,41,0.695,44,1.641,46,1.062,48,1.16,52,1.16,59,1.328,61,1.11,62,0.017,63,1.208,64,0.695,65,1.016,78,0.834,79,1.11,106,0.991,113,0.798,114,0.73,118,0.341,119,0.252,129,0.157,130,0.272,148,2.541,150,1.35,155,0.834,164,1.967,166,3.975,167,2.693,169,2.063,170,2.049,171,2.683,175,3.266,180,2.783,182,3.042,183,2.783,186,2.347,189,2.187,195,3.042,198,3.335,200,2.541,201,2.541,210,2.783,211,3.161,215,4.619,217,2.534,218,2.931,219,4.322,221,1.725,222,2.063,223,1.725,224,2.049,226,2.541,227,3.042,228,2.683,230,1.414,231,2.049,232,0.798,233,1.641,234,1.641,235,1.18,236,2.04,237,1.18,238,1.18,239,0.949,240,1.18,241,0.991,242,1.364,243,1.18,244,1.714,245,1.18,246,0.949,247,1.18,248,0.991,249,1.641,250,0.949,251,1.18,252,0.949,253,1.18,254,0.949,255,1.18,256,0.949,257,1.18,258,0.991,259,1.18,260,0.949,261,1.27,262,1.18,263,0.909,264,1.18,265,0.949,266,1.18,267,0.949,268,0.991,269,1.18,270,0.949,271,1.18,272,0.991,273,0.949,274,0.909,275,1.081,276,1.18,277,0.011,278,0.011,316,0.991,593,3.266,603,2.85,729,2.831,737,1.928,817,4.115,959,2.783,970,2.683,975,2.85,977,2.783,979,3.106,980,5.757,981,5.757,982,5.006,983,5.757,984,5.757,985,5.757,986,5.006,987,3.598,988,5.373,989,4.222,990,5.006,991,4.322,992,3.598,993,5.006,994,6.223,995,3.598,996,3.598,997,3.598,998,3.106,999,3.598,1000,3.598,1001,3.535,1002,5.006,1003,5.006,1004,5.006,1005,5.006,1006,5.006,1007,6.223,1008,5.006,1009,5.006,1010,5.006,1011,5.006,1012,3.535,1013,5.006,1014,4.322,1015,5.006,1016,2.85,1017,5.006,1018,3.598,1019,3.871,1020,2.187,1021,3.598,1022,3.598,1023,3.598,1024,3.756,1025,3.598,1026,4.97,1027,5.006,1028,3.598,1029,3.598,1030,3.598,1031,3.106,1032,3.106,1033,3.598,1034,3.598,1035,2.783,1036,3.598,1037,3.598,1038,3.598,1039,3.598]],["title/components/EstablishmentEditComponent.html",[0,0.287,246,1.002]],["body/components/EstablishmentEditComponent.html",[0,0.424,1,0.793,2,1.338,3,0.126,4,0.112,5,0.944,6,0.944,7,0.944,8,0.944,9,0.165,11,1.219,12,0.742,13,1.841,14,2.059,16,1.076,22,0.701,23,0.966,32,0.944,33,2.269,34,2.326,36,1.281,38,1.281,40,0.34,41,0.592,44,1.665,46,0.905,48,0.988,52,0.988,59,1.408,61,0.638,62,0.017,63,1.09,64,0.701,65,0.584,69,0.903,72,1.687,75,0.949,78,0.988,79,1.246,87,1.529,90,1.461,96,2.571,99,2.556,106,0.793,113,0.946,114,1.355,118,0.372,119,0.201,129,0.126,130,0.217,146,2.107,150,1.08,155,0.667,164,1.131,167,1.246,169,1.186,173,1.878,195,2.591,203,1.38,217,2.158,218,2.717,221,1.38,222,2.093,223,2.044,230,1.996,232,0.638,233,1.398,234,1.398,235,0.944,236,1.841,237,0.944,238,0.944,239,0.759,240,0.944,241,0.793,242,1.332,243,0.944,244,0.793,245,0.944,246,1.482,247,0.944,248,0.793,249,1.398,250,0.759,251,0.944,252,0.759,253,0.944,254,0.759,255,0.944,256,0.759,257,0.944,258,0.793,259,0.944,260,0.759,261,0.986,262,0.944,263,0.727,264,0.944,265,0.759,266,0.944,267,0.759,268,0.793,269,0.944,270,0.759,271,0.944,272,0.793,273,0.759,274,0.727,275,0.865,276,0.944,277,0.009,278,0.009,297,1.31,314,1.032,368,1.186,394,2.692,396,1.175,406,1.227,422,3.413,523,1.6,537,3.035,559,2.25,567,2.032,581,0.667,603,1.639,618,3.365,621,2.044,666,2.591,729,2.198,816,4.234,817,4.275,818,4.59,819,2.226,820,2.226,821,3.413,822,3.087,823,1.749,824,4.637,825,2.226,826,1.749,827,1.457,828,3.198,829,2.032,830,4.343,831,2.032,832,2.032,833,3.928,834,3.701,835,2.428,836,3.298,837,3.298,838,2.428,839,3.664,840,3.681,841,4.385,842,3.928,843,3.928,844,3.087,845,3.314,846,2.782,847,2.843,848,3.928,849,2.285,850,3.965,851,4.343,852,3.681,853,3.298,854,4.434,855,3.928,856,3.928,857,3.314,858,4.434,859,2.892,860,3.586,861,3.816,862,3.298,863,2.485,864,2.485,865,2.226,866,2.032,867,4.856,868,3.365,869,3.816,870,3.314,871,1.639,872,1.639,873,1.639,874,1.639,875,2.226,876,3.011,877,3.965,878,4.343,879,4.343,880,2.782,881,4.849,882,2.485,883,2.226,884,3.298,885,4.849,886,2.226,905,2.485,917,2.485,952,3.965,953,1.878,954,3.298,955,3.681,957,2.226,958,2.485,959,2.226,960,2.485,961,2.485,962,2.591,963,1.38,964,2.485,965,3.011,966,2.485,967,2.226,968,2.485,969,1.878,970,1.543,971,2.226,972,2.485,978,2.485,1040,4.264,1041,2.878,1042,2.878,1043,2.878,1044,2.878,1045,2.878,1046,2.878,1047,2.878,1048,2.878,1049,4.264,1050,3.681]],["title/injectables/EstablishmentFacadeService.html",[279,1.046,828,2.163]],["body/injectables/EstablishmentFacadeService.html",[3,0.196,4,0.173,9,0.173,35,1.935,40,0.529,41,0.804,48,1.342,52,1.036,59,1.527,61,1.6,62,0.017,63,1.4,64,0.806,65,1.465,78,1.701,79,1.629,108,2.33,113,0.992,114,0.908,118,0.402,119,0.313,124,1.935,129,0.196,130,0.338,242,1.395,277,0.012,278,0.012,279,1.596,280,2.035,300,2.035,313,0.792,316,1.873,514,2.167,525,3.081,584,1.342,606,1.843,613,3.158,628,3.643,642,4.523,643,3.441,646,3.521,828,3.299,989,4.384,998,3.861,1051,6.55,1052,4.48,1053,4.48,1054,5.002,1055,5.869,1056,5.002,1057,4.97,1058,3.861,1059,5.794,1060,4.48,1061,3.861,1062,5.002,1063,4.472,1064,3.861,1065,5.002,1066,4.472,1067,4.472,1068,5.002,1069,4.472,1070,3.459,1071,4.472,1072,5.002,1073,4.472,1074,3.861,1075,4.472,1076,4.472,1077,4.472,1078,3.861,1079,4.472,1080,4.472]],["title/components/EstablishmentListComponent.html",[0,0.287,248,1.046]],["body/components/EstablishmentListComponent.html",[0,0.435,1,0.836,2,1.391,3,0.133,4,0.118,5,0.995,6,0.995,7,0.995,8,0.995,9,0.118,11,1.422,12,0.619,13,1.888,16,0.765,20,1.617,22,0.863,23,1.065,26,1.587,32,0.995,33,2.284,34,2.344,36,1.332,38,1.332,40,0.359,41,0.615,46,0.941,48,1.027,52,0.703,59,1.425,61,1.162,62,0.017,63,1.283,64,0.757,65,1.063,69,0.952,78,1.335,79,1.359,90,2.193,99,2.621,106,0.836,113,0.983,114,0.9,115,1.717,118,0.341,119,0.212,129,0.133,130,0.229,150,1.138,155,0.703,156,2.511,164,1.193,169,1.251,218,1.313,221,1.455,222,1.251,230,1.193,232,0.673,233,1.453,234,1.453,235,0.995,236,1.888,237,0.995,238,0.995,239,0.801,240,0.995,241,1.221,242,1.363,243,0.995,244,0.836,245,0.995,246,0.801,247,0.995,248,1.587,249,1.453,250,0.801,251,0.995,252,0.801,253,0.995,254,0.801,255,0.995,256,0.801,257,0.995,258,0.836,259,0.995,260,0.801,261,1.016,262,0.995,263,0.767,264,0.995,265,0.801,266,0.995,267,0.801,268,0.836,269,0.995,270,0.801,271,0.995,272,0.836,273,0.801,274,0.767,275,0.911,276,0.995,277,0.009,278,0.009,314,1.073,371,2.524,406,1.275,433,1.663,523,1.663,537,3.345,559,1.965,592,4.05,593,2.892,603,2.524,606,1.251,616,2.892,621,2.125,622,2.376,649,3.087,661,3.28,817,4.325,826,1.844,827,1.536,834,3.763,839,2.892,845,1.98,847,2.244,849,3.429,857,3.417,859,3.28,871,3.28,872,3.28,873,2.524,874,3.28,888,3.28,893,2.142,898,4.455,908,4.455,915,4.05,922,3.698,967,2.346,969,1.98,970,1.626,971,2.346,1001,3.13,1012,3.13,1014,3.827,1024,2.892,1035,3.428,1081,5.503,1082,2.346,1083,2.892,1084,3.698,1085,4.522,1086,3.827,1087,4.973,1088,3.827,1089,3.827,1090,5.76,1091,2.511,1092,3.428,1093,4.326,1094,3.417,1095,3.034,1096,4.973,1097,3.034,1098,4.522,1099,3.13,1100,3.698,1101,3.827,1102,3.034,1103,4.666,1104,3.034,1105,3.034,1106,3.034,1107,3.034,1108,4.433,1109,3.034,1110,4.433,1111,3.034,1112,3.034,1113,3.034,1114,4.067,1115,2.346,1116,2.62,1117,5.238,1118,4.522,1119,4.522,1120,2.62,1121,3.034,1122,3.034,1123,3.034,1124,3.034,1125,4.433,1126,4.433,1127,4.433,1128,3.428]],["title/modules/EstablishmentModule.html",[328,0.737,342,2.308]],["body/modules/EstablishmentModule.html",[3,0.196,4,0.174,9,0.174,62,0.017,118,0.466,119,0.314,129,0.196,130,0.339,232,0.995,241,1.989,244,2.118,246,1.905,248,1.989,250,1.905,277,0.012,278,0.012,328,0.871,330,1.408,331,1.942,332,3.258,333,2.272,334,2.939,335,2.206,342,4.822,347,2.939,348,2.272,349,2.272,357,2.082,367,4.491,368,2.393,381,3.112,382,2.405,383,4.1,384,3.169,389,2.082,688,3.529,689,3.112,690,4.491,691,3.471,818,2.928,826,2.728,893,3.169,963,2.152,1081,3.471,1115,4.978,1116,3.875,1129,3.875,1130,3.875,1131,3.875,1132,3.875,1133,4.711,1134,5.584,1135,5.584,1136,5.584,1137,4.488,1138,4.488,1139,4.488,1140,4.488,1141,3.788,1142,2.928,1143,3.875,1144,4.488,1145,3.169,1146,2.556,1147,5.807,1148,4.1,1149,3.169,1150,3.875,1151,3.788,1152,2.928,1153,4.545,1154,4.488]],["title/components/EstablishmentPageComponent.html",[0,0.287,250,1.002]],["body/components/EstablishmentPageComponent.html",[0,0.428,1,0.808,2,1.356,3,0.128,4,0.114,5,0.961,6,0.961,7,0.961,8,0.961,9,0.114,11,1.387,12,0.511,13,1.858,16,1.064,19,2.627,20,1.725,22,0.817,23,1.163,24,3.037,26,1.561,29,2.317,30,3.12,32,0.961,33,2.275,34,2.332,36,1.299,38,1.299,40,0.347,41,0.6,44,0.961,46,0.917,48,1.002,50,3.238,52,1.002,59,1.362,61,1.257,62,0.017,63,1.227,64,0.675,65,1.15,69,2.149,75,0.868,78,1.4,79,1.488,83,3.343,87,2.405,89,2.752,90,2.071,99,1.334,103,1.67,106,1.801,108,1.482,113,0.65,114,0.595,118,0.374,119,0.205,129,0.128,130,0.222,155,0.679,156,2.462,232,0.65,233,1.417,234,1.417,235,0.961,236,1.858,237,0.961,238,0.961,239,0.774,240,0.961,241,0.808,242,1.383,243,0.961,244,0.808,245,0.961,246,1.141,247,0.961,248,0.808,249,1.417,250,1.495,251,0.961,252,0.774,253,0.961,254,0.774,255,0.961,256,0.774,257,0.961,258,0.808,259,0.961,260,0.774,261,0.997,262,0.961,263,0.741,264,0.961,265,0.774,266,0.961,267,0.774,268,0.808,269,0.961,270,0.774,271,0.961,272,0.808,273,0.774,274,0.741,275,0.881,276,0.961,277,0.009,278,0.009,297,1.334,313,0.766,316,1.191,328,0.569,371,3.227,394,2.072,396,1.665,428,1.967,504,2.924,514,0.881,543,1.484,559,2.267,584,1.4,621,2.072,622,2.317,643,2.868,648,2.627,649,2.317,666,2.627,729,1.269,814,1.782,818,1.913,826,1.782,827,1.484,828,3.227,829,2.07,834,3.227,838,2.462,845,1.913,849,3.504,854,2.07,857,4.265,858,2.07,859,3.966,860,3.052,861,3.12,876,4.266,895,1.67,896,2.627,922,3.052,954,3.343,989,3.12,1052,3.343,1053,3.343,1057,3.343,1058,2.532,1060,3.343,1070,3.343,1072,3.732,1074,2.532,1078,2.532,1091,2.462,1093,2.07,1094,1.913,1096,5.217,1098,5.458,1099,3.626,1100,3.626,1101,4.433,1115,2.268,1145,4.836,1150,2.532,1155,5.914,1156,2.07,1157,3.732,1158,3.732,1159,3.732,1160,3.732,1161,3.971,1162,3.343,1163,5.667,1164,3.732,1165,4.433,1166,2.932,1167,4.323,1168,2.932,1169,2.532,1170,2.932,1171,2.932,1172,4.323,1173,2.932,1174,2.932,1175,2.932,1176,2.932,1177,4.323,1178,2.268,1179,2.932,1180,2.932,1181,2.932,1182,2.932,1183,2.932,1184,2.932,1185,2.932,1186,2.07,1187,2.932,1188,2.932,1189,2.932,1190,2.532]],["title/modules/EstablishmentRouting.html",[328,0.737,1133,2.478]],["body/modules/EstablishmentRouting.html",[0,0.43,3,0.249,4,0.221,9,0.221,62,0.017,118,0.447,119,0.398,123,1.951,129,0.249,130,0.43,250,1.775,277,0.014,278,0.014,313,1.008,330,1.786,335,1.951,357,2.04,389,2.412,431,3.605,432,2.773,447,3.051,1091,2.729,1133,4.389,1145,4.019,1146,3.241,1191,5.693,1192,5.693,1193,5.693,1194,4.75,1195,4.915,1196,4.75,1197,4.915,1198,3.241,1199,4.915,1200,4.915]],["title/injectables/EstablishmentService.html",[279,1.046,989,2.308]],["body/injectables/EstablishmentService.html",[3,0.147,4,0.131,9,0.131,35,1.458,40,0.398,41,0.663,44,2.356,48,1.107,52,0.781,59,1.503,61,1.545,62,0.017,63,1.324,64,0.82,65,1.384,78,1.614,79,1.594,108,2.072,113,1.416,114,1.296,115,1.982,118,0.404,119,0.236,124,1.458,129,0.147,130,0.255,150,1.793,242,1.37,277,0.01,278,0.01,279,1.317,280,1.533,299,2.047,300,1.533,311,3.375,313,1.273,314,1.344,316,1.879,324,2.198,372,2.898,376,1.918,377,3.06,378,2.047,379,2.047,493,2.605,494,3.674,496,2.905,514,2.093,525,3.398,542,3.376,584,1.479,606,1.389,628,3.24,638,2.905,642,4.029,643,3.06,646,2.905,700,3.624,701,3.375,713,3.375,714,3.624,715,3.879,717,3.624,724,2.379,729,2.616,737,1.806,738,3.118,739,3.624,740,3.118,748,2.198,749,4.164,759,4.326,761,3.944,762,4.326,763,2.909,764,3.624,766,2.909,770,4.296,772,2.605,775,2.605,776,2.605,780,3.696,781,2.605,783,2.605,784,3.696,785,2.605,787,2.605,788,2.909,791,2.605,792,2.605,806,2.605,813,2.198,814,2.047,815,2.198,827,1.705,989,2.905,1052,3.696,1053,3.696,1054,4.127,1055,5.219,1056,4.127,1057,4.296,1060,3.696,1062,4.127,1065,4.127,1068,4.127,1070,2.605,1091,2.663,1094,2.198,1186,2.379,1201,2.909,1202,5.555,1203,5.555,1204,4.78,1205,3.369,1206,3.369,1207,3.369,1208,3.369,1209,3.369,1210,3.369,1211,3.369,1212,3.369,1213,4.78,1214,3.369,1215,3.369,1216,4.78,1217,3.369,1218,3.369,1219,3.369,1220,3.369,1221,3.369,1222,3.369,1223,4.78,1224,3.369,1225,2.909,1226,4.78,1227,4.78,1228,3.369,1229,5.555,1230,3.369,1231,3.369,1232,3.369,1233,2.909,1234,2.909,1235,2.909,1236,2.605,1237,3.369,1238,3.369,1239,3.369,1240,3.369,1241,3.369]],["title/interfaces/FilterPayload.html",[581,0.88,1242,2.308]],["body/interfaces/FilterPayload.html",[0,0.471,3,0.219,4,0.194,9,0.194,33,1.507,36,1.507,38,1.507,40,0.593,41,0.865,59,1.018,62,0.017,64,0.85,79,1.112,115,1.644,118,0.401,119,0.351,129,0.272,130,0.379,146,1.882,261,1.316,265,1.323,277,0.013,278,0.013,298,3.048,313,1.103,314,1.908,581,1.162,582,2.405,588,2.067,602,3.155,606,2.067,868,2.688,1103,4.786,1114,4.399,1242,4.119,1243,4.818,1244,3.786,1245,3.879,1246,3.69,1247,5.016,1248,4.786,1249,5.016,1250,2.856,1251,3.249,1252,3.048,1253,4.33,1254,4.33,1255,4.33,1256,4.33,1257,4.33,1258,4.33,1259,4.33,1260,4.33,1261,4.33,1262,5.379,1263,4.33,1264,4.33,1265,4.33,1266,4.33,1267,4.399,1268,4.33,1269,4.33]],["title/interfaces/FormattedOpeningHour.html",[581,0.88,891,2.682]],["body/interfaces/FormattedOpeningHour.html",[3,0.253,4,0.224,9,0.224,40,0.684,41,0.943,62,0.017,64,0.647,118,0.343,129,0.297,242,1.025,277,0.014,278,0.014,314,1.901,514,1.739,523,2.172,581,1.574,582,2.775,584,1.341,587,2.275,588,2.386,871,3.296,872,3.296,873,3.296,874,3.296,887,4.477,888,3.296,889,2.93,890,4.477,891,4.797,892,6.424]],["title/components/HomeComponent.html",[0,0.287,252,1.002]],["body/components/HomeComponent.html",[0,0.521,1,1.05,2,1.634,3,0.167,4,0.148,5,1.707,6,1.707,7,1.249,8,1.249,9,0.148,11,0.739,12,0.754,13,2.189,16,0.931,17,2.369,19,3.164,20,1.682,22,0.65,23,1.027,26,1.434,32,1.249,33,2.335,34,2.415,36,1.564,38,1.564,40,0.45,41,0.723,46,1.105,59,0.773,62,0.017,63,1.011,64,0.663,75,1.128,94,1.144,96,2.636,105,2.636,106,1.899,107,4.931,113,0.845,114,0.773,118,0.351,119,0.267,129,0.167,130,0.288,150,1.954,155,0.883,156,3.057,163,2.946,166,3.164,167,1.649,186,3.397,189,4.057,203,1.826,204,3.289,215,3.677,218,2.253,221,1.826,222,2.146,228,2.791,230,2.047,231,2.169,232,0.845,233,2.09,234,1.707,235,1.249,236,2.09,237,1.249,238,1.249,239,1.005,240,1.249,241,1.05,242,1.305,243,1.249,244,1.05,245,1.249,246,1.005,247,1.249,248,1.05,249,1.707,250,1.005,251,1.249,252,1.818,253,1.249,254,1.005,255,1.249,256,1.005,257,1.249,258,1.05,259,1.249,260,1.005,261,1.151,262,1.249,263,0.963,264,1.249,265,1.005,266,1.249,267,1.005,268,1.05,269,1.249,270,1.005,271,1.249,272,1.05,273,1.005,274,0.963,275,1.144,276,1.249,277,0.011,278,0.011,398,2.965,406,1.92,409,4.188,428,1.734,433,2.226,438,3.164,511,4.502,537,3.227,616,2.486,618,3.417,620,3.289,667,3.397,827,1.928,849,3.694,914,5.505,975,2.169,1016,2.169,1019,2.946,1020,2.315,1024,3.87,1083,3.397,1091,3.304,1270,3.289,1271,4.496,1272,5.505,1273,4.588,1274,5.932,1275,5.207,1276,3.81,1277,5.207,1278,5.207,1279,2.946,1280,3.81,1281,3.289,1282,3.81,1283,3.81,1284,3.289,1285,3.289,1286,3.81,1287,3.81,1288,3.81,1289,3.81,1290,3.81,1291,3.81,1292,4.027,1293,3.81,1294,2.946,1295,3.81]],["title/modules/HomeModule.html",[328,0.737,343,2.308]],["body/modules/HomeModule.html",[3,0.183,4,0.162,9,0.162,11,0.81,12,0.913,13,2.037,14,1.368,18,2.52,20,1.461,22,0.95,23,0.892,24,2.968,26,1.989,28,2.442,62,0.017,75,1.31,86,2.52,100,5.118,118,0.444,119,0.292,129,0.183,130,0.315,155,1.44,232,0.926,252,1.905,277,0.012,278,0.012,283,2.396,328,1.505,330,2.266,331,1.806,332,3.145,333,2.113,334,2.113,335,1.431,342,4.511,343,4.711,347,2.803,348,2.113,349,2.113,352,3.365,355,4.054,357,1.985,359,2.537,381,2.968,382,2.237,383,3.91,384,2.947,389,2.227,403,3.768,406,1.904,409,3.365,432,2.282,453,4.022,470,3.538,533,4.282,688,3.365,689,2.237,849,3.33,1099,3.91,1141,3.612,1142,2.723,1271,5.365,1273,4.282,1296,3.604,1297,3.604,1298,3.604,1299,4.963,1300,4.843,1301,4.174,1302,5.537,1303,6.214,1304,4.174,1305,3.604,1306,4.174,1307,5.537,1308,4.174,1309,4.174,1310,4.174,1311,4.174,1312,4.174,1313,3.604]],["title/modules/HomeRoutingModule.html",[328,0.737,1299,2.478]],["body/modules/HomeRoutingModule.html",[0,0.52,3,0.202,4,0.179,9,0.179,12,0.886,14,1.515,16,1.039,20,1.219,22,0.815,23,1.052,24,2.476,26,1.63,62,0.017,69,1.856,75,1.103,81,4.576,86,2.103,94,1.777,99,2.103,102,4.178,105,3.304,118,0.431,119,0.323,123,1.584,129,0.202,130,0.349,137,2.631,242,1.048,252,1.816,260,1.816,261,1.148,263,1.495,267,1.561,268,1.896,275,1.388,277,0.013,278,0.013,292,3.015,313,0.818,328,1.336,330,1.45,335,1.584,352,2.808,357,1.656,389,2.34,396,1.273,403,2.631,422,2.808,428,2.103,430,2.631,431,3.688,432,2.932,433,2.22,434,3.263,438,2.808,447,3.688,460,5.108,461,3.989,463,3.989,470,3.716,473,3.989,513,3.015,584,1.071,695,3.015,877,3.263,1146,2.631,1198,3.716,1273,5.047,1299,3.86,1305,3.989,1313,3.989,1314,4.621,1315,4.576,1316,3.263,1317,3.989,1318,3.015,1319,4.621,1320,3.263,1321,3.989,1322,4.621,1323,4.621,1324,4.621,1325,4.621,1326,4.621,1327,4.621,1328,4.621,1329,4.621,1330,4.621,1331,4.621,1332,4.621,1333,4.621,1334,4.621,1335,3.989,1336,4.621,1337,4.621,1338,4.621,1339,4.621,1340,4.621,1341,3.573,1342,4.621]],["title/injectables/InMemoryDataService.html",[279,1.046,377,1.922]],["body/injectables/InMemoryDataService.html",[3,0.147,4,0.131,9,0.131,11,1.078,12,0.824,14,2.173,16,0.968,17,2.174,19,2.903,20,1.749,22,0.828,23,1.122,26,1.665,28,1.877,29,1.804,35,1.457,40,0.398,46,1.282,48,1.107,59,1.295,61,1.34,62,0.017,63,1.173,64,0.675,65,1.227,69,1.499,77,4.673,78,1.614,87,2.166,94,1.815,96,3.059,118,0.425,119,0.236,126,1.704,129,0.147,130,0.254,137,2.72,149,3.102,155,1.4,170,4.295,211,2.75,242,1.13,261,1.287,274,1.76,277,0.01,278,0.01,279,1.53,280,1.532,291,3.441,300,1.532,313,1.07,316,1.758,371,1.917,372,3.268,373,2.196,374,3.92,377,2.418,396,1.919,398,3.441,406,1.374,433,2.696,499,3.441,502,4.673,510,4.673,514,2.129,559,1.792,581,1.107,584,1.614,585,3.373,588,1.387,594,3.634,619,4.267,623,3.116,640,3.373,653,3.441,750,2.906,768,4.124,835,2.72,895,3.774,897,5.217,906,4.124,1091,3.178,1160,4.124,1343,5.723,1344,2.906,1345,4.777,1346,4.777,1347,4.777,1348,4.777,1349,3.373,1350,4.124,1351,6.043,1352,2.903,1353,4.777,1354,4.777,1355,3.366,1356,6.966,1357,5.217,1358,6.204,1359,4.267,1360,4.673,1361,6.043,1362,3.366,1363,4.124,1364,2.903,1365,4.777,1366,5.126,1367,4.777,1368,3.366,1369,4.777,1370,3.366,1371,4.777,1372,3.366,1373,3.366,1374,3.366,1375,3.366,1376,2.906,1377,2.903,1378,2.377,1379,3.366,1380,3.366,1381,6.043,1382,3.366,1383,3.366,1384,3.366,1385,3.366,1386,3.366,1387,3.366]],["title/components/LoginComponent.html",[0,0.287,254,1.002]],["body/components/LoginComponent.html",[0,0.406,1,0.875,2,1.438,3,0.139,4,0.123,5,1.042,6,1.042,7,1.042,8,1.042,9,0.123,11,0.89,12,0.769,13,1.503,14,1.503,16,1.092,17,2.086,22,0.735,23,0.948,32,1.042,33,2.296,34,2.36,36,1.377,38,1.377,40,0.376,41,0.636,44,1.763,46,1.249,48,1.062,52,1.062,54,3.025,55,4.367,59,1.195,61,0.705,62,0.017,63,1.044,64,0.512,65,0.645,69,1.438,72,1.768,75,0.775,78,0.736,79,1.017,87,2.11,88,3.84,99,2.086,102,3.237,105,2.32,106,1.481,107,3.545,113,0.705,114,0.645,118,0.406,119,0.222,122,1.81,123,1.089,126,1.609,129,0.139,130,0.24,132,2.744,134,3.237,146,2.018,155,0.736,160,2.98,164,1.249,165,2.073,167,1.984,171,2.457,175,2.073,182,1.931,186,2.073,187,2.458,195,3.268,198,1.703,203,2.822,209,2.458,217,2.32,218,2.547,222,1.31,223,1.523,228,1.703,230,2.453,231,1.81,232,0.705,233,1.503,234,1.503,235,1.042,236,1.93,237,1.042,238,1.042,239,0.838,240,1.042,241,0.875,242,1.042,243,1.042,244,0.875,245,1.042,246,0.838,247,1.042,248,0.875,249,1.503,250,0.838,251,1.042,252,0.838,253,1.042,254,1.716,255,1.042,256,0.838,257,1.042,258,0.875,259,1.042,260,0.838,261,1.044,262,1.042,263,0.803,264,1.042,265,0.838,266,1.042,267,0.838,268,0.875,269,1.042,270,0.838,271,1.042,272,0.875,273,0.838,274,0.803,275,0.955,276,1.042,277,0.01,278,0.01,290,3.237,291,2.61,293,3.237,298,1.931,304,2.991,313,1.187,314,1.301,316,0.875,324,2.073,368,1.31,396,1.263,433,1.72,445,3.958,489,3.797,522,3.062,523,1.72,524,1.931,543,1.609,559,2.018,616,2.991,821,4.17,822,3.268,823,1.931,844,3.268,847,2.98,868,1.703,869,2.786,962,1.931,963,1.523,965,2.244,969,2.073,970,2.457,1016,1.81,1020,2.786,1165,3.958,1246,1.609,1349,3.237,1388,2.744,1389,4.584,1390,4.156,1391,5.028,1392,5.377,1393,4.584,1394,5.377,1395,5.887,1396,2.744,1397,4.584,1398,4.584,1399,4.584,1400,4.584,1401,2.991,1402,4.584,1403,3.958,1404,4.584,1405,4.584,1406,3.178,1407,4.584,1408,4.584,1409,3.958,1410,4.584,1411,3.178,1412,2.744,1413,2.458,1414,3.178,1415,2.458,1416,3.178,1417,2.744,1418,3.793,1419,3.178,1420,3.545,1421,4.584,1422,3.178,1423,3.178,1424,3.178,1425,4.584,1426,3.178,1427,2.744,1428,3.178,1429,3.178,1430,3.178,1431,2.744,1432,3.178,1433,3.178,1434,3.178,1435,4.584,1436,3.178,1437,3.178,1438,3.178,1439,3.178,1440,3.178,1441,3.178,1442,3.237,1443,3.237,1444,3.178,1445,4.552,1446,3.545,1447,2.073,1448,3.178,1449,1.931,1450,2.244,1451,2.744,1452,2.744,1453,2.744,1454,2.744,1455,3.958,1456,2.744,1457,2.744,1458,2.744,1459,3.178]],["title/modules/LoginModule.html",[328,0.737,344,2.308]],["body/modules/LoginModule.html",[3,0.209,4,0.186,9,0.186,11,0.929,12,0.715,16,1.018,18,2.753,22,0.871,26,1.667,28,2.378,54,3.178,62,0.017,69,1.898,75,1.178,118,0.457,119,0.335,122,2.725,129,0.209,130,0.362,160,3.529,232,1.061,254,1.938,277,0.013,278,0.013,283,2.618,328,1.288,330,2.082,331,2.071,332,3.358,333,2.422,334,3.358,335,1.64,344,4.662,347,3.062,348,2.422,349,2.422,352,3.677,355,4.548,357,2.169,359,2.908,368,1.972,381,3.242,382,2.565,389,2.169,403,3.445,406,1.74,414,4.679,453,3.677,688,3.677,689,2.565,847,3.062,963,2.294,1141,3.947,1142,3.122,1148,4.272,1149,3.379,1151,3.947,1152,3.122,1153,4.272,1449,2.908,1460,4.132,1461,4.132,1462,4.132,1463,4.132,1464,4.791,1465,4.786,1466,4.272,1467,5.223,1468,5.223,1469,4.786,1470,4.786,1471,4.679,1472,3.701]],["title/modules/LoginRoutingModule.html",[328,0.737,1464,2.478]],["body/modules/LoginRoutingModule.html",[0,0.422,3,0.244,4,0.217,9,0.217,12,0.787,13,1.833,16,1.038,22,0.831,23,0.901,62,0.017,64,0.624,75,0.945,118,0.421,119,0.391,123,1.916,129,0.244,130,0.422,160,3.369,254,1.756,277,0.014,278,0.014,283,2.419,313,0.99,328,1.292,330,1.754,335,1.916,357,2.004,389,2.386,406,1.608,430,3.183,431,3.567,432,3.097,434,3.948,447,2.996,470,3.183,489,3.948,695,3.647,1464,4.342,1473,5.591,1474,5.591,1475,3.948]],["title/interfaces/OpeningHour.html",[581,0.88,587,1.493]],["body/interfaces/OpeningHour.html",[3,0.17,4,0.151,9,0.151,11,1.164,12,0.82,16,1.127,20,1.027,22,0.902,23,1.192,40,0.46,41,0.733,62,0.017,64,0.806,75,1.087,86,1.771,90,1.811,93,4.629,94,2.198,129,0.281,155,0.902,261,1.492,277,0.011,278,0.011,301,2.366,305,2.832,313,0.689,314,1.821,394,1.866,435,2.749,438,4.215,439,2.749,478,2.366,514,2.168,531,3.01,581,1.491,582,1.866,584,0.902,587,2.358,600,3.01,602,2.287,645,3.211,653,3.009,859,2.217,889,1.97,934,4.543,936,4.543,938,4.543,953,3.913,1246,1.97,1250,3.416,1352,2.366,1364,2.366,1401,3.913,1476,2.54,1477,4.562,1478,5.179,1479,4.086,1480,4.975,1481,4.975,1482,4.086,1483,4.086,1484,4.562,1485,5.555,1486,4.562,1487,4.562,1488,4.562,1489,3.361,1490,5.487,1491,3.361,1492,3.361,1493,3.361,1494,3.01,1495,3.01,1496,3.01,1497,3.361,1498,5.807,1499,3.731,1500,4.236,1501,4.749,1502,4.236,1503,3.731,1504,3.731,1505,4.749,1506,4.086,1507,4.236,1508,3.731,1509,4.236,1510,4.236,1511,3.731,1512,3.01,1513,3.01,1514,2.366,1515,3.01,1516,4.975,1517,3.01,1518,3.01,1519,3.01,1520,3.01,1521,3.01]],["title/components/RegisterComponent.html",[0,0.287,256,1.002]],["body/components/RegisterComponent.html",[0,0.359,1,0.71,2,1.231,3,0.113,4,0.1,5,0.845,6,0.845,7,0.845,8,0.845,9,0.1,11,0.5,12,0.891,13,1.286,14,1.742,16,1.124,17,1.785,18,2.417,22,0.752,23,0.856,26,1.858,28,2.367,32,0.845,33,2.226,34,2.269,36,1.179,38,1.179,40,0.305,41,0.545,44,2.053,46,1.127,48,0.909,50,2.847,52,0.909,55,3.805,59,1.271,61,0.571,62,0.017,63,0.922,64,0.438,65,0.523,75,1.201,78,1.231,79,1.268,87,1.904,105,1.986,106,1.575,113,0.571,114,0.523,118,0.356,119,0.18,123,0.883,129,0.113,130,0.195,134,2.77,146,1.783,150,1.472,155,0.597,157,1.881,160,1.986,164,1.542,165,1.681,166,1.566,167,1.698,169,1.062,171,2.103,175,1.681,182,2.384,186,1.681,189,1.566,195,2.887,198,2.103,203,2.547,209,1.992,211,1.172,217,1.304,218,2.299,221,1.235,222,1.958,223,1.881,224,1.467,228,1.381,230,2.247,231,2.234,232,0.571,233,1.286,234,1.286,235,0.845,236,1.742,237,0.845,238,0.845,239,0.68,240,0.845,241,0.71,242,0.941,243,0.845,244,0.71,245,0.845,246,0.68,247,0.845,248,0.71,249,1.286,250,0.68,251,0.845,252,0.68,253,0.845,254,0.68,255,0.845,256,1.402,257,0.845,258,0.71,259,0.845,260,0.68,261,0.922,262,0.845,263,0.651,264,0.845,265,0.68,266,0.845,267,0.68,268,0.71,269,0.845,270,0.68,271,0.845,272,0.71,273,0.68,274,0.651,275,0.774,276,0.845,277,0.008,278,0.008,286,2.278,287,3.094,291,3.675,293,3.751,296,1.566,297,1.172,303,3.466,304,2.56,313,1.231,314,1.457,319,2.224,368,1.062,396,1.778,406,1.129,428,2.417,433,1.472,478,2.384,499,2.234,514,0.774,522,3.025,523,1.993,524,1.566,543,1.304,584,0.909,618,2.103,651,2.56,667,1.681,725,2.77,821,3.66,822,2.887,823,1.566,844,2.887,846,2.56,847,3.267,868,2.103,869,3.66,895,3.025,896,3.228,962,1.566,963,1.235,969,1.681,970,2.103,1016,1.467,1020,2.384,1246,1.304,1363,3.387,1364,2.384,1390,2.77,1391,3.034,1396,2.224,1403,3.387,1412,2.224,1413,1.992,1417,2.224,1418,4.099,1420,3.034,1442,4.557,1443,5.106,1445,4.108,1446,3.034,1447,1.681,1449,1.566,1450,1.819,1451,2.224,1452,2.224,1453,2.224,1454,2.224,1455,3.387,1456,2.224,1457,2.224,1458,2.224,1467,3.387,1522,2.224,1523,3.923,1524,5.216,1525,4.108,1526,3.387,1527,3.387,1528,4.752,1529,3.923,1530,4.752,1531,5.312,1532,5.312,1533,5.312,1534,3.923,1535,2.576,1536,6.455,1537,5.312,1538,5.2,1539,6.613,1540,6.455,1541,2.576,1542,3.923,1543,3.923,1544,2.576,1545,3.923,1546,3.923,1547,2.576,1548,5.312,1549,2.77,1550,3.923,1551,3.387,1552,3.923,1553,3.923,1554,2.576,1555,3.923,1556,3.751,1557,3.751,1558,3.929,1559,2.224,1560,2.576,1561,3.923,1562,2.576,1563,2.576,1564,2.576,1565,2.576,1566,2.576,1567,2.576,1568,2.576,1569,2.576,1570,3.923,1571,2.576,1572,2.576,1573,2.224,1574,5.717,1575,2.576,1576,2.576,1577,2.77,1578,2.576,1579,3.923,1580,3.034,1581,3.387,1582,3.923,1583,3.387,1584,3.387,1585,2.576,1586,2.576,1587,2.576,1588,2.576,1589,2.576,1590,2.576]],["title/modules/RegisterModule.html",[328,0.737,345,2.308]],["body/modules/RegisterModule.html",[3,0.214,4,0.19,9,0.19,11,0.951,12,0.896,13,2.013,18,2.794,22,0.878,26,1.691,62,0.017,75,1.037,118,0.456,119,0.343,129,0.214,130,0.37,232,1.086,256,1.949,277,0.013,278,0.013,328,1.405,330,1.537,331,2.12,332,3.394,333,2.479,334,2.479,335,1.679,345,4.606,347,3.107,348,2.479,349,2.479,352,3.731,355,4.005,357,2.201,359,2.977,368,2.019,381,3.29,382,2.625,389,2.201,406,1.766,416,5.3,439,4.335,453,3.731,470,3.496,688,3.731,689,2.625,847,3.107,963,2.348,1141,4.005,1142,3.195,1148,4.335,1149,3.458,1151,4.005,1152,3.195,1153,4.335,1449,2.977,1471,4.748,1472,3.788,1475,4.335,1524,5.436,1591,4.229,1592,4.229,1593,4.229,1594,4.945,1595,4.898,1596,6.139,1597,4.229,1598,4.898]],["title/modules/RegisterRoutingModule.html",[328,0.737,1594,2.478]],["body/modules/RegisterRoutingModule.html",[0,0.424,3,0.245,4,0.217,9,0.217,12,0.788,13,1.838,16,0.819,22,0.833,23,0.903,62,0.017,64,0.626,75,0.948,118,0.421,119,0.392,123,1.922,129,0.245,130,0.424,256,1.759,277,0.014,278,0.014,283,2.427,313,0.993,328,1.294,330,1.759,335,1.922,357,2.01,389,2.39,406,1.613,430,3.193,431,3.573,432,3.1,434,3.959,447,3.005,470,3.193,695,3.658,1475,3.959,1524,5.156,1527,4.841,1594,4.35,1597,4.841,1599,5.608]],["title/interfaces/Session.html",[261,0.737,581,0.88]],["body/interfaces/Session.html",[3,0.163,4,0.145,9,0.145,11,1.362,12,0.829,16,1.133,20,0.984,22,0.906,23,1.22,40,0.441,41,0.712,62,0.017,64,0.846,65,1.283,75,1.068,86,2.335,90,1.278,93,4.577,94,2.178,129,0.276,155,0.864,261,1.516,277,0.011,278,0.011,301,2.267,305,2.751,313,0.661,314,1.808,394,2.46,433,1.4,435,2.634,438,4.162,439,3.624,478,2.267,514,2.147,531,3.969,581,1.464,582,1.788,584,1.464,587,2.484,600,3.969,602,1.614,645,3.841,653,3.599,859,2.922,889,3.199,934,2.634,936,2.634,938,2.634,953,3.828,1246,3.199,1250,3.899,1352,3.841,1364,2.267,1401,3.828,1476,2.434,1477,4.431,1478,5.066,1479,2.885,1480,2.885,1481,2.885,1482,2.885,1483,2.885,1484,3.221,1485,4.431,1486,3.221,1487,3.221,1488,3.221,1489,4.431,1490,5.527,1491,4.431,1492,5.456,1493,4.431,1494,2.885,1495,2.885,1496,2.885,1497,3.221,1498,5.721,1499,3.624,1500,4.143,1501,4.679,1502,4.143,1503,3.624,1504,3.624,1505,4.679,1506,3.969,1507,4.143,1508,3.624,1509,4.143,1510,4.143,1511,3.624,1512,2.885,1513,2.885,1514,2.267,1515,2.885,1516,4.887,1517,2.885,1518,2.885,1519,2.885,1520,2.885,1521,2.885,1600,3.221]],["title/components/SessionComponent.html",[0,0.287,258,1.046]],["body/components/SessionComponent.html",[0,0.447,1,1.045,2,1.629,3,0.166,4,0.147,5,1.244,6,1.244,7,1.244,8,1.244,9,0.147,12,0.7,22,0.739,32,1.244,33,2.334,34,2.381,36,1.56,38,1.56,40,0.449,41,0.721,46,1.102,48,1.203,52,0.879,59,1.292,61,1.152,62,0.017,63,1.235,64,0.711,65,1.054,78,0.879,90,1.3,94,1.56,106,1.045,108,1.78,113,0.842,114,0.77,115,1.702,118,0.35,119,0.266,129,0.166,130,0.287,146,1.424,148,2.679,155,1.203,164,2.327,165,2.475,166,3.156,167,1.642,169,2.624,171,2.783,173,2.475,175,2.475,180,2.934,182,3.597,183,2.934,189,3.156,198,2.034,199,4.016,200,2.679,201,2.679,203,1.819,218,2.247,230,2.041,231,2.957,232,0.842,233,1.702,234,1.702,235,1.244,236,2.087,237,1.244,238,1.244,239,1.001,240,1.244,241,1.045,242,1.127,243,1.244,244,1.045,245,1.244,246,1.001,247,1.244,248,1.045,249,1.702,250,1.001,251,1.244,252,1.001,253,1.244,254,1.001,255,1.244,256,1.001,257,1.244,258,1.754,259,1.244,260,1.001,261,1.512,262,1.244,263,0.959,264,1.244,265,1.001,266,1.244,267,1.001,268,1.045,269,1.244,270,1.001,271,1.244,272,1.045,273,1.001,274,0.959,275,1.14,276,1.244,277,0.011,278,0.011,313,1.127,316,1.43,505,2.679,578,4.18,587,1.491,588,1.564,593,3.388,601,4.483,602,1.642,603,2.957,737,2.034,861,3.156,889,2.628,975,2.161,977,2.934,1020,3.156,1024,2.475,1031,3.276,1128,2.934,1251,3.489,1252,2.306,1292,2.934,1294,4.016,1601,3.276,1602,5.92,1603,5.193,1604,5.193,1605,2.679,1606,5.193,1607,6.366,1608,3.795,1609,3.795,1610,3.795,1611,3.795,1612,5.193,1613,3.795,1614,3.795,1615,2.934,1616,2.934,1617,4.016,1618,2.934,1619,2.934,1620,3.795,1621,2.679,1622,2.934,1623,2.934,1624,4.483,1625,4.483,1626,5.193,1627,5.193,1628,3.666,1629,3.276,1630,2.934,1631,2.934,1632,5.193,1633,5.193,1634,3.795,1635,3.795,1636,3.795,1637,3.276,1638,3.795,1639,3.795,1640,3.795]],["title/components/SessionDetailComponent.html",[0,0.287,260,1.002]],["body/components/SessionDetailComponent.html",[0,0.329,1,0.618,2,1.106,3,0.098,4,0.087,5,0.736,6,0.736,7,0.736,8,0.736,9,0.087,11,0.958,12,0.75,13,1.428,14,1.156,16,1.089,22,0.544,23,1.182,29,1.889,30,2.646,32,0.736,33,2.192,34,2.167,36,1.059,38,1.059,40,0.265,41,0.489,44,1.618,46,1.047,48,0.817,50,3.052,52,0.817,54,2.577,57,3.485,58,4.261,59,1.385,61,0.966,62,0.017,63,1.041,64,0.709,65,0.884,71,2.726,72,1.853,75,1.072,78,1.319,79,1.095,86,1.604,89,1.889,90,1.208,91,2.008,94,1.482,99,1.604,106,1.2,108,1.492,113,0.966,114,0.884,118,0.404,119,0.157,122,1.278,123,0.769,124,0.971,125,1.584,129,0.098,130,0.17,134,1.584,138,1.735,146,0.842,148,1.584,149,2.807,150,1.323,155,1.243,164,1.386,166,1.364,167,1.526,169,1.453,203,1.076,211,1.604,217,1.136,218,2.136,221,1.69,222,1.453,223,1.076,224,1.278,227,1.364,228,1.203,230,1.386,232,0.498,233,1.156,234,1.156,235,0.736,236,1.618,237,0.736,238,0.736,239,0.592,240,0.736,241,0.618,242,0.874,243,0.736,244,0.618,245,0.736,246,0.592,247,0.736,248,0.618,249,1.156,250,0.592,251,0.736,252,0.592,253,0.736,254,0.592,255,0.736,256,0.592,257,0.736,258,0.618,259,0.736,260,1.415,261,1.509,262,0.736,263,0.567,264,0.736,265,0.592,266,0.736,267,0.592,268,0.618,269,0.736,270,0.592,271,0.736,272,0.618,273,0.592,274,0.567,275,0.674,276,0.736,277,0.008,278,0.008,291,2.81,297,1.021,301,2.142,303,2.3,313,1.092,314,0.543,316,1.569,320,2.999,394,1.69,396,0.971,406,0.645,420,1.735,425,3.044,433,1.634,440,1.735,504,2.008,507,1.464,511,3.485,514,1.988,526,1.937,543,1.136,551,2.489,559,2.013,584,0.817,585,4.751,586,1.735,587,1.712,588,0.925,594,2.008,596,2.646,602,1.526,605,1.584,611,3.485,619,2.489,623,4.318,645,3.946,648,2.142,667,1.464,729,1.526,737,1.203,810,2.008,861,2.646,952,3.485,962,1.364,963,1.076,1016,2.008,1020,1.364,1024,1.464,1083,1.464,1157,3.044,1198,2.008,1251,3.113,1252,1.364,1284,1.937,1285,1.937,1292,1.735,1294,1.735,1316,4.878,1341,3.816,1349,2.489,1359,2.489,1415,1.735,1447,1.464,1479,4.148,1482,2.726,1549,3.075,1583,1.937,1584,4.631,1624,3.044,1625,3.044,1641,5.342,1642,1.937,1643,4.916,1644,3.526,1645,4.355,1646,4.355,1647,3.526,1648,4.355,1649,4.355,1650,4.355,1651,3.526,1652,3.526,1653,4.935,1654,4.935,1655,2.244,1656,4.261,1657,3.526,1658,3.526,1659,6.493,1660,2.244,1661,5.956,1662,4.631,1663,3.526,1664,3.526,1665,3.526,1666,3.526,1667,2.244,1668,3.526,1669,4.935,1670,2.244,1671,2.244,1672,2.244,1673,2.244,1674,3.526,1675,2.244,1676,3.526,1677,2.244,1678,3.526,1679,3.526,1680,2.244,1681,4.935,1682,4.261,1683,2.244,1684,2.244,1685,3.526,1686,2.244,1687,1.937,1688,2.244,1689,2.244,1690,1.937,1691,1.937,1692,2.244,1693,1.937,1694,1.937,1695,1.937,1696,4.355,1697,2.244,1698,2.244,1699,2.244,1700,3.526,1701,2.244,1702,1.937,1703,2.244,1704,3.526,1705,2.244,1706,3.526,1707,2.244,1708,2.244,1709,3.526,1710,2.244,1711,2.244,1712,3.526,1713,2.244,1714,2.244,1715,2.244,1716,2.244,1717,3.526,1718,3.526,1719,2.244,1720,2.244,1721,2.244,1722,1.937,1723,2.244,1724,2.244,1725,2.244,1726,2.244,1727,1.584,1728,2.244,1729,2.244,1730,3.526,1731,2.244,1732,2.244,1733,2.244,1734,2.244,1735,1.735,1736,3.526,1737,2.244,1738,1.735,1739,2.244,1740,2.244,1741,2.244,1742,2.244,1743,2.244,1744,2.244,1745,2.244,1746,3.526,1747,3.044,1748,3.526,1749,3.526,1750,3.526,1751,3.526,1752,3.526,1753,2.244,1754,2.244,1755,2.244]],["title/components/SessionEstablishmentListingPageComponent.html",[0,0.287,263,0.96]],["body/components/SessionEstablishmentListingPageComponent.html",[0,0.413,1,0.903,2,1.471,3,0.143,4,0.127,5,1.075,6,1.075,7,1.075,8,1.075,9,0.127,12,0.387,22,0.409,29,2.512,30,3.325,32,1.075,33,2.297,34,2.329,36,1.408,38,1.408,40,0.387,41,0.651,44,1.794,46,0.995,48,1.086,50,3.2,52,1.086,59,1.373,61,1.213,62,0.017,63,1.226,64,0.756,65,1.111,78,1.268,79,1.04,90,1.123,106,0.903,108,1.606,113,0.727,114,0.665,115,1.075,118,0.409,119,0.229,123,1.123,129,0.143,130,0.248,146,1.23,155,1.383,163,2.535,164,1.288,169,1.932,171,1.757,184,2.535,185,2.535,198,2.932,211,1.492,227,1.992,228,2.512,230,1.288,232,0.727,233,1.537,234,1.537,235,1.075,236,1.958,237,1.075,238,1.075,239,0.865,240,1.075,241,0.903,242,1.373,243,1.075,244,0.903,245,1.075,246,0.865,247,1.075,248,0.903,249,1.537,250,0.865,251,1.075,252,0.865,253,1.075,254,0.865,255,1.075,256,0.865,257,1.075,258,0.903,259,1.075,260,0.865,261,1.493,262,1.075,263,1.509,264,1.075,265,0.865,266,1.075,267,0.865,268,2.131,269,1.075,270,0.865,271,1.075,272,0.903,273,0.865,274,0.828,275,0.985,276,1.075,277,0.01,278,0.01,292,2.138,298,1.992,309,3.31,313,1.225,314,0.793,316,1.507,428,2.133,474,3.625,505,2.314,543,1.659,578,3.863,584,1.086,587,1.288,588,1.351,602,2.994,834,2.669,889,2.373,975,1.866,988,5.155,991,4.724,1084,2.314,1156,2.314,1161,4.231,1162,3.625,1164,4.047,1198,3.115,1242,3.628,1244,1.992,1246,2.373,1251,3.15,1252,1.992,1267,2.314,1318,4.513,1377,3.325,1378,2.314,1605,2.314,1615,3.625,1616,2.535,1617,3.625,1618,2.535,1619,2.535,1621,2.314,1622,2.535,1623,2.535,1628,3.31,1641,5.35,1656,5.155,1690,2.83,1691,2.83,1694,2.83,1695,2.83,1702,2.83,1747,4.047,1756,5.471,1757,4.231,1758,4.047,1759,4.047,1760,4.047,1761,3.278,1762,3.278,1763,4.047,1764,3.278,1765,4.121,1766,3.278,1767,3.278,1768,2.535,1769,2.535,1770,4.687,1771,4.687,1772,3.278,1773,3.278,1774,3.278,1775,3.278,1776,4.047,1777,2.83,1778,4.047,1779,2.83,1780,4.047,1781,2.83,1782,2.83,1783,2.83,1784,4.047,1785,2.83,1786,2.83,1787,2.83,1788,2.83,1789,2.83,1790,4.687,1791,4.687,1792,4.687,1793,4.687,1794,3.278]],["title/components/SessionFilterComponent.html",[0,0.287,265,1.002]],["body/components/SessionFilterComponent.html",[0,0.455,1,1.08,2,1.666,3,0.171,4,0.152,5,1.286,6,1.286,7,1.286,8,1.286,9,0.152,16,0.775,32,1.286,33,2.342,34,2.393,36,1.595,38,1.595,40,0.464,41,0.737,46,1.127,48,1.23,52,0.909,59,1.443,61,0.87,62,0.017,63,1.169,64,0.828,65,0.796,78,0.909,79,1.178,106,1.08,113,1.335,114,1.222,115,1.286,118,0.356,119,0.274,129,0.232,130,0.296,146,1.471,150,1.471,155,0.909,164,1.541,169,2.482,173,2.558,221,1.88,222,1.616,223,1.88,224,2.233,232,0.87,233,1.741,234,1.741,235,1.286,236,2.116,237,1.286,238,1.286,239,1.035,240,1.286,241,1.08,242,1.143,243,1.286,244,1.08,245,1.286,246,1.035,247,1.286,248,1.08,249,1.741,250,1.035,251,1.286,252,1.035,253,1.286,254,1.035,255,1.286,256,1.035,257,1.286,258,1.08,259,1.286,260,1.035,261,1.462,262,1.286,263,0.991,264,1.286,265,1.703,266,1.286,267,1.035,268,1.08,269,1.286,270,1.035,271,1.286,272,1.08,273,1.035,274,0.991,275,1.178,276,1.286,277,0.011,278,0.011,298,3.659,313,0.94,314,1.809,581,0.909,588,1.616,602,2.298,606,1.616,868,2.101,975,2.233,1092,4.106,1103,4.556,1114,3.749,1242,3.227,1243,5.592,1244,4.394,1245,3.032,1246,2.688,1248,3.749,1250,2.233,1251,3.333,1252,2.383,1253,4.585,1254,5.198,1255,5.198,1256,5.198,1257,5.198,1258,5.198,1259,4.585,1260,5.198,1261,5.571,1262,4.585,1263,3.385,1264,3.385,1265,3.385,1266,3.385,1267,3.749,1268,3.385,1269,3.385,1466,3.749,1605,2.769,1628,3.749,1629,3.385,1795,5.31,1796,3.921,1797,3.921,1798,3.921,1799,3.921,1800,3.921,1801,5.31,1802,3.385]],["title/modules/SessionModule.html",[328,0.737,1300,2.478]],["body/modules/SessionModule.html",[3,0.198,4,0.176,9,0.176,62,0.017,118,0.461,119,0.317,123,1.551,129,0.198,130,0.342,232,1.004,242,1.034,258,1.994,260,1.91,263,1.945,265,1.91,267,1.91,268,1.881,277,0.012,278,0.012,328,0.878,330,1.42,331,1.959,332,3.271,333,2.291,334,2.955,335,2.215,347,2.955,348,2.291,349,2.291,357,2.093,367,4.515,368,1.865,381,3.129,382,2.426,389,2.093,689,2.426,1134,5.597,1135,5.597,1136,5.597,1141,3.809,1142,2.953,1146,2.577,1151,3.809,1152,2.953,1244,2.751,1300,5.195,1315,4.515,1316,3.196,1317,3.908,1318,2.953,1320,3.196,1321,3.908,1768,3.5,1769,3.5,1803,3.908,1804,3.908,1805,3.908,1806,3.908,1807,6.249,1808,6.249,1809,4.526,1810,4.526,1811,5.839,1812,5.839,1813,4.526,1814,5.839,1815,4.526,1816,5.839,1817,4.526,1818,4.526]],["title/modules/SessionRoutingModule.html",[328,0.737,1819,2.937]],["body/modules/SessionRoutingModule.html",[0,0.436,3,0.252,4,0.224,9,0.224,62,0.017,118,0.426,119,0.404,123,1.978,129,0.252,130,0.436,242,1.201,263,1.714,268,1.868,277,0.014,278,0.014,313,1.022,330,1.811,335,1.978,357,2.069,389,2.431,430,3.286,431,3.635,432,2.795,447,3.093,584,1.337,1146,3.286,1198,3.286,1200,4.983,1315,4.463,1318,3.765,1819,5.245,1820,5.771]],["title/injectables/SessionService.html",[279,1.046,1251,1.821]],["body/injectables/SessionService.html",[3,0.119,4,0.106,9,0.106,11,0.53,12,0.485,16,0.719,22,0.341,23,0.44,35,1.181,40,0.582,41,0.569,44,2.425,48,0.95,52,0.632,59,1.535,61,1.562,62,0.017,63,1.349,64,0.844,65,1.411,69,0.857,75,0.461,78,1.65,79,1.213,94,1.231,108,0.936,113,1.417,114,1.411,115,2.244,118,0.398,119,0.191,124,1.181,129,0.179,130,0.206,150,1.538,155,1.522,170,1.554,242,1.09,261,1.481,277,0.009,278,0.009,279,1.129,280,1.242,299,1.659,300,1.242,313,1.247,314,1.779,316,2.012,372,2.359,376,1.554,377,2.769,378,1.659,379,1.659,396,0.752,494,3.325,496,3.325,507,3.211,514,2.019,523,1.024,525,3.062,542,3.742,550,2.894,581,0.632,584,1.427,587,2.51,588,1.125,602,2.13,606,1.125,628,2.932,633,3.17,638,2.991,668,1.928,669,1.781,700,3.211,701,2.894,704,2.357,713,1.928,714,3.825,715,3.563,717,3.569,718,2.111,719,2.111,720,2.111,721,2.111,722,1.928,723,1.928,724,1.928,725,1.928,726,2.111,727,1.781,728,1.928,729,2.13,730,2.111,737,1.463,738,2.674,739,3.211,740,2.674,748,1.781,749,1.781,751,2.111,752,2.111,756,3.17,759,2.674,761,1.781,762,1.781,764,1.781,801,1.928,810,1.554,811,1.928,812,2.111,813,1.781,814,1.659,815,1.781,827,1.382,888,2.334,1001,1.928,1012,1.928,1091,2.952,1186,1.928,1248,3.475,1250,2.334,1251,1.965,1279,2.111,1352,3.325,1377,3.325,1378,1.928,1514,2.491,1735,2.111,1738,3.17,1757,3.17,1765,4.286,1821,2.111,1822,4.249,1823,4.249,1824,4.249,1825,4.249,1826,4.099,1827,4.723,1828,4.099,1829,4.723,1830,4.099,1831,4.099,1832,4.099,1833,4.099,1834,4.249,1835,4.249,1836,4.099,1837,4.723,1838,4.099,1839,2.73,1840,2.73,1841,4.099,1842,2.73,1843,4.249,1844,3.539,1845,2.73,1846,2.73,1847,3.539,1848,2.73,1849,2.73,1850,3.539,1851,2.73,1852,2.73,1853,3.539,1854,2.73,1855,3.539,1856,2.73,1857,3.539,1858,3.539,1859,2.73,1860,2.73,1861,2.73,1862,2.73,1863,3.539,1864,2.73,1865,2.73,1866,3.539,1867,2.73,1868,3.539,1869,2.73,1870,2.73,1871,2.73,1872,2.73,1873,2.73,1874,2.73,1875,2.73,1876,2.73,1877,2.73,1878,2.73,1879,3.539,1880,2.357,1881,2.357,1882,2.357,1883,2.357,1884,2.357,1885,2.357,1886,2.357,1887,2.357,1888,2.357,1889,2.357,1890,2.357,1891,2.357,1892,2.357,1893,2.357,1894,2.357,1895,2.357,1896,2.357,1897,2.357,1898,2.357,1899,2.357,1900,2.357,1901,3.539,1902,2.357,1903,2.111,1904,2.357,1905,2.357,1906,2.357,1907,2.357,1908,2.357,1909,1.928,1910,2.357,1911,2.357,1912,2.357,1913,2.357,1914,2.357,1915,2.357,1916,2.357,1917,2.357,1918,2.357,1919,2.357,1920,2.357,1921,2.357]],["title/components/SessionsListingAllComponent.html",[0,0.287,267,1.002]],["body/components/SessionsListingAllComponent.html",[0,0.44,1,1.013,2,1.594,3,0.161,4,0.143,5,1.205,6,1.205,7,1.205,8,1.205,9,0.143,12,0.435,22,0.459,29,2.723,30,3.538,32,1.205,33,2.326,34,2.395,36,1.526,38,1.526,40,0.435,41,0.705,46,1.078,48,1.177,50,3.366,52,0.852,59,1.338,61,1.291,62,0.017,63,1.279,64,0.761,65,1.182,78,1.349,79,1.127,90,1.26,106,1.013,108,1.741,115,1.205,118,0.372,119,0.257,129,0.161,130,0.278,146,1.379,150,1.379,155,1.727,164,1.445,169,2.094,171,1.97,184,2.842,185,2.842,198,3.12,211,1.673,221,1.762,222,1.515,227,2.234,228,2.723,230,1.445,232,0.815,233,1.666,234,1.666,235,1.205,236,2.059,237,1.205,238,1.205,239,0.97,240,1.205,241,1.013,242,1.112,243,1.205,244,1.013,245,1.205,246,0.97,247,1.205,248,1.013,249,1.666,250,0.97,251,1.205,252,0.97,253,1.205,254,0.97,255,1.205,256,0.97,257,1.205,258,1.013,259,1.205,260,0.97,261,1.466,262,1.205,263,0.929,264,1.205,265,0.97,266,1.205,267,1.657,268,2.133,269,1.205,270,0.97,271,1.205,272,1.013,273,0.97,274,0.929,275,1.104,276,1.205,277,0.011,278,0.011,298,2.234,309,3.587,313,1.237,316,1.604,505,2.595,578,4.111,587,1.445,588,1.515,602,3.082,606,1.515,889,2.571,975,2.093,1084,2.595,1242,3.817,1244,2.234,1246,2.571,1251,3.268,1252,2.234,1267,2.595,1320,4.813,1605,2.595,1615,3.929,1616,2.842,1617,3.929,1618,2.842,1619,2.842,1621,2.595,1622,2.842,1623,2.842,1628,3.587,1758,4.386,1759,4.386,1760,4.386,1763,4.386,1768,2.842,1769,2.842,1776,4.386,1777,3.173,1778,4.386,1779,3.173,1780,4.386,1781,3.173,1782,3.173,1783,4.386,1784,4.386,1785,3.173,1786,3.173,1787,3.173,1788,3.173,1789,3.173,1903,3.929,1922,5.886,1923,3.173,1924,5.822,1925,5.08,1926,5.08,1927,3.676,1928,3.676,1929,3.676,1930,3.676,1931,3.676]],["title/interfaces/User.html",[46,0.806,581,0.88]],["body/interfaces/User.html",[3,0.21,4,0.187,9,0.187,11,0.934,12,0.569,16,1.15,22,0.758,23,0.978,40,0.569,41,0.843,46,1.411,62,0.017,64,0.844,72,2.332,75,1.026,129,0.21,160,3.072,277,0.013,278,0.013,314,1.914,394,2.306,514,1.998,516,5.24,522,3.977,523,2.62,524,3.689,537,2.435,581,1.406,582,2.306,584,1.618,651,3.96,653,3.456,835,3.456,870,3.96,1364,2.923,1418,4.244,1442,4.286,1443,4.286,1475,3.396,1556,4.931,1557,4.931,1558,4.556,1577,4.931,1580,4.694,1581,5.24,1909,4.286,1932,4.153,1933,5.24,1934,3.689,1935,6.07,1936,6.07,1937,6.07]],["title/components/UserDashboardComponent.html",[0,0.287,270,1.002]],["body/components/UserDashboardComponent.html",[0,0.338,1,0.643,2,1.141,3,0.102,4,0.091,5,0.765,6,0.765,7,0.765,8,0.765,9,0.091,11,0.453,12,0.684,13,1.192,16,1.006,22,0.454,23,0.376,26,1.722,28,2.275,32,0.765,33,2.205,34,2.247,36,1.342,38,1.342,40,0.276,41,0.505,44,1.653,46,1.55,48,0.843,50,2.703,52,0.843,54,2.616,59,1.333,61,0.518,62,0.017,63,0.867,64,0.563,65,0.474,69,2.132,72,1.878,75,1.13,78,1.266,79,0.991,81,2.812,82,2.812,83,2.812,87,1.304,88,2.372,89,2.703,90,2.143,91,2.544,94,1.878,96,1.841,106,0.643,108,0.8,111,2.568,113,0.807,114,1.333,118,0.37,119,0.163,122,1.329,126,1.182,129,0.102,130,0.176,137,2.544,138,3.454,141,2.015,146,2.172,155,0.541,164,1.429,165,1.523,167,1.933,169,1.499,171,1.949,174,3.14,182,3.321,187,3.454,189,2.21,198,1.251,199,1.805,200,1.648,201,1.648,203,2.775,207,2.015,210,1.805,211,1.655,212,2.015,215,2.568,217,1.182,218,2.365,222,0.962,223,1.119,224,1.329,226,1.648,230,2.148,231,2.544,232,0.518,233,1.192,234,1.192,235,0.765,236,1.653,237,0.765,238,0.765,239,0.616,240,0.765,241,0.643,242,0.893,243,0.765,244,0.643,245,0.765,246,0.616,247,0.765,248,0.643,249,1.192,250,0.616,251,0.765,252,0.616,253,0.765,254,0.616,255,0.765,256,0.616,257,0.765,258,0.643,259,0.765,260,0.616,261,0.867,262,0.765,263,0.59,264,0.765,265,0.616,266,0.765,267,0.616,268,0.643,269,0.765,270,1.527,271,0.765,272,0.643,273,0.616,274,0.59,275,0.701,276,0.765,277,0.008,278,0.008,286,2.141,287,2.417,296,1.419,297,1.062,303,2.372,304,2.372,305,1.949,313,1.137,314,1.401,316,1.389,368,0.962,396,1.722,417,2.015,428,1.655,433,2.051,504,2.071,507,2.372,511,2.568,522,3.112,523,1.364,543,1.182,548,2.015,581,0.843,584,1.035,621,1.743,643,1.841,661,2.071,715,1.419,722,1.648,723,1.648,727,3.777,728,4.414,729,2.365,811,2.568,821,3.065,822,2.715,823,1.419,830,3.9,831,1.648,832,1.648,833,2.812,838,2.071,839,1.523,843,4.227,844,2.715,847,3.164,850,2.568,851,4.227,860,2.568,866,2.568,867,4.835,868,3.442,869,3.518,870,2.372,880,2.372,956,3.14,962,3.673,963,2.775,965,3.561,970,2.394,1016,1.329,1019,1.805,1026,2.015,1050,3.14,1083,2.372,1100,2.568,1236,1.805,1349,1.648,1357,3.14,1358,3.14,1359,2.568,1415,1.805,1418,2.715,1420,2.812,1447,1.523,1449,1.419,1450,1.648,1538,3.14,1549,1.648,1551,3.14,1556,3.859,1557,3.859,1558,4.364,1559,3.14,1577,3.561,1580,2.812,1621,2.568,1630,1.805,1631,1.805,1637,3.857,1693,3.14,1722,2.015,1938,5.173,1939,4.723,1940,2.015,1941,3.14,1942,3.637,1943,5.043,1944,5.043,1945,4.467,1946,4.467,1947,5.789,1948,5.043,1949,3.561,1950,2.335,1951,3.637,1952,2.335,1953,6.252,1954,3.637,1955,5.789,1956,3.637,1957,2.335,1958,2.335,1959,3.637,1960,3.637,1961,3.637,1962,3.637,1963,2.335,1964,3.637,1965,2.335,1966,2.335,1967,2.335,1968,2.335,1969,3.637,1970,2.335,1971,2.335,1972,2.335,1973,2.335,1974,5.043,1975,2.335,1976,2.335,1977,5.043,1978,2.335,1979,2.335,1980,2.335,1981,2.335,1982,4.467,1983,2.335,1984,2.335,1985,3.637,1986,3.637,1987,3.637,1988,2.335,1989,2.335,1990,2.335,1991,3.637,1992,5.043,1993,2.335,1994,2.335,1995,3.637,1996,2.335,1997,2.335,1998,2.335,1999,2.335,2000,2.335,2001,3.637,2002,4.467,2003,2.335,2004,2.335,2005,2.335,2006,2.335,2007,3.637]],["title/injectables/UserFacadeService.html",[279,1.046,287,1.821]],["body/injectables/UserFacadeService.html",[3,0.147,4,0.13,9,0.13,11,1.172,12,0.714,14,1.564,16,0.995,18,3.015,20,1.748,21,3.112,22,0.87,23,0.973,26,1.314,28,2.823,35,2.064,40,0.397,41,0.662,46,1.542,48,1.105,52,0.778,59,1.414,61,1.414,62,0.017,63,1.238,64,0.712,65,1.295,71,3.689,72,2.128,75,1.02,78,1.535,79,1.511,87,2.164,89,2.557,90,2.386,103,2.716,108,2.069,113,0.745,114,0.682,118,0.357,119,0.235,124,1.454,126,1.701,129,0.147,130,0.254,157,3.338,274,1.402,277,0.01,278,0.01,279,1.528,280,1.529,283,2.064,286,3.699,287,2.895,300,2.171,316,1.757,320,2.042,322,2.901,396,2.077,406,1.372,433,1.79,440,3.689,453,2.899,486,3.689,499,2.716,502,3.689,504,3.438,510,4.931,513,3.619,514,2.092,525,3.396,533,3.689,559,2.486,584,1.478,606,1.385,613,2.372,621,2.895,622,3.236,628,3.236,642,4.529,643,3.056,646,2.899,647,4.263,648,3.669,649,2.557,658,2.901,661,2.716,664,2.901,666,2.899,669,3.112,835,2.716,838,2.716,895,3.438,896,3.669,1061,4.119,1064,2.901,1178,3.689,1366,3.689,1466,3.368,1573,2.901,1934,2.899,1949,3.368,2008,6.116,2009,4.771,2010,4.771,2011,3.689,2012,3.689,2013,4.669,2014,3.36,2015,3.689,2016,3.36,2017,6.335,2018,3.689,2019,4.119,2020,3.36,2021,3.36,2022,4.771,2023,3.689,2024,4.771,2025,2.901,2026,3.36,2027,3.36,2028,3.36,2029,3.36]],["title/components/UserListComponent.html",[0,0.287,272,1.046]],["body/components/UserListComponent.html",[0,0.468,1,0.86,2,1.42,3,0.137,4,0.121,5,1.024,6,1.024,7,1.024,8,1.024,9,0.121,11,1.033,12,0.369,13,1.484,14,1.745,16,1.046,20,1.705,22,0.807,23,0.941,26,1.78,28,2.62,32,1.024,33,2.292,34,2.354,36,1.36,38,1.36,40,0.369,41,0.628,46,1.646,48,1.049,59,1.386,61,1.004,62,0.017,63,1.325,64,0.763,65,0.919,75,1.127,78,1.234,79,1.181,86,2.06,90,2.285,94,1.36,96,2.291,99,2.941,106,0.86,113,1.004,114,0.919,115,1.745,118,0.268,119,0.219,126,1.581,129,0.137,130,0.236,155,0.723,156,2.552,157,3.098,164,1.227,167,1.351,169,1.865,203,1.497,217,1.581,218,1.959,222,1.287,223,1.497,224,1.778,227,1.898,230,1.227,232,0.693,233,1.484,234,1.484,235,1.024,236,1.914,237,1.024,238,1.024,239,0.824,240,1.024,241,0.86,242,1.034,243,1.024,244,0.86,245,1.024,246,0.824,247,1.024,248,0.86,249,1.484,250,0.824,251,1.024,252,0.824,253,1.024,254,0.824,255,1.024,256,0.824,257,1.024,258,0.86,259,1.024,260,0.824,261,1.033,262,1.024,263,0.789,264,1.024,265,0.824,266,1.024,267,0.824,268,0.86,269,1.024,270,0.824,271,1.024,272,1.78,273,0.824,274,1.566,275,0.938,276,1.024,277,0.01,278,0.01,314,1.095,396,1.247,406,1.302,409,3.767,428,1.421,524,3.928,559,1.698,584,1.353,592,4.117,593,2.953,603,3.032,621,2.17,622,2.426,649,3.129,661,3.325,810,2.577,839,2.953,898,4.998,908,4.515,915,4.998,970,1.673,1016,1.778,1035,3.5,1082,2.415,1084,4.123,1085,4.596,1086,3.908,1087,5.041,1088,3.908,1089,3.908,1092,3.5,1093,4.564,1094,3.809,1100,2.205,1103,4.707,1114,4.707,1118,3.908,1119,5.58,1120,2.696,1128,4.998,1366,3.5,1447,2.037,1558,3.809,1630,2.415,1631,2.415,1727,3.196,1934,3.235,1938,5.382,2018,2.415,2030,5.382,2031,4.526,2032,4.526,2033,4.526,2034,4.526,2035,4.526,2036,3.123,2037,3.123,2038,3.123,2039,3.123,2040,3.123,2041,4.526,2042,3.123,2043,4.526,2044,3.123,2045,3.123,2046,3.123,2047,5.324,2048,5.324,2049,5.324,2050,3.123,2051,3.123,2052,3.123,2053,3.123,2054,4.526,2055,4.526,2056,4.526,2057,2.415]],["title/modules/UserModule.html",[328,0.737,346,2.308]],["body/modules/UserModule.html",[3,0.182,4,0.161,9,0.161,11,0.806,12,0.781,16,0.964,18,3.216,20,2.044,22,0.883,23,1.18,24,2.957,26,1.947,28,2.168,62,0.017,72,1.657,75,0.932,106,1.52,118,0.458,119,0.291,129,0.182,130,0.314,156,2.645,157,3.511,232,0.921,270,1.865,272,1.947,273,1.865,277,0.012,278,0.012,283,2.858,286,3.388,287,3.388,296,2.523,297,1.889,328,0.806,330,2.157,331,1.796,332,3.137,333,2.101,334,3.137,335,1.423,346,4.739,347,2.792,348,2.101,349,2.101,351,4.763,352,3.353,357,1.978,359,2.523,368,1.711,371,3.141,381,2.957,382,2.225,383,3.895,384,2.931,389,1.978,403,3.141,414,4.266,453,3.353,552,4.763,688,3.353,689,2.225,690,4.266,691,3.21,831,2.931,832,2.931,963,1.99,1099,3.895,1143,3.584,1146,2.364,1148,3.895,1149,2.931,1151,3.599,1152,2.708,1153,3.895,1449,2.523,1468,4.763,1471,4.266,1472,3.21,1934,3.353,1939,2.931,2025,3.584,2030,3.21,2058,3.584,2059,3.584,2060,3.584,2061,3.584,2062,4.611,2063,4.151,2064,4.763,2065,5.517,2066,4.763,2067,5.517,2068,5.517,2069,5.517,2070,4.151,2071,3.584,2072,3.584,2073,4.151,2074,3.584,2075,2.931]],["title/modules/UserRoutingModule.html",[328,0.737,2062,2.478]],["body/modules/UserRoutingModule.html",[0,0.468,3,0.218,4,0.193,9,0.193,12,0.733,16,1.083,17,2.264,19,3.024,20,1.782,23,1.172,24,2.667,26,1.947,62,0.017,69,1.561,72,1.495,75,1.141,86,2.264,105,2.519,106,1.708,118,0.439,119,0.348,123,1.705,129,0.218,130,0.376,145,3.848,157,3.389,270,1.782,273,1.782,274,1.567,277,0.013,278,0.013,292,4.045,313,0.881,330,1.561,335,1.705,357,1.784,389,2.222,394,2.385,403,2.833,409,3.024,430,2.833,431,3.323,432,3.057,447,3.323,470,2.833,695,3.246,1083,4.045,1146,2.833,1194,4.769,1195,4.296,1196,4.992,1197,4.296,1198,3.846,1199,5.353,1934,3.024,1939,3.513,2057,3.848,2062,4.045,2066,4.296,2071,4.296,2072,4.296,2074,4.296,2075,3.513,2076,4.976,2077,4.976,2078,4.976,2079,4.976,2080,6.2,2081,6.2,2082,4.976,2083,4.296,2084,5.353,2085,4.296]],["title/injectables/UserService.html",[279,1.046,286,1.821]],["body/injectables/UserService.html",[3,0.097,4,0.086,9,0.086,11,1.15,12,0.793,14,1.143,16,1.107,17,2.228,18,2.228,20,1.855,22,0.767,23,1.19,26,1.781,28,2.763,35,0.957,40,0.262,41,0.484,44,2.12,46,1.443,48,0.808,52,0.513,59,1.381,61,1.361,62,0.017,63,1.15,64,0.749,65,1.202,69,1.094,72,2.198,75,0.956,78,1.576,79,1.434,86,2.575,87,1.25,89,3.465,90,2.448,94,1.047,95,3.194,96,1.765,103,1.985,108,1.678,113,1.182,114,1.082,115,1.605,118,0.351,119,0.155,124,0.957,126,1.12,129,0.097,130,0.167,137,3.223,150,1.308,156,3.214,157,3.301,274,1.497,277,0.007,278,0.007,279,0.96,280,1.007,283,1.509,286,2.347,291,1.985,292,2.274,293,2.462,294,3.01,299,1.344,300,1.007,311,2.462,313,1.187,314,1.044,316,1.691,324,2.274,354,2.696,372,2.347,376,1.26,377,2.865,378,1.344,379,1.344,396,2.051,398,1.985,406,1.003,428,1.586,433,2.123,478,2.976,486,2.696,493,1.711,494,2.976,496,3.439,499,1.985,504,3.223,513,3.692,514,1.981,523,1.308,525,3.399,542,4.133,550,1.562,559,2.37,561,3.01,581,0.808,584,1.643,606,0.912,616,3.194,621,2.347,622,2.624,628,2.624,638,2.119,640,3.996,642,3.73,643,2.478,645,3.439,646,2.119,647,3.457,648,2.976,649,1.868,651,3.194,652,2.696,653,2.788,661,1.985,700,2.815,701,2.462,713,2.462,714,3.194,715,3.238,717,3.194,718,2.696,719,2.696,720,2.696,721,2.696,722,2.462,723,2.462,724,1.562,725,2.462,726,2.696,727,2.274,728,2.462,729,2.119,730,2.696,737,1.186,738,2.274,739,2.815,740,2.274,748,1.443,749,2.274,753,4.227,759,3.194,761,2.274,762,2.274,764,2.815,770,3.787,772,1.711,775,1.711,776,1.711,780,2.696,781,1.711,783,1.711,784,2.696,785,1.711,787,1.711,791,1.711,792,1.711,801,2.462,806,1.711,810,1.985,811,2.462,812,2.696,813,1.443,814,1.344,815,1.443,838,1.985,895,2.788,896,2.976,1178,2.696,1225,3.01,1233,1.91,1234,3.01,1235,1.91,1236,1.711,1376,1.91,1525,2.696,1549,2.462,1687,1.91,1727,1.562,1949,2.462,2011,2.696,2012,2.696,2013,3.787,2015,2.696,2017,3.01,2018,2.696,2019,3.01,2023,2.696,2086,1.91,2087,3.486,2088,3.486,2089,3.486,2090,3.486,2091,3.486,2092,3.486,2093,3.486,2094,3.486,2095,3.486,2096,4.315,2097,4.315,2098,3.486,2099,3.486,2100,2.212,2101,2.212,2102,5.66,2103,2.212,2104,3.486,2105,2.212,2106,3.486,2107,2.212,2108,3.486,2109,2.212,2110,3.486,2111,3.486,2112,2.212,2113,2.212,2114,2.212,2115,3.486,2116,2.212,2117,2.212,2118,2.212,2119,2.212,2120,2.212,2121,2.212,2122,2.212,2123,2.212,2124,2.212,2125,2.212,2126,2.212,2127,3.486,2128,2.212,2129,3.486,2130,3.486,2131,2.212,2132,2.212,2133,2.212,2134,4.315,2135,2.212,2136,2.212,2137,2.212,2138,2.212,2139,3.486,2140,2.212,2141,2.212,2142,2.212,2143,2.212]],["title/components/UsersPageComponent.html",[0,0.287,273,1.002]],["body/components/UsersPageComponent.html",[0,0.47,1,0.87,2,1.432,3,0.138,4,0.123,5,1.036,6,1.036,7,1.036,8,1.036,9,0.123,11,1.139,12,0.54,13,1.925,14,1.497,16,1.059,18,2.671,20,1.807,22,0.906,23,1.169,26,1.257,28,2.55,29,2.446,30,3.257,32,1.036,33,2.295,34,2.358,36,1.371,38,1.371,40,0.373,41,0.634,46,1.621,48,1.058,50,3.146,52,0.732,59,1.358,61,1.302,62,0.017,63,1.259,64,0.656,65,1.192,72,1.949,75,0.771,78,1.443,79,1.484,90,2.224,94,1.371,99,3.117,106,1.788,108,1.564,113,0.701,114,0.641,118,0.347,119,0.221,126,1.599,129,0.138,130,0.239,155,0.732,156,2.188,157,3.397,232,0.701,233,1.497,234,1.497,235,1.036,236,1.925,237,1.036,238,1.036,239,0.834,240,1.036,241,0.87,242,1.04,243,1.036,244,0.87,245,1.036,246,0.834,247,1.036,248,0.87,249,1.497,250,0.834,251,1.036,252,0.834,253,1.036,254,0.834,255,1.036,256,0.834,257,1.036,258,0.87,259,1.036,260,0.834,261,1.04,262,1.036,263,0.798,264,1.036,265,0.834,266,1.036,267,0.834,268,0.87,269,1.036,270,0.834,271,1.036,272,0.87,273,1.712,274,1.833,275,0.949,276,1.036,277,0.01,278,0.01,287,3.583,296,1.92,297,1.438,313,0.559,316,0.87,396,1.887,406,1.313,513,4.234,514,0.949,525,2.188,543,1.599,559,2.011,584,1.443,606,1.302,621,3.111,622,3.478,643,2.971,810,2.599,835,2.599,838,2.599,846,2.978,895,2.599,896,3.944,1093,2.231,1094,2.061,1156,2.231,1161,4.145,1162,3.53,1169,2.728,1190,3.941,1335,3.941,1409,5.914,1525,3.53,1727,2.231,1934,2.774,1949,4.145,2011,4.54,2012,4.54,2013,5.298,2015,3.53,2023,3.53,2075,4.837,2144,5.914,2145,3.159,2146,4.565,2147,4.565,2148,4.565,2149,3.159,2150,3.159,2151,3.159,2152,3.159,2153,4.565,2154,5.36,2155,3.159,2156,3.159,2157,3.159,2158,3.159,2159,3.159]],["title/coverage.html",[2160,4.018]],["body/coverage.html",[0,0.588,1,1.13,9,0.159,10,3.541,46,0.87,54,1.775,56,2.896,62,0.017,64,0.458,115,1.345,149,1.866,167,3.201,211,3.521,239,1.082,241,1.13,242,1.091,244,1.13,246,1.082,248,1.13,250,1.082,252,1.082,254,1.082,256,1.082,258,1.13,260,1.082,261,0.796,263,1.036,265,1.082,267,1.082,268,1.81,270,1.082,272,1.13,273,1.082,274,1.036,277,0.012,278,0.012,279,2.058,281,3.171,282,3.541,286,1.966,287,1.966,372,1.966,377,2.076,481,3.541,567,3.864,581,1.714,583,3.541,587,1.612,589,3.541,594,2.335,596,2.492,611,2.896,612,3.541,613,4.349,696,3.541,816,2.896,817,4.161,818,3.57,819,4.232,828,2.335,887,4.232,891,2.896,893,2.896,894,3.541,979,3.541,989,2.492,1051,3.541,1081,3.171,1082,4.232,1091,1.966,1145,2.896,1155,3.541,1156,4.349,1194,2.896,1196,2.896,1201,3.541,1242,2.492,1243,4.232,1244,3.326,1245,4.232,1251,1.966,1270,3.541,1316,2.896,1318,2.676,1320,2.896,1343,3.541,1344,3.541,1377,2.492,1388,3.541,1476,4.018,1514,2.492,1522,3.541,1601,3.541,1641,4.232,1642,3.541,1765,2.676,1821,4.232,1922,3.541,1923,3.541,1932,3.541,1938,4.232,1939,2.896,1940,3.541,2008,3.541,2030,3.171,2057,3.171,2075,2.896,2086,3.541,2144,3.541,2160,3.171,2161,4.101,2162,4.101,2163,4.101,2164,4.725,2165,4.101,2166,4.101,2167,4.101,2168,3.541,2169,7.191,2170,6.847,2171,3.541,2172,4.101,2173,5.473,2174,5.473,2175,4.101,2176,4.101,2177,3.171,2178,4.101,2179,3.541,2180,4.101,2181,6.159,2182,3.541,2183,3.541,2184,5.473,2185,5.473,2186,4.101,2187,4.101,2188,4.101,2189,5.473,2190,3.541,2191,3.541,2192,4.101,2193,5.473,2194,3.541,2195,4.101,2196,3.171,2197,4.101,2198,4.725,2199,5.473,2200,4.101,2201,4.101,2202,3.541,2203,4.101,2204,4.101,2205,5.473,2206,3.541,2207,3.541,2208,5.473,2209,3.541,2210,4.101,2211,3.541,2212,4.101,2213,4.101,2214,4.101,2215,3.541,2216,3.541,2217,3.541,2218,4.101,2219,4.101]],["title/dependencies.html",[331,1.978,2220,2.733]],["body/dependencies.html",[57,3.79,62,0.017,119,0.376,123,1.839,124,2.323,125,4.586,277,0.014,278,0.014,331,2.323,362,5.607,365,5.023,368,2.212,371,3.056,372,2.573,373,3.501,374,3.79,689,2.876,1413,4.15,1427,4.634,1431,4.634,2160,4.15,2221,5.367,2222,7.71,2223,5.367,2224,6.495,2225,5.367,2226,5.367,2227,5.367,2228,5.367,2229,5.367,2230,5.367,2231,5.367,2232,5.367,2233,5.367,2234,5.367,2235,5.367,2236,5.367,2237,5.367,2238,5.367,2239,5.367,2240,5.367,2241,5.367,2242,5.367,2243,5.367,2244,5.367,2245,5.367,2246,5.367,2247,5.367,2248,5.367,2249,5.367,2250,5.367,2251,5.367,2252,5.367,2253,5.367,2254,5.367,2255,5.367,2256,5.367,2257,5.367,2258,5.367,2259,5.367,2260,5.367,2261,5.367,2262,5.367,2263,5.367]],["title/miscellaneous/enumerations.html",[2264,2.235,2265,3.946]],["body/miscellaneous/enumerations.html",[16,0.847,20,1.53,40,0.685,62,0.017,94,2.168,114,1.56,155,1.343,277,0.014,278,0.014,305,3.107,1250,3.872,1401,3.782,1476,3.782,1494,4.484,1495,4.484,1496,4.484,1499,4.094,1500,4.094,1501,5.358,1502,4.094,1503,4.094,1504,4.094,1505,4.802,1506,4.484,1507,4.094,1508,4.094,1509,4.094,1510,4.094,1511,4.094,2264,4.094,2265,5.006,2266,5.006]],["title/index.html",[40,0.374,2267,3.165,2268,3.165]],["body/index.html",[0,0.464,4,0.158,12,0.775,16,1.143,17,1.858,20,1.95,22,0.682,23,1.133,24,2.188,26,1.938,46,0.867,62,0.016,63,0.792,72,1.227,75,1.328,82,3.158,86,1.858,91,3.5,94,1.971,95,2.664,100,3.158,101,3.525,113,0.906,115,1.339,157,3.543,160,2.067,162,3.525,277,0.012,278,0.012,305,2.924,331,2.361,355,2.664,373,2.664,393,4.632,396,1.503,398,3.5,409,2.481,420,4.753,433,1.532,437,3.525,474,3.158,475,3.525,522,2.325,523,1.532,524,2.481,602,2.361,618,2.188,623,4.28,649,2.188,727,2.664,834,2.325,837,3.158,849,3.664,853,4.22,876,2.883,880,2.664,922,2.883,952,2.883,953,2.664,957,4.22,1158,3.525,1159,3.525,1281,3.525,1341,4.22,1360,3.158,1390,3.853,1391,3.158,1418,2.481,1442,3.853,1443,3.853,1445,5.073,1446,3.158,1526,3.525,1643,3.525,1662,3.525,1682,3.525,1802,3.525,1909,2.883,1933,3.525,2064,3.525,2084,3.525,2085,3.525,2269,4.083,2270,4.083,2271,4.083,2272,4.083,2273,4.083,2274,5.457,2275,4.083,2276,3.525,2277,3.525,2278,3.525,2279,3.525,2280,3.525,2281,4.711,2282,4.083,2283,3.525,2284,3.525,2285,4.083,2286,4.083,2287,5.457,2288,6.146,2289,6.146,2290,4.083,2291,4.083,2292,4.083,2293,5.457,2294,4.083,2295,4.083,2296,4.083,2297,4.083,2298,4.083,2299,4.083,2300,4.083,2301,4.083,2302,4.083,2303,6.146,2304,4.083,2305,5.457,2306,4.083,2307,6.56,2308,4.083,2309,4.083,2310,4.083,2311,4.083,2312,6.837,2313,6.073,2314,7.298,2315,7.034,2316,4.083,2317,4.083,2318,5.457,2319,4.083,2320,4.083,2321,4.083,2322,4.083,2323,4.083,2324,3.525,2325,4.083,2326,4.083,2327,4.083,2328,4.083,2329,4.083,2330,4.083,2331,4.083,2332,4.083,2333,4.083,2334,4.083,2335,4.083,2336,4.083,2337,4.083,2338,4.083,2339,4.083,2340,4.083,2341,4.083,2342,5.457,2343,5.457,2344,4.083,2345,4.083,2346,4.083,2347,4.083,2348,4.083,2349,4.083,2350,4.083,2351,4.083,2352,4.083,2353,4.083,2354,4.083,2355,6.146,2356,4.083,2357,4.083]],["title/modules.html",[330,1.63]],["body/modules.html",[62,0.014,277,0.014,278,0.014,329,3.942,330,1.752,340,3.642,341,3.642,342,3.392,343,3.392,344,3.392,345,3.392,346,3.392,365,6.004,686,3.642,1133,3.642,1299,3.642,1300,3.642,1464,3.642,1594,3.642,1819,4.317,2062,3.642,2358,7.764,2359,7.764,2360,7.987,2361,7.764,2362,7.764]],["title/overview.html",[2363,4.486]],["body/overview.html",[1,1.973,2,1.266,54,2.644,62,0.017,232,0.895,239,1.612,241,1.683,244,1.973,246,1.612,248,1.683,250,1.612,252,1.612,254,1.612,256,1.612,258,1.683,260,1.612,263,1.81,265,1.612,267,1.612,270,1.612,272,1.683,273,1.612,277,0.012,278,0.012,280,1.836,286,2.929,287,2.929,328,0.783,329,5.505,330,1.266,331,1.746,332,2.042,333,2.042,334,2.042,335,1.383,336,3.484,337,3.484,338,3.484,339,3.484,340,3.986,341,4.672,342,4.781,343,4.628,344,4.48,345,4.352,346,4.674,347,2.74,348,2.042,349,2.042,432,1.663,582,1.934,683,3.484,684,3.484,685,3.484,686,3.986,1129,3.484,1130,3.484,1131,3.484,1132,3.484,1133,3.986,1134,5.049,1135,5.049,1136,5.049,1296,3.484,1297,3.484,1298,3.484,1299,4.259,1300,5.142,1460,3.484,1461,3.484,1462,3.484,1463,3.484,1464,3.986,1591,3.484,1592,3.484,1593,3.484,1594,3.986,1803,3.484,1804,3.484,1805,3.484,1806,3.484,1807,5.274,1808,5.274,2058,3.484,2059,3.484,2060,3.484,2061,3.484,2062,3.986,2177,3.12,2196,3.12,2363,3.484,2364,3.484,2365,3.484,2366,3.484]],["title/properties.html",[41,0.634,2220,2.733]],["body/properties.html",[41,0.863,62,0.016,277,0.015,278,0.015,2367,6.221,2368,6.221]],["title/routes.html",[432,2.141]],["body/routes.html",[62,0.015,277,0.015,278,0.015,432,2.577]],["title/interfaces/sessionByEstablishment.html",[581,0.88,1765,2.478]],["body/interfaces/sessionByEstablishment.html",[3,0.156,4,0.138,9,0.138,12,0.422,22,0.446,35,1.545,40,0.678,41,0.691,44,2.215,62,0.017,64,0.755,79,0.792,94,1.073,108,1.224,114,1.011,115,2.273,118,0.425,119,0.25,124,1.545,129,0.218,130,0.27,150,1.34,155,1.664,170,2.033,242,1.155,261,1.482,277,0.011,278,0.011,279,1.372,299,2.17,300,1.625,313,1.314,314,1.795,316,2.095,372,2.387,376,2.033,377,2.52,378,2.17,379,2.17,494,3.026,496,2.17,507,3.248,514,2.029,525,2.973,542,3.769,550,3.516,581,0.827,582,1.712,584,1.437,587,2.438,588,1.472,602,2.481,606,1.472,628,1.914,638,3.026,668,2.521,669,2.33,700,2.33,714,3.74,715,3.026,717,3.248,729,2.155,738,2.33,739,3.248,740,2.33,748,2.33,749,2.33,751,2.761,752,2.761,756,3.851,759,3.248,761,2.33,762,2.33,764,2.33,801,2.521,813,2.33,814,2.17,815,2.33,827,1.807,888,3.714,1001,2.521,1012,2.521,1091,2.748,1186,2.521,1248,4.048,1250,2.835,1251,1.712,1279,2.761,1352,4.213,1377,3.484,1378,2.521,1514,3.026,1735,2.761,1738,3.851,1757,3.851,1765,4.523,1821,2.761,1822,3.083,1823,3.083,1824,3.083,1825,3.083,1827,3.083,1829,3.083,1834,3.083,1835,3.083,1837,3.083,1843,4.299,1844,3.083,1847,3.083,1850,3.083,1853,3.083,1855,3.083,1857,3.083,1858,3.083,1863,3.083,1866,3.083,1868,3.083,1879,5.632,1880,3.083,1881,3.083,1882,3.083,1883,3.083,1884,3.083,1885,3.083,1886,3.083,1887,3.083,1888,3.083,1889,3.083,1890,3.083,1891,3.083,1892,3.083,1893,3.083,1894,3.083,1895,3.083,1896,3.083,1897,3.083,1898,3.083,1899,3.083,1900,3.083,1901,4.299,1902,3.083,1903,2.761,1904,3.083,1905,3.083,1906,3.083,1907,3.083,1908,3.083,1909,2.521,1910,3.083,1911,3.083,1912,3.083,1913,3.083,1914,3.083,1915,3.083,1916,3.083,1917,3.083,1918,3.083,1919,3.083,1920,3.083,1921,3.083]],["title/miscellaneous/variables.html",[2264,2.235,2369,3.946]],["body/miscellaneous/variables.html",[11,1.113,12,0.656,14,1.88,16,1.017,20,1.041,22,0.737,23,0.859,26,1.58,40,0.182,42,2.24,46,1.252,54,1.123,55,1.577,62,0.017,64,0.74,69,1.238,72,1.525,75,0.667,88,1.005,93,3.312,94,1.434,105,1.314,106,0.715,113,1.126,114,1.031,115,2.31,136,2.24,144,1.33,145,3.926,146,0.578,149,0.701,155,0.357,156,0.739,157,0.739,170,4.091,211,2.31,213,1.33,242,0.273,261,0.653,274,0.656,277,0.006,278,0.006,290,2.786,291,2.246,301,0.936,304,1.693,313,1.092,316,1.087,320,2.9,393,2.374,396,0.424,428,0.701,432,1.07,435,1.088,438,2.9,478,0.936,489,1.832,518,3.406,522,2.246,523,2.152,538,2.24,568,4.12,584,1.665,585,3.37,586,3.691,594,1.478,737,0.826,868,1.391,871,3.266,872,3.266,873,3.266,874,3.266,888,3.266,889,3.42,934,5.426,935,5.214,936,5.426,937,5.656,938,5.426,939,4.79,940,4.383,941,4.79,942,4.603,943,2.903,1032,5.091,1091,1.244,1194,1.832,1196,1.832,1198,2.718,1246,2.903,1272,1.33,1350,1.33,1352,3.485,1359,1.832,1360,1.191,1364,0.936,1377,1.577,1390,2.786,1401,2.193,1418,2.397,1450,2.374,1466,1.088,1476,1.005,1480,5.45,1481,5.45,1483,1.191,1490,3.691,1499,1.832,1500,4.05,1501,3.765,1502,1.088,1503,2.374,1504,2.374,1505,3.765,1507,1.832,1508,1.832,1509,1.832,1510,1.832,1511,1.832,1512,1.191,1513,1.191,1514,1.577,1515,1.191,1516,3.051,1517,1.191,1518,1.191,1519,1.191,1520,1.191,1521,1.191,1556,2.786,1557,2.786,1558,2.574,1577,2.786,1600,1.33,1941,2.24,2083,2.24,2164,3.406,2168,1.33,2171,1.33,2177,5.45,2179,2.903,2182,1.33,2183,2.24,2190,1.33,2191,2.24,2194,1.33,2196,3.691,2198,2.903,2202,3.406,2206,1.33,2207,2.24,2209,1.33,2211,2.903,2215,1.33,2216,2.24,2217,2.24,2264,1.088,2266,1.33,2276,1.33,2277,1.33,2278,1.33,2279,1.33,2280,1.33,2281,2.24,2283,1.33,2284,1.33,2313,1.33,2324,4.79,2364,1.33,2365,3.801,2366,1.33,2369,1.33,2370,1.541,2371,1.541,2372,3.945,2373,2.595,2374,2.595,2375,3.945,2376,2.595,2377,2.595,2378,2.595,2379,2.595,2380,2.595,2381,3.945,2382,3.945,2383,2.595,2384,2.595,2385,2.595,2386,2.595,2387,1.541,2388,2.595,2389,2.595,2390,1.541,2391,2.595,2392,2.595,2393,2.595,2394,1.541,2395,6.166,2396,7.047,2397,1.541,2398,1.541,2399,4.403,2400,1.541,2401,4.773,2402,5.549,2403,1.541,2404,2.595,2405,1.541,2406,6.964,2407,1.541,2408,1.541,2409,1.541,2410,4.773,2411,1.541,2412,1.541,2413,3.945,2414,1.541,2415,1.541,2416,1.541,2417,1.541,2418,4.773,2419,1.541,2420,5.735,2421,5.735,2422,5.735,2423,6.757,2424,1.541,2425,1.541,2426,5.735,2427,5.735,2428,1.541,2429,6.04,2430,3.362,2431,2.595,2432,2.595,2433,1.541,2434,1.541,2435,1.541,2436,2.595,2437,1.541,2438,1.541,2439,1.541,2440,3.362,2441,1.541,2442,5.549,2443,1.541,2444,1.541,2445,1.541,2446,5.549,2447,3.362,2448,1.541,2449,1.541,2450,1.541,2451,1.541,2452,1.541,2453,1.541,2454,1.541,2455,3.945,2456,5.735,2457,2.595,2458,1.541,2459,1.541,2460,1.541,2461,1.541,2462,1.541,2463,4.773,2464,1.541,2465,3.945,2466,3.362,2467,3.362,2468,1.541,2469,1.541,2470,1.541,2471,1.541,2472,3.945,2473,2.595,2474,4.403,2475,2.595,2476,2.595,2477,1.541,2478,1.541,2479,1.541,2480,1.541,2481,2.595,2482,3.362,2483,3.945,2484,2.595,2485,2.595,2486,1.541,2487,1.541,2488,1.541,2489,1.541,2490,4.773,2491,1.541,2492,1.541,2493,1.541,2494,1.541,2495,1.541,2496,1.541,2497,4.773,2498,1.541,2499,2.595,2500,1.541,2501,1.541,2502,1.541,2503,1.541,2504,1.541,2505,1.541,2506,1.541,2507,1.541,2508,4.403,2509,2.595,2510,1.541,2511,1.541,2512,1.541,2513,1.541,2514,1.541,2515,2.595,2516,2.595,2517,1.541,2518,2.595,2519,4.403,2520,6.469,2521,1.541,2522,2.595,2523,2.595,2524,2.595,2525,2.595,2526,2.595,2527,4.773,2528,3.362,2529,2.595,2530,2.595,2531,2.595,2532,2.595,2533,3.945,2534,3.945,2535,2.595,2536,2.595,2537,3.362,2538,1.541,2539,1.541,2540,1.541,2541,1.541,2542,1.541,2543,2.595,2544,2.595,2545,1.541,2546,1.541,2547,1.541,2548,1.541,2549,3.945,2550,1.541,2551,1.541,2552,1.541,2553,1.541,2554,1.541,2555,1.541]]],"invertedIndex":[["",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Booking.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"injectables/InMemoryDataService.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0).gettime",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":2368,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/UserDashboardComponent.html":{}}}],["0.13.0",{"_index":2263,"title":{},"body":{"dependencies.html":{}}}],["0.16.0",{"_index":2237,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1028,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["0/1",{"_index":2184,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2186,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2187,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2189,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2185,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2181,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2193,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2208,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2188,"title":{},"body":{"coverage.html":{}}}],["06:30",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["07:00",{"_index":2422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["07:30",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["07h",{"_index":1004,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["08:00",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["08:30",{"_index":2540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["08h",{"_index":1007,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["09:00",{"_index":937,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"miscellaneous/variables.html":{}}}],["09:30",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":1995,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["1",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"injectables/InMemoryDataService.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["1.4.15",{"_index":2230,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2170,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":2178,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2197,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":2180,"title":{},"body":{"coverage.html":{}}}],["1/19",{"_index":2203,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2177,"title":{},"body":{"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["1000",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["100vh",{"_index":1586,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1010",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10:00",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10:30",{"_index":2546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10px",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserListComponent.html":{}}}],["11",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11/14",{"_index":2210,"title":{},"body":{"coverage.html":{}}}],["11:00",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11:30",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["123",{"_index":2417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12:00",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12:30",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13:00",{"_index":943,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"miscellaneous/variables.html":{}}}],["14",{"_index":2366,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["140px",{"_index":971,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{}}}],["14:00",{"_index":2410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14px",{"_index":1453,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["15",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1505250469679",{"_index":1290,"title":{},"body":{"components/HomeComponent.html":{}}}],["15:00",{"_index":2413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15:30",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15px",{"_index":969,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["16",{"_index":2364,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["16.0.2",{"_index":2224,"title":{},"body":{"dependencies.html":{}}}],["16.0.3",{"_index":2222,"title":{},"body":{"dependencies.html":{}}}],["16.0.5",{"_index":2232,"title":{},"body":{"dependencies.html":{}}}],["169",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["16:00",{"_index":2508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16:30",{"_index":2543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16px",{"_index":1629,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionFilterComponent.html":{}}}],["17",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.0.2",{"_index":2253,"title":{},"body":{"dependencies.html":{}}}],["17:00",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17:30",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17h",{"_index":1010,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["18",{"_index":2365,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["18:00",{"_index":939,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"miscellaneous/variables.html":{}}}],["18:30",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19:00",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19:30",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1eb1fc",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["1em",{"_index":965,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/LoginComponent.html":{},"components/UserDashboardComponent.html":{}}}],["1px",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["1rem",{"_index":1590,"title":{},"body":{"components/RegisterComponent.html":{}}}],["2",{"_index":1032,"title":{},"body":{"components/EstablishmentComponent.html":{},"miscellaneous/variables.html":{}}}],["2).gettime",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.4.3",{"_index":2240,"title":{},"body":{"dependencies.html":{}}}],["2.5.3",{"_index":2258,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2200,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2165,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.2.5",{"_index":2236,"title":{},"body":{"dependencies.html":{}}}],["200px",{"_index":1640,"title":{},"body":{"components/SessionComponent.html":{}}}],["203ad9ced0cb",{"_index":1291,"title":{},"body":{"components/HomeComponent.html":{}}}],["20:00",{"_index":2490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20:30",{"_index":2517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20h",{"_index":1008,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["20px",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["21",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21:00",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["222",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["228px",{"_index":1023,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["22:00",{"_index":2423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22h",{"_index":1005,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["23",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["242darkman",{"_index":2283,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["27",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2a$10$b16ws8u/y0j8tjitdmdf5epn5yvqhr587wi2ma0rsgfv4cpx4y/xm",{"_index":2549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2em",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/UserDashboardComponent.html":{}}}],["2vh",{"_index":1587,"title":{},"body":{"components/RegisterComponent.html":{}}}],["3",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3).gettime",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.3",{"_index":2250,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2234,"title":{},"body":{"dependencies.html":{}}}],["3.12.0",{"_index":2243,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":2172,"title":{},"body":{"coverage.html":{}}}],["30).gettime",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300px",{"_index":1294,"title":{},"body":{"components/HomeComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{}}}],["32",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["333",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":2506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["346px",{"_index":1017,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["35",{"_index":976,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["350px",{"_index":1755,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["3em",{"_index":1997,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["3f51b5",{"_index":2003,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["3px",{"_index":1037,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["4",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["4).gettime",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.1.1",{"_index":2239,"title":{},"body":{"dependencies.html":{}}}],["4.9.3",{"_index":2259,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":2167,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":2201,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":2199,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2166,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1287,"title":{},"body":{"components/HomeComponent.html":{}}}],["40px",{"_index":1998,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["44",{"_index":2198,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["444",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45",{"_index":2217,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["456",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.2.6",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["4px",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/SessionComponent.html":{},"components/UserDashboardComponent.html":{}}}],["5",{"_index":2202,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["5).gettime",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.12",{"_index":2252,"title":{},"body":{"dependencies.html":{}}}],["5.54.0",{"_index":2261,"title":{},"body":{"dependencies.html":{}}}],["5/11",{"_index":2218,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1036,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["5000",{"_index":1987,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["500px",{"_index":972,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["50px",{"_index":968,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["54",{"_index":2194,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["541px",{"_index":1021,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["55",{"_index":1450,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["555",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56",{"_index":2507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5px",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/UserDashboardComponent.html":{}}}],["5rem",{"_index":1589,"title":{},"body":{"components/RegisterComponent.html":{}}}],["6",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6).gettime",{"_index":2411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6/10",{"_index":2192,"title":{},"body":{"coverage.html":{}}}],["6/11",{"_index":2195,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":2204,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"coverage.html":{}}}],["600x400",{"_index":2426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64",{"_index":2213,"title":{},"body":{"coverage.html":{}}}],["641px",{"_index":1018,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["66",{"_index":2164,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["664px",{"_index":961,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["67",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":2175,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["7).gettime",{"_index":2414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":2256,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":2174,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":964,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["75001",{"_index":2419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75005",{"_index":2488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75008",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75009",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75012",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75013",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75014",{"_index":2512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75016",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75017",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75020",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["777",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["78",{"_index":2209,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["789",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7b61ff",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.4.24",{"_index":2255,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2205,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2212,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1286,"title":{},"body":{"components/HomeComponent.html":{}}}],["800px",{"_index":1447,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["87",{"_index":2173,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2211,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["888",{"_index":2511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8em",{"_index":1448,"title":{},"body":{"components/LoginComponent.html":{}}}],["8px",{"_index":977,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/SessionComponent.html":{}}}],["9",{"_index":2196,"title":{},"body":{"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["9/13",{"_index":2176,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":2214,"title":{},"body":{"coverage.html":{}}}],["98",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abonne",{"_index":1542,"title":{},"body":{"components/RegisterComponent.html":{}}}],["absolute",{"_index":1026,"title":{},"body":{"components/EstablishmentComponent.html":{},"components/UserDashboardComponent.html":{}}}],["access",{"_index":2271,"title":{},"body":{"index.html":{}}}],["accessible",{"_index":2080,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["accessors",{"_index":633,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/SessionService.html":{}}}],["account",{"_index":2084,"title":{},"body":{"modules/UserRoutingModule.html":{},"index.html":{}}}],["account_circle",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["accounts",{"_index":2285,"title":{},"body":{"index.html":{}}}],["accès",{"_index":479,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["action",{"_index":1035,"title":{},"body":{"components/EstablishmentComponent.html":{},"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{}}}],["actions",{"_index":1128,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/SessionComponent.html":{},"components/UserListComponent.html":{}}}],["activatedroute",{"_index":1656,"title":{},"body":{"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{}}}],["activatedroutesnapshot",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active/désactive",{"_index":1961,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["actual_component",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["actuel",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["actuelle",{"_index":753,"title":{},"body":{"injectables/BookingService.html":{},"injectables/UserService.html":{}}}],["actuellement",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["actuelles",{"_index":670,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["add",{"_index":898,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{}}}],["add'},{'name",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["add.component",{"_index":1116,"title":{},"body":{"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{}}}],["add.component.html",{"_index":900,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["add.component.scss",{"_index":899,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["add.component.ts",{"_index":894,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"coverage.html":{}}}],["add.component.ts:22",{"_index":920,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["add.component.ts:23",{"_index":921,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["add.component.ts:24",{"_index":919,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["add.component.ts:25",{"_index":907,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["add.component.ts:42",{"_index":918,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["add.component.ts:58",{"_index":910,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["add.component.ts:89",{"_index":909,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["add.component.ts:99",{"_index":912,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["add/establishment",{"_index":893,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"coverage.html":{}}}],["addestablishment",{"_index":1052,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{}}}],["addestablishment(establishment",{"_index":1060,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{}}}],["address",{"_index":888,"title":{},"body":{"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentListComponent.html":{},"interfaces/FormattedOpeningHour.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["adduser",{"_index":2011,"title":{},"body":{"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["adduser(user",{"_index":2015,"title":{},"body":{"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["admin",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"modules/UserRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["adminguard",{"_index":1194,"title":{},"body":{"modules/EstablishmentRouting.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["administrateurs",{"_index":2331,"title":{},"body":{"index.html":{}}}],["adresse",{"_index":870,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{}}}],["adresses",{"_index":2333,"title":{},"body":{"index.html":{}}}],["affiche",{"_index":1083,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/HomeComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"modules/UserRoutingModule.html":{}}}],["afficher",{"_index":1100,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["affichées",{"_index":2317,"title":{},"body":{"index.html":{}}}],["affichés",{"_index":1277,"title":{},"body":{"components/HomeComponent.html":{}}}],["agit",{"_index":2009,"title":{},"body":{"injectables/UserFacadeService.html":{}}}],["ailleurs",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["air",{"_index":1510,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ajout",{"_index":2018,"title":{},"body":{"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["ajoute",{"_index":1178,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}}}],["ajouter",{"_index":896,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["align",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionFilterComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["all'},{'name",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["all.component",{"_index":1321,"title":{},"body":{"modules/HomeRoutingModule.html":{},"modules/SessionModule.html":{}}}],["all.component.html",{"_index":1925,"title":{},"body":{"components/SessionsListingAllComponent.html":{}}}],["all.component.scss",{"_index":1924,"title":{},"body":{"components/SessionsListingAllComponent.html":{}}}],["all.component.ts",{"_index":1923,"title":{},"body":{"components/SessionsListingAllComponent.html":{},"coverage.html":{}}}],["all.component.ts:13",{"_index":1926,"title":{},"body":{"components/SessionsListingAllComponent.html":{}}}],["all.component.ts:15",{"_index":1928,"title":{},"body":{"components/SessionsListingAllComponent.html":{}}}],["all.component.ts:22",{"_index":1929,"title":{},"body":{"components/SessionsListingAllComponent.html":{}}}],["all.component.ts:40",{"_index":1927,"title":{},"body":{"components/SessionsListingAllComponent.html":{}}}],["all/sessions",{"_index":1320,"title":{},"body":{"modules/HomeRoutingModule.html":{},"modules/SessionModule.html":{},"components/SessionsListingAllComponent.html":{},"coverage.html":{}}}],["allsessions",{"_index":1648,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["allsessionsbyestablishment",{"_index":1756,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["alreadybooked",{"_index":1651,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["alreadybooked(userid",{"_index":1658,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["amorc",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["amorcés",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["angular",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/InMemoryDataService.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2221,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2223,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":689,"title":{},"body":{"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["angular/compiler",{"_index":2225,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"dependencies.html":{},"interfaces/sessionByEstablishment.html":{}}}],["angular/forms",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"modules/EstablishmentModule.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{},"components/UserDashboardComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2226,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{},"modules/UserModule.html":{}}}],["angular/material/card",{"_index":1142,"title":{},"body":{"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{}}}],["angular/material/core",{"_index":1817,"title":{},"body":{"modules/SessionModule.html":{}}}],["angular/material/datepicker",{"_index":1815,"title":{},"body":{"modules/SessionModule.html":{}}}],["angular/material/dialog",{"_index":826,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{}}}],["angular/material/form",{"_index":1149,"title":{},"body":{"modules/EstablishmentModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/UserModule.html":{}}}],["angular/material/icon",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/UserModule.html":{}}}],["angular/material/input",{"_index":1152,"title":{},"body":{"modules/EstablishmentModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{},"modules/UserModule.html":{}}}],["angular/material/list",{"_index":1308,"title":{},"body":{"modules/HomeModule.html":{}}}],["angular/material/menu",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":1472,"title":{},"body":{"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/UserModule.html":{}}}],["angular/material/select",{"_index":1813,"title":{},"body":{"modules/SessionModule.html":{}}}],["angular/material/snack",{"_index":831,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"components/UserDashboardComponent.html":{},"modules/UserModule.html":{}}}],["angular/material/table",{"_index":691,"title":{},"body":{"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"modules/UserModule.html":{}}}],["angular/material/toolbar",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppRoutingModule.html":{},"modules/BookingRoutingModule.html":{},"injectables/BookingService.html":{},"modules/EstablishmentRouting.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"modules/LoginRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterRoutingModule.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"modules/UserRoutingModule.html":{},"dependencies.html":{}}}],["animate.css",{"_index":2238,"title":{},"body":{"dependencies.html":{}}}],["annulations",{"_index":2339,"title":{},"body":{"index.html":{}}}],["annule",{"_index":883,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["annuler",{"_index":956,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/UserDashboardComponent.html":{}}}],["api",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"components/EstablishmentAddComponent.html":{},"injectables/InMemoryDataService.html":{},"dependencies.html":{}}}],["api/bookings",{"_index":735,"title":{},"body":{"injectables/BookingService.html":{}}}],["api/establishments",{"_index":1216,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["api/sessions",{"_index":1868,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["api/users",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["apiloginurl",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["app",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["app.component.html",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["app/app.component",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["app/auth/application/guards/admin.guard",{"_index":1195,"title":{},"body":{"modules/EstablishmentRouting.html":{},"modules/UserRoutingModule.html":{}}}],["app/auth/application/guards/auth.guard",{"_index":1197,"title":{},"body":{"modules/EstablishmentRouting.html":{},"modules/UserRoutingModule.html":{}}}],["app/auth/application/login/login",{"_index":1470,"title":{},"body":{"modules/LoginModule.html":{}}}],["app/auth/application/login/login.component",{"_index":1469,"title":{},"body":{"modules/LoginModule.html":{}}}],["app/auth/application/login/login.module",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["app/auth/application/register/register",{"_index":1598,"title":{},"body":{"modules/RegisterModule.html":{}}}],["app/auth/application/register/register.component",{"_index":1597,"title":{},"body":{"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{}}}],["app/auth/application/services/auth.service",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/BookingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{}}}],["app/booking/application/facade/booking",{"_index":1686,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["app/booking/application/service/booking.service",{"_index":665,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["app/booking/domain/booking",{"_index":605,"title":{},"body":{"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/SessionDetailComponent.html":{}}}],["app/booking/mock/mock",{"_index":750,"title":{},"body":{"injectables/BookingService.html":{},"injectables/InMemoryDataService.html":{}}}],["app/booking/vue/component/booking.component",{"_index":694,"title":{},"body":{"modules/BookingRoutingModule.html":{}}}],["app/establishment/application/facade/establishment",{"_index":829,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{}}}],["app/establishment/application/services/establishment.service",{"_index":999,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["app/establishment/domain/establishment",{"_index":827,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"components/HomeComponent.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["app/establishment/establishment",{"_index":1138,"title":{},"body":{"modules/EstablishmentModule.html":{}}}],["app/establishment/establishment.module",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["app/establishment/mock/mock",{"_index":1279,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["app/establishment/vue/components/establishment",{"_index":1115,"title":{},"body":{"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{}}}],["app/establishment/vue/containers/establishment",{"_index":1144,"title":{},"body":{"modules/EstablishmentModule.html":{}}}],["app/home/home",{"_index":1306,"title":{},"body":{"modules/HomeModule.html":{}}}],["app/home/home.component",{"_index":1305,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["app/home/home.module",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["app/in",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["app/session/application/services/session.service",{"_index":1252,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["app/session/domain/session",{"_index":588,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"injectables/InMemoryDataService.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/sessionByEstablishment.html":{}}}],["app/session/mock/mock",{"_index":1378,"title":{},"body":{"injectables/InMemoryDataService.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["app/session/session.module",{"_index":1309,"title":{},"body":{"modules/HomeModule.html":{}}}],["app/session/vue/components/session",{"_index":1768,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"modules/SessionModule.html":{},"components/SessionsListingAllComponent.html":{}}}],["app/session/vue/components/session/session.component",{"_index":1810,"title":{},"body":{"modules/SessionModule.html":{}}}],["app/session/vue/containers/session",{"_index":1315,"title":{},"body":{"modules/HomeRoutingModule.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{}}}],["app/session/vue/containers/sessions",{"_index":1319,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["app/user/application/facade/user",{"_index":296,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{},"modules/UserModule.html":{},"components/UsersPageComponent.html":{}}}],["app/user/application/services/user.service",{"_index":2025,"title":{},"body":{"injectables/UserFacadeService.html":{},"modules/UserModule.html":{}}}],["app/user/domain/user",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["app/user/mock/mock",{"_index":1376,"title":{},"body":{"injectables/InMemoryDataService.html":{},"injectables/UserService.html":{}}}],["app/user/user",{"_index":2073,"title":{},"body":{"modules/UserModule.html":{}}}],["app/user/user.module",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["app/user/vue/components/user",{"_index":2072,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["app/user/vue/containers/users",{"_index":2074,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["appartiennent",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":2001,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["appelant",{"_index":1335,"title":{},"body":{"modules/HomeRoutingModule.html":{},"components/UsersPageComponent.html":{}}}],["appelle",{"_index":1409,"title":{},"body":{"components/LoginComponent.html":{},"components/UsersPageComponent.html":{}}}],["appelée",{"_index":877,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"modules/HomeRoutingModule.html":{}}}],["appinitializerservice",{"_index":56,"title":{"injectables/AppInitializerService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"coverage.html":{}}}],["application",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["application/json",{"_index":740,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["application/service/booking.service",{"_index":604,"title":{},"body":{"components/BookingComponent.html":{}}}],["appmodule",{"_index":329,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":1954,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["approutingmodule",{"_index":340,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appuie",{"_index":878,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["après",{"_index":648,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentPageComponent.html":{},"components/SessionDetailComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}}}],["aquasport",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argument",{"_index":1434,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets/pictures/bandeau",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/pictures/cardio.jpeg",{"_index":1515,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["assets/pictures/dsc5365",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/pictures/espace",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/pictures/functional.jpeg",{"_index":1520,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["assets/pictures/group.gif",{"_index":1518,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["assets/pictures/outdoor.jpg",{"_index":1521,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["assets/pictures/piscine",{"_index":2513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/pictures/porte",{"_index":2424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/pictures/strength.jpeg",{"_index":1517,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["assets/pictures/yoga.jpeg",{"_index":1519,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["associ",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/OpeningHour.html":{},"modules/RegisterModule.html":{},"interfaces/Session.html":{}}}],["associée",{"_index":1491,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["associées",{"_index":1302,"title":{},"body":{"modules/HomeModule.html":{}}}],["async",{"_index":625,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["atinhounon",{"_index":2280,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["atob(token",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["attente",{"_index":466,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["attribués",{"_index":1937,"title":{},"body":{"interfaces/User.html":{}}}],["au",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/HomeRoutingModule.html":{},"components/UserDashboardComponent.html":{}}}],["aucun",{"_index":1324,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["aucune",{"_index":1747,"title":{},"body":{"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{}}}],["auth",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["auth/application/register/register.module",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["authentifi",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["authentification",{"_index":2301,"title":{},"body":{"index.html":{}}}],["authentifie",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentifiés",{"_index":2085,"title":{},"body":{"modules/UserRoutingModule.html":{},"index.html":{}}}],["authguard",{"_index":1196,"title":{},"body":{"modules/EstablishmentRouting.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":54,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["authservice.gettoken",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.getuser",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.logout",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.verifytoken(token",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{}}}],["automatically",{"_index":2297,"title":{},"body":{"index.html":{}}}],["autoris",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autres",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/UserService.html":{}}}],["aux",{"_index":478,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["availability",{"_index":1754,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["availability.dayofweek",{"_index":1748,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["availability.endtime",{"_index":1752,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["availability.fulldate",{"_index":1749,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["availability.starttime",{"_index":1751,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["available",{"_index":2362,"title":{},"body":{"modules.html":{}}}],["availableplace",{"_index":1480,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["avant",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["avec",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BookingFacadeService.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserService.html":{}}}],["avenue",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avertis",{"_index":2338,"title":{},"body":{"index.html":{}}}],["avertissements",{"_index":2348,"title":{},"body":{"index.html":{}}}],["avez",{"_index":1583,"title":{},"body":{"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{}}}],["await",{"_index":680,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["ayant",{"_index":2082,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["b.userid",{"_index":1715,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["background",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/UserDashboardComponent.html":{}}}],["bar",{"_index":832,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"components/UserDashboardComponent.html":{},"modules/UserModule.html":{}}}],["barre",{"_index":852,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{}}}],["barres",{"_index":2340,"title":{},"body":{"index.html":{}}}],["bas",{"_index":1633,"title":{},"body":{"components/SessionComponent.html":{}}}],["bascule",{"_index":1959,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["base",{"_index":897,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"injectables/InMemoryDataService.html":{}}}],["bcrypt",{"_index":1412,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["bcrypt.comparesync",{"_index":1436,"title":{},"body":{"components/LoginComponent.html":{}}}],["bcrypt.gensaltsync(10",{"_index":1571,"title":{},"body":{"components/RegisterComponent.html":{}}}],["bcrypt.hashsync(plainpassword",{"_index":1576,"title":{},"body":{"components/RegisterComponent.html":{}}}],["bcryptjs",{"_index":1413,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["behaviorsubject",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["behaviorsubject(false",{"_index":1863,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["behaviorsubject(null",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(this.sessions",{"_index":1866,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["besancon",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["besoin",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["between",{"_index":1285,"title":{},"body":{"components/HomeComponent.html":{},"components/SessionDetailComponent.html":{}}}],["bien",{"_index":2346,"title":{},"body":{"index.html":{}}}],["block",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/UserDashboardComponent.html":{}}}],["blue",{"_index":1454,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["bold",{"_index":1031,"title":{},"body":{"components/EstablishmentComponent.html":{},"components/SessionComponent.html":{}}}],["bolder",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["book",{"_index":1726,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["book.sessionid",{"_index":1729,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["book.timebook",{"_index":1730,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["bookedtime",{"_index":1659,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["booking",{"_index":149,"title":{"interfaces/Booking.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Booking.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"modules/BookingModule.html":{},"injectables/BookingService.html":{},"injectables/InMemoryDataService.html":{},"components/SessionDetailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["booking'},{'name",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["booking.component.html",{"_index":591,"title":{},"body":{"components/BookingComponent.html":{}}}],["booking.component.scss",{"_index":590,"title":{},"body":{"components/BookingComponent.html":{}}}],["booking.filter(b",{"_index":1714,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["booking.id",{"_index":789,"title":{},"body":{"injectables/BookingService.html":{}}}],["booking.length",{"_index":1384,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["booking.sessionid",{"_index":1720,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["booking.ts",{"_index":2183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["booking/booking.module",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["booking/domain/booking",{"_index":1373,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["booking/vue/component/booking.component",{"_index":692,"title":{},"body":{"modules/BookingModule.html":{}}}],["bookingasobservable",{"_index":702,"title":{},"body":{"injectables/BookingService.html":{}}}],["bookingcomponent",{"_index":239,"title":{"components/BookingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookingfacadeservice",{"_index":611,"title":{"injectables/BookingFacadeService.html":{}},"body":{"injectables/BookingFacadeService.html":{},"components/SessionDetailComponent.html":{},"coverage.html":{}}}],["bookingid",{"_index":768,"title":{},"body":{"injectables/BookingService.html":{},"injectables/InMemoryDataService.html":{}}}],["bookingid(booking",{"_index":1354,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["bookingmodule",{"_index":341,"title":{"modules/BookingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules.html":{},"overview.html":{}}}],["bookingroutingmodule",{"_index":686,"title":{"modules/BookingRoutingModule.html":{}},"body":{"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["bookings",{"_index":594,"title":{},"body":{"components/BookingComponent.html":{},"modules/BookingRoutingModule.html":{},"injectables/BookingService.html":{},"injectables/InMemoryDataService.html":{},"components/SessionDetailComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookings.length",{"_index":1716,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["bookingservice",{"_index":596,"title":{"injectables/BookingService.html":{}},"body":{"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/SessionDetailComponent.html":{},"coverage.html":{}}}],["bookingssubject",{"_index":698,"title":{},"body":{"injectables/BookingService.html":{}}}],["bookingurl",{"_index":699,"title":{},"body":{"injectables/BookingService.html":{}}}],["bookking.num",{"_index":608,"title":{},"body":{"components/BookingComponent.html":{}}}],["booksession",{"_index":626,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["booksession(booking",{"_index":636,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["boolean",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"interfaces/sessionByEstablishment.html":{}}}],["bootstrap",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["bord",{"_index":2066,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["border",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/SessionComponent.html":{},"components/UserDashboardComponent.html":{}}}],["bottom",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["boulevard",{"_index":2502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bouton",{"_index":879,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["box",{"_index":1993,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["boxe",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boxeurs",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boîte",{"_index":856,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["brandon",{"_index":2277,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":1268,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["browse",{"_index":2360,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["browserify",{"_index":2242,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":967,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{}}}],["btoa(stringifyuser",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["button",{"_index":970,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["bvouvou2@myges.fr",{"_index":2548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":2427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c'est",{"_index":1322,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["c0c2cc",{"_index":1996,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["callback",{"_index":642,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}}}],["callback(false",{"_index":784,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["callback(true",{"_index":780,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["canactivate",{"_index":1199,"title":{},"body":{"modules/EstablishmentRouting.html":{},"modules/UserRoutingModule.html":{}}}],["canactivatefn",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["car",{"_index":1338,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["card",{"_index":1020,"title":{},"body":{"components/EstablishmentComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{}}}],["card/establishment.component",{"_index":1140,"title":{},"body":{"modules/EstablishmentModule.html":{}}}],["card/establishment.component.ts",{"_index":979,"title":{},"body":{"components/EstablishmentComponent.html":{},"coverage.html":{}}}],["card/establishment.component.ts:17",{"_index":992,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["card/establishment.component.ts:19",{"_index":997,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["card/establishment.component.ts:20",{"_index":990,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["card/establishment.component.ts:27",{"_index":995,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["card__actions",{"_index":1038,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["cardio",{"_index":1500,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["cardiovasculaire",{"_index":1499,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["cas",{"_index":727,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["catch",{"_index":1187,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["catcherror",{"_index":748,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["catcherror(err",{"_index":781,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["catcherror(this.handleerror('addestablishment",{"_index":1228,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["catcherror(this.handleerror('adduser",{"_index":2137,"title":{},"body":{"injectables/UserService.html":{}}}],["catcherror(this.handleerror('delete",{"_index":1240,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["catcherror(this.handleerror('deletebooking",{"_index":790,"title":{},"body":{"injectables/BookingService.html":{}}}],["catcherror(this.handleerror('deleteuser",{"_index":2140,"title":{},"body":{"injectables/UserService.html":{}}}],["catcherror(this.handleerror('getbookings",{"_index":802,"title":{},"body":{"injectables/BookingService.html":{}}}],["catcherror(this.handleerror('getestablishments",{"_index":1220,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["catcherror(this.handleerror('getsession",{"_index":1885,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["catcherror(this.handleerror('getusers",{"_index":2119,"title":{},"body":{"injectables/UserService.html":{}}}],["catcherror(this.handleerror('insertbooking",{"_index":767,"title":{},"body":{"injectables/BookingService.html":{}}}],["catcherror(this.handleerror('insertestablishment",{"_index":1231,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["catcherror(this.handleerror('insertsession",{"_index":1896,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["catcherror(this.handleerror(`establishment",{"_index":1224,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["catcherror(this.handleerror(`getuser",{"_index":2129,"title":{},"body":{"injectables/UserService.html":{}}}],["cdr",{"_index":991,"title":{},"body":{"components/EstablishmentComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{}}}],["ce",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"components/SessionDetailComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["cela",{"_index":1312,"title":{},"body":{"modules/HomeModule.html":{}}}],["center",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["centered",{"_index":1585,"title":{},"body":{"components/RegisterComponent.html":{}}}],["centre",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cet",{"_index":1793,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["cette",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{},"interfaces/User.html":{},"modules/UserRoutingModule.html":{}}}],["champ",{"_index":1551,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{}}}],["champs",{"_index":1538,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{}}}],["change",{"_index":2299,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":988,"title":{},"body":{"components/EstablishmentComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{}}}],["changements",{"_index":1543,"title":{},"body":{"components/RegisterComponent.html":{}}}],["changes",{"_index":996,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["changes['establishment",{"_index":1000,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["chaque",{"_index":301,"title":{},"body":{"injectables/AppInitializerService.html":{},"modules/AppRoutingModule.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["charg",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chargement",{"_index":1553,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chaîne",{"_index":1956,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["chaînes",{"_index":1935,"title":{},"body":{"interfaces/User.html":{}}}],["checkpassword",{"_index":1531,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chemin",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["chemins",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["choisir",{"_index":2328,"title":{},"body":{"index.html":{}}}],["class",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"interfaces/sessionByEstablishment.html":{}}}],["classe",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{}}}],["clermont",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["click",{"_index":2269,"title":{},"body":{"index.html":{}}}],["clip",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["close",{"_index":872,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"interfaces/FormattedOpeningHour.html":{},"miscellaneous/variables.html":{}}}],["closed",{"_index":1638,"title":{},"body":{"components/SessionComponent.html":{}}}],["club",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_bookingmodule",{"_index":683,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_bookingmodule_declarations",{"_index":685,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_bookingmodule_imports",{"_index":684,"title":{},"body":{"modules/BookingModule.html":{},"overview.html":{}}}],["cluster_establishmentmodule",{"_index":1129,"title":{},"body":{"modules/EstablishmentModule.html":{},"overview.html":{}}}],["cluster_establishmentmodule_declarations",{"_index":1131,"title":{},"body":{"modules/EstablishmentModule.html":{},"overview.html":{}}}],["cluster_establishmentmodule_exports",{"_index":1132,"title":{},"body":{"modules/EstablishmentModule.html":{},"overview.html":{}}}],["cluster_establishmentmodule_imports",{"_index":1130,"title":{},"body":{"modules/EstablishmentModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":1296,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":1298,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":1297,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_loginmodule",{"_index":1460,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_declarations",{"_index":1462,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_imports",{"_index":1463,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_providers",{"_index":1461,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_registermodule",{"_index":1591,"title":{},"body":{"modules/RegisterModule.html":{},"overview.html":{}}}],["cluster_registermodule_declarations",{"_index":1593,"title":{},"body":{"modules/RegisterModule.html":{},"overview.html":{}}}],["cluster_registermodule_imports",{"_index":1592,"title":{},"body":{"modules/RegisterModule.html":{},"overview.html":{}}}],["cluster_sessionmodule",{"_index":1803,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["cluster_sessionmodule_declarations",{"_index":1806,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["cluster_sessionmodule_exports",{"_index":1804,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["cluster_sessionmodule_imports",{"_index":1805,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2058,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":2059,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":2060,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":2061,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":2353,"title":{},"body":{"index.html":{}}}],["codec",{"_index":2229,"title":{},"body":{"dependencies.html":{}}}],["collection",{"_index":1356,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["collections",{"_index":1365,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["color",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/UserDashboardComponent.html":{}}}],["column",{"_index":1631,"title":{},"body":{"components/SessionComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["comme",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"modules/HomeModule.html":{},"injectables/UserFacadeService.html":{}}}],["comment",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":688,"title":{},"body":{"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/UserModule.html":{}}}],["communs",{"_index":2067,"title":{},"body":{"modules/UserModule.html":{}}}],["compiler",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["complète",{"_index":1487,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"modules/BookingRoutingModule.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"interfaces/FilterPayload.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"modules/LoginRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterRoutingModule.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionRoutingModule.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"modules/UserRoutingModule.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"overview.html":{}}}],["composant",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LoginComponent.html":{},"modules/LoginRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["composants",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["compris",{"_index":1159,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"index.html":{}}}],["compte",{"_index":1445,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["configurables",{"_index":2336,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterRoutingModule.html":{}}}],["configure",{"_index":460,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["confirmation",{"_index":880,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/UserDashboardComponent.html":{},"index.html":{}}}],["confirme",{"_index":875,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["confirmer",{"_index":1582,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":1539,"title":{},"body":{"components/RegisterComponent.html":{}}}],["conflit",{"_index":2325,"title":{},"body":{"index.html":{}}}],["confluence",{"_index":2514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"components/SessionDetailComponent.html":{}}}],["connecter",{"_index":1391,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["connexion",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["console.error('erreur",{"_index":1743,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["console.error('error",{"_index":797,"title":{},"body":{"injectables/BookingService.html":{}}}],["console.error(`${operation",{"_index":813,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["console.error(err",{"_index":792,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["console.error(error",{"_index":1188,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["console.log",{"_index":1185,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["console.log(`failed",{"_index":1190,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"components/UsersPageComponent.html":{}}}],["const",{"_index":313,"title":{},"body":{"injectables/AppInitializerService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"modules/BookingRoutingModule.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionRoutingModule.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["constructeur",{"_index":845,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{}}}],["constructor",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["constructor(authservice",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{}}}],["constructor(bookingservice",{"_index":595,"title":{},"body":{"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{}}}],["constructor(cdr",{"_index":987,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["constructor(dialog",{"_index":1095,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["constructor(establishmentfacade",{"_index":905,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["constructor(establishmentservice",{"_index":1058,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{}}}],["constructor(fb",{"_index":1950,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["constructor(formbuilder",{"_index":1396,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["constructor(memory",{"_index":704,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{}}}],["constructor(private",{"_index":606,"title":{},"body":{"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"interfaces/sessionByEstablishment.html":{}}}],["constructor(public",{"_index":1610,"title":{},"body":{"components/SessionComponent.html":{}}}],["constructor(route",{"_index":1655,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["constructor(sessionservice",{"_index":1605,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["constructor(userfacade",{"_index":2145,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["constructor(userservice",{"_index":2014,"title":{},"body":{"injectables/UserFacadeService.html":{}}}],["construire",{"_index":1400,"title":{},"body":{"components/LoginComponent.html":{}}}],["construit",{"_index":1398,"title":{},"body":{"components/LoginComponent.html":{}}}],["consultation",{"_index":1682,"title":{},"body":{"components/SessionDetailComponent.html":{},"index.html":{}}}],["consulter",{"_index":2316,"title":{},"body":{"index.html":{}}}],["conséquence",{"_index":1962,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["contact",{"_index":955,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["contain",{"_index":1033,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["container",{"_index":975,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/HomeComponent.html":{},"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["contenant",{"_index":1512,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"injectables/EstablishmentService.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["contenu",{"_index":601,"title":{},"body":{"components/BookingComponent.html":{},"components/SessionComponent.html":{}}}],["contient",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"modules/UserRoutingModule.html":{}}}],["convivial",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coordonnées",{"_index":2334,"title":{},"body":{"index.html":{}}}],["copyright",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["correspond",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["correspondent",{"_index":1540,"title":{},"body":{"components/RegisterComponent.html":{}}}],["courant",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["cours",{"_index":1681,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["cover",{"_index":1292,"title":{},"body":{"components/HomeComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{}}}],["coverage",{"_index":2160,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["createdb",{"_index":1351,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["critères",{"_index":2321,"title":{},"body":{"index.html":{}}}],["crossfit",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto",{"_index":2241,"title":{},"body":{"dependencies.html":{}}}],["création",{"_index":2302,"title":{},"body":{"index.html":{}}}],["crée",{"_index":1363,"title":{},"body":{"injectables/InMemoryDataService.html":{},"components/RegisterComponent.html":{}}}],["créer",{"_index":1446,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["créneau",{"_index":1662,"title":{},"body":{"components/SessionDetailComponent.html":{},"index.html":{}}}],["css",{"_index":1282,"title":{},"body":{"components/HomeComponent.html":{}}}],["csscsc",{"_index":610,"title":{},"body":{"components/BookingComponent.html":{}}}],["currentdate",{"_index":1611,"title":{},"body":{"components/SessionComponent.html":{}}}],["currentdate.getday",{"_index":1613,"title":{},"body":{"components/SessionComponent.html":{}}}],["currentdate.tolocaletimestring('fr",{"_index":1614,"title":{},"body":{"components/SessionComponent.html":{}}}],["currentday",{"_index":1612,"title":{},"body":{"components/SessionComponent.html":{}}}],["currentdayofweek",{"_index":1784,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["currenttime",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["currentuser",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentusersubject",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["currentvalue",{"_index":764,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["currentvalue.filter",{"_index":788,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{}}}],["currentvalue.filter(user",{"_index":2138,"title":{},"body":{"injectables/UserService.html":{}}}],["currentvalue.map(u",{"_index":775,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["cursor",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["cycle",{"_index":1175,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["d'accueil",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["d'accès",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["d'administration",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'ajout",{"_index":908,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{}}}],["d'angular",{"_index":1402,"title":{},"body":{"components/LoginComponent.html":{}}}],["d'annulation",{"_index":884,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["d'api",{"_index":1346,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["d'application",{"_index":462,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["d'authentification",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["d'entraînement",{"_index":1498,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["d'erreur",{"_index":728,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserService.html":{}}}],["d'escalade",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d'informations",{"_index":1676,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["d'inscription",{"_index":1524,"title":{},"body":{"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{}}}],["d'insérer",{"_index":620,"title":{},"body":{"injectables/BookingFacadeService.html":{},"components/HomeComponent.html":{}}}],["d'interface",{"_index":1303,"title":{},"body":{"modules/HomeModule.html":{}}}],["d'obtenir",{"_index":617,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["d'ouverture",{"_index":953,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"index.html":{}}}],["d'un",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/HomeComponent.html":{},"interfaces/User.html":{}}}],["d'une",{"_index":1479,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{}}}],["d'utilisateur",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserListComponent.html":{},"index.html":{}}}],["d'utilisateurs",{"_index":1366,"title":{},"body":{"injectables/InMemoryDataService.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{}}}],["d'échec",{"_index":1964,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["d'édition",{"_index":833,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"components/UserDashboardComponent.html":{}}}],["d'établissement",{"_index":1101,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{}}}],["d'établissements",{"_index":1160,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"injectables/InMemoryDataService.html":{}}}],["d'événements",{"_index":1118,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{}}}],["d\\'ouverture",{"_index":978,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["d\\'utilisateur",{"_index":1458,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["dans",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/RegisterComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["danse",{"_index":2509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboard",{"_index":1943,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["dashboard.component",{"_index":2071,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["dashboard.component.html",{"_index":1945,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":1944,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["dashboard.component.ts",{"_index":1940,"title":{},"body":{"components/UserDashboardComponent.html":{},"coverage.html":{}}}],["dashboard.component.ts:141",{"_index":1952,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["dashboard.component.ts:24",{"_index":1968,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["dashboard.component.ts:25",{"_index":1965,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["dashboard.component.ts:26",{"_index":1967,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["dashboard.component.ts:27",{"_index":1966,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["dashboard.component.ts:28",{"_index":1951,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["dashboard.component.ts:51",{"_index":1957,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["dashboard.component.ts:74",{"_index":1958,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["dashboard.component.ts:87",{"_index":1963,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["dashboard/user",{"_index":1939,"title":{},"body":{"components/UserDashboardComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{}}}],["data",{"_index":858,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{}}}],["data.establishment",{"_index":864,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{}}}],["data.service",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["data.service.ts",{"_index":1344,"title":{},"body":{"injectables/InMemoryDataService.html":{},"coverage.html":{}}}],["data.service.ts:26",{"_index":1362,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["data.service.ts:41",{"_index":1370,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["data.service.ts:45",{"_index":1368,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["data.service.ts:58",{"_index":1355,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["data.service.ts:64",{"_index":1372,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["dataencapsulation",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":602,"title":{},"body":{"components/BookingComponent.html":{},"interfaces/FilterPayload.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"index.html":{},"interfaces/sessionByEstablishment.html":{}}}],["date().getfullyear",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["date().gettime().tolocalestring",{"_index":1921,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["date(2023",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(date",{"_index":1782,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["date(openinghour.fulldate",{"_index":1920,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["date(openinghour.fulldate).getday",{"_index":1620,"title":{},"body":{"components/SessionComponent.html":{}}}],["date.tolocalestring('fr",{"_index":1785,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["date.tolocaletimestring('fr",{"_index":1788,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["datepipe",{"_index":1811,"title":{},"body":{"modules/SessionModule.html":{}}}],["dayofweek",{"_index":934,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["dd/mm/yyyy",{"_index":1750,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["de",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decodeuser",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoration",{"_index":1455,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["decorators",{"_index":917,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["decreaseavailability",{"_index":1652,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["decreaseavailability(sessionid",{"_index":1666,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["deep",{"_index":958,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["default",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default.jpeg",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default.png",{"_index":2428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["delete",{"_index":1093,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["delete(url",{"_index":787,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["deletebooking",{"_index":627,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["deletebooking(id",{"_index":641,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["deleteestablishment",{"_index":1053,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{}}}],["deleteestablishment(establishment",{"_index":1167,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["deleteestablishment(id",{"_index":1062,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{}}}],["deleteuser",{"_index":2012,"title":{},"body":{"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["deleteuser(id",{"_index":2019,"title":{},"body":{"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}}}],["deleteuser(user",{"_index":2148,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["demande",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["dependencies",{"_index":331,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depuis",{"_index":2110,"title":{},"body":{"injectables/UserService.html":{}}}],["des",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{},"injectables/SessionService.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"miscellaneous/variables.html":{}}}],["destruction",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["detail",{"_index":1645,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail'},{'name",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["detail.component",{"_index":1317,"title":{},"body":{"modules/HomeRoutingModule.html":{},"modules/SessionModule.html":{}}}],["detail.component.html",{"_index":1647,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail.component.scss",{"_index":1646,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail.component.ts",{"_index":1642,"title":{},"body":{"components/SessionDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:114",{"_index":1660,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail.component.ts:138",{"_index":1672,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail.component.ts:181",{"_index":1670,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail.component.ts:35",{"_index":1680,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":1683,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail.component.ts:43",{"_index":1677,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail.component.ts:47",{"_index":1675,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail.component.ts:51",{"_index":1673,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail.component.ts:55",{"_index":1657,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail.component.ts:59",{"_index":1684,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail.component.ts:68",{"_index":1671,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail.component.ts:92",{"_index":1667,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["detail/:id",{"_index":1330,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["detail/session",{"_index":1316,"title":{},"body":{"modules/HomeRoutingModule.html":{},"components/SessionDetailComponent.html":{},"modules/SessionModule.html":{},"coverage.html":{}}}],["details",{"_index":1753,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["dev",{"_index":2294,"title":{},"body":{"index.html":{}}}],["developer",{"_index":2275,"title":{},"body":{"index.html":{}}}],["development",{"_index":2292,"title":{},"body":{"index.html":{}}}],["devez",{"_index":1724,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["devraient",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["dialog",{"_index":1098,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{}}}],["dialog__container",{"_index":960,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["dialogdata",{"_index":816,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":854,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{}}}],["dialogref.afterclosed().subscribe((editedestablishment",{"_index":1181,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["dialogue",{"_index":857,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{}}}],["différents",{"_index":1495,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{}}}],["dim",{"_index":1009,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["dimanche",{"_index":2545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diminue",{"_index":1668,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["direction",{"_index":1630,"title":{},"body":{"components/SessionComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["directive",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["directives",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2357,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1428,"title":{},"body":{"components/LoginComponent.html":{}}}],["disabled",{"_index":867,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"components/UserDashboardComponent.html":{}}}],["display",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["displayedcolumns",{"_index":592,"title":{},"body":{"components/BookingComponent.html":{},"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{}}}],["disponibilit",{"_index":1669,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["disponibilité(s",{"_index":1746,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["disponible",{"_index":474,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"index.html":{}}}],["disponibles",{"_index":1341,"title":{},"body":{"modules/HomeRoutingModule.html":{},"components/SessionDetailComponent.html":{},"index.html":{}}}],["divers",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doit",{"_index":2327,"title":{},"body":{"index.html":{}}}],["doivent",{"_index":2314,"title":{},"body":{"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["domain/establishment",{"_index":998,"title":{},"body":{"components/EstablishmentComponent.html":{},"injectables/EstablishmentFacadeService.html":{}}}],["donne",{"_index":477,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["données",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["dont",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["droits",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["du",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["duration",{"_index":1986,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["dynamic",{"_index":2227,"title":{},"body":{"dependencies.html":{}}}],["début",{"_index":1488,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["déclare",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["déclarés",{"_index":1310,"title":{},"body":{"modules/HomeModule.html":{}}}],["déclench",{"_index":2048,"title":{},"body":{"components/UserListComponent.html":{}}}],["déclencher",{"_index":1119,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{}}}],["déconnect",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["déconnecte",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["déconnecter",{"_index":2308,"title":{},"body":{"index.html":{}}}],["déconnexion",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["décrivant",{"_index":1477,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["défaut",{"_index":1323,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["défini",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["définie",{"_index":1550,"title":{},"body":{"components/RegisterComponent.html":{}}}],["définir",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["définit",{"_index":1475,"title":{},"body":{"modules/LoginRoutingModule.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/User.html":{}}}],["déj",{"_index":1584,"title":{},"body":{"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{}}}],["démarrage",{"_index":302,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["dépendances",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"modules/RegisterModule.html":{}}}],["désabonne",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["désol",{"_index":1792,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["détail",{"_index":1328,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["détails",{"_index":1693,"title":{},"body":{"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{}}}],["détendre",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["détermine",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["développement",{"_index":1350,"title":{},"body":{"injectables/InMemoryDataService.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":1909,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/User.html":{},"index.html":{},"interfaces/sessionByEstablishment.html":{}}}],["e.id",{"_index":1910,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["edit",{"_index":839,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["edit'},{'name",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["edit.component",{"_index":1150,"title":{},"body":{"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{}}}],["edit.component.html",{"_index":840,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{}}}],["edit.component.scss",{"_index":841,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{}}}],["edit.component.ts",{"_index":819,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:25",{"_index":1048,"title":{},"body":{"components/EstablishmentEditComponent.html":{}}}],["edit.component.ts:26",{"_index":1047,"title":{},"body":{"components/EstablishmentEditComponent.html":{}}}],["edit.component.ts:27",{"_index":1045,"title":{},"body":{"components/EstablishmentEditComponent.html":{}}}],["edit.component.ts:28",{"_index":1046,"title":{},"body":{"components/EstablishmentEditComponent.html":{}}}],["edit.component.ts:29",{"_index":1040,"title":{},"body":{"components/EstablishmentEditComponent.html":{}}}],["edit.component.ts:45",{"_index":1044,"title":{},"body":{"components/EstablishmentEditComponent.html":{}}}],["edit.component.ts:46",{"_index":1043,"title":{},"body":{"components/EstablishmentEditComponent.html":{}}}],["edit.component.ts:63",{"_index":1042,"title":{},"body":{"components/EstablishmentEditComponent.html":{}}}],["edit.component.ts:71",{"_index":1041,"title":{},"body":{"components/EstablishmentEditComponent.html":{}}}],["edit/establishment",{"_index":818,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"coverage.html":{}}}],["editedestablishment",{"_index":1182,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["editer",{"_index":1991,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["editing",{"_index":843,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"components/UserDashboardComponent.html":{}}}],["effectuées",{"_index":1685,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["element",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["elle",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{}}}],["email",{"_index":1558,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["encodeuser",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["endtime",{"_index":938,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["enfant",{"_index":1339,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["entraînement",{"_index":1501,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["entre",{"_index":1404,"title":{},"body":{"components/LoginComponent.html":{}}}],["entrée",{"_index":2032,"title":{},"body":{"components/UserListComponent.html":{}}}],["enum",{"_index":1497,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["enumerations",{"_index":2265,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumération",{"_index":1494,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{}}}],["err",{"_index":791,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["err.message",{"_index":783,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["erreur",{"_index":1549,"title":{},"body":{"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserService.html":{}}}],["erreurs",{"_index":811,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserService.html":{}}}],["error",{"_index":729,"title":{},"body":{"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"components/SessionDetailComponent.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["eslint",{"_index":1427,"title":{},"body":{"components/LoginComponent.html":{},"dependencies.html":{}}}],["eslint/no",{"_index":1432,"title":{},"body":{"components/LoginComponent.html":{}}}],["est",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"miscellaneous/variables.html":{}}}],["establishment",{"_index":242,"title":{"interfaces/Establishment.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"interfaces/FormattedOpeningHour.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["establishment'},{'name",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["establishment.address",{"_index":1012,"title":{},"body":{"components/EstablishmentComponent.html":{},"components/EstablishmentListComponent.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["establishment.close",{"_index":1127,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["establishment.component.html",{"_index":982,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["establishment.component.scss",{"_index":981,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["establishment.id",{"_index":1186,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["establishment.nom",{"_index":1001,"title":{},"body":{"components/EstablishmentComponent.html":{},"components/EstablishmentListComponent.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["establishment.opening",{"_index":1126,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["establishment.phonenumber",{"_index":1014,"title":{},"body":{"components/EstablishmentComponent.html":{},"components/EstablishmentListComponent.html":{}}}],["establishment.ts",{"_index":2191,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["establishment/:id",{"_index":1331,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["establishment/domain/establishment",{"_index":1375,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["establishment/establishment.module",{"_index":1304,"title":{},"body":{"modules/HomeModule.html":{}}}],["establishment/mock/mock",{"_index":1374,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["establishmentaddcomponent",{"_index":241,"title":{"components/EstablishmentAddComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["establishmentcomponent",{"_index":244,"title":{"components/EstablishmentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["establishmenteditcomponent",{"_index":246,"title":{"components/EstablishmentEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["establishmentelt",{"_index":985,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["establishmentfacade",{"_index":848,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["establishmentfacadeservice",{"_index":828,"title":{"injectables/EstablishmentFacadeService.html":{}},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"coverage.html":{}}}],["establishmentform",{"_index":842,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["establishmentid",{"_index":1352,"title":{},"body":{"injectables/InMemoryDataService.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["establishmentid(establishments",{"_index":1367,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["establishmentlistcomponent",{"_index":248,"title":{"components/EstablishmentListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["establishmentmodule",{"_index":342,"title":{"modules/EstablishmentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["establishmentpagecomponent",{"_index":250,"title":{"components/EstablishmentPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["establishmentrouting",{"_index":1133,"title":{"modules/EstablishmentRouting.html":{}},"body":{"modules/EstablishmentModule.html":{},"modules/EstablishmentRouting.html":{},"modules.html":{},"overview.html":{}}}],["establishments",{"_index":1091,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"injectables/EstablishmentService.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"injectables/SessionService.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["establishments.length",{"_index":1382,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["establishmentservice",{"_index":989,"title":{"injectables/EstablishmentService.html":{}},"body":{"components/EstablishmentComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"coverage.html":{}}}],["establishmentsubject",{"_index":1202,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["establishmentsurl",{"_index":1203,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["et",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"modules/LoginModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["etablissement",{"_index":1049,"title":{},"body":{"components/EstablishmentEditComponent.html":{}}}],["etablissements",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["etc",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["etc.doivent",{"_index":2335,"title":{},"body":{"index.html":{}}}],["event",{"_index":309,"title":{},"body":{"injectables/AppInitializerService.html":{},"components/EstablishmentAddComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["event.target",{"_index":947,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["eventemitter",{"_index":1103,"title":{},"body":{"components/EstablishmentListComponent.html":{},"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{},"components/UserListComponent.html":{}}}],["example",{"_index":667,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{}}}],["existant",{"_index":838,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["existante",{"_index":676,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["expire",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Booking.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"interfaces/sessionByEstablishment.html":{}}}],["exporte",{"_index":2065,"title":{},"body":{"modules/UserModule.html":{}}}],["exports",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"modules/EstablishmentModule.html":{},"modules/EstablishmentRouting.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"overview.html":{}}}],["exportée",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["exportés",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["exécute",{"_index":1545,"title":{},"body":{"components/RegisterComponent.html":{}}}],["exécuter",{"_index":647,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}}}],["exécutée",{"_index":1407,"title":{},"body":{"components/LoginComponent.html":{}}}],["f44336",{"_index":2006,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["facade.service",{"_index":297,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"modules/UserModule.html":{},"components/UsersPageComponent.html":{}}}],["facade.service.ts",{"_index":613,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/EstablishmentFacadeService.html":{},"injectables/UserFacadeService.html":{},"coverage.html":{}}}],["facade.service.ts:10",{"_index":1059,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{}}}],["facade.service.ts:13",{"_index":1067,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{}}}],["facade.service.ts:17",{"_index":1066,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{}}}],["facade.service.ts:20",{"_index":635,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["facade.service.ts:22",{"_index":1061,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"injectables/UserFacadeService.html":{}}}],["facade.service.ts:26",{"_index":1071,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{}}}],["facade.service.ts:29",{"_index":664,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/UserFacadeService.html":{}}}],["facade.service.ts:33",{"_index":1063,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{}}}],["facade.service.ts:36",{"_index":654,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["facade.service.ts:37",{"_index":1064,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"injectables/UserFacadeService.html":{}}}],["facade.service.ts:41",{"_index":1069,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{}}}],["facade.service.ts:45",{"_index":656,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["facade.service.ts:46",{"_index":2016,"title":{},"body":{"injectables/UserFacadeService.html":{}}}],["facade.service.ts:55",{"_index":658,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/UserFacadeService.html":{}}}],["facade.service.ts:64",{"_index":2020,"title":{},"body":{"injectables/UserFacadeService.html":{}}}],["facade.service.ts:65",{"_index":660,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["facade.service.ts:72",{"_index":2021,"title":{},"body":{"injectables/UserFacadeService.html":{}}}],["facade.service.ts:75",{"_index":644,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["facade.service.ts:85",{"_index":637,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["facade.service.ts:94",{"_index":650,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["failed",{"_index":814,"title":{},"body":{"injectables/BookingService.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["faire",{"_index":1725,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["false",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"interfaces/FilterPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["famille",{"_index":1581,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["family",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["faux",{"_index":1665,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["façade",{"_index":666,"title":{},"body":{"injectables/BookingFacadeService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/UserFacadeService.html":{}}}],["fb",{"_index":850,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/UserDashboardComponent.html":{}}}],["fdgdfgfg",{"_index":609,"title":{},"body":{"components/BookingComponent.html":{}}}],["ferm",{"_index":1627,"title":{},"body":{"components/SessionComponent.html":{}}}],["fermer",{"_index":1050,"title":{},"body":{"components/EstablishmentEditComponent.html":{},"components/UserDashboardComponent.html":{}}}],["fermeture",{"_index":954,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{}}}],["fetched",{"_index":2128,"title":{},"body":{"injectables/UserService.html":{}}}],["ffc107",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["fff",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/SessionComponent.html":{}}}],["fichier",{"_index":914,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/HomeComponent.html":{}}}],["field",{"_index":963,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"modules/EstablishmentModule.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"modules/UserModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Booking.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{}}}],["files",{"_index":2300,"title":{},"body":{"index.html":{}}}],["fill",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["filter",{"_index":298,"title":{},"body":{"injectables/AppInitializerService.html":{},"interfaces/FilterPayload.html":{},"components/LoginComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["filter'},{'name",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["filter(user",{"_index":1424,"title":{},"body":{"components/LoginComponent.html":{}}}],["filter.component",{"_index":1769,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"modules/SessionModule.html":{},"components/SessionsListingAllComponent.html":{}}}],["filter.component.html",{"_index":1253,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["filter.component.scss",{"_index":1254,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["filter.component.ts",{"_index":1245,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:17",{"_index":1796,"title":{},"body":{"components/SessionFilterComponent.html":{}}}],["filter.component.ts:20",{"_index":1799,"title":{},"body":{"components/SessionFilterComponent.html":{}}}],["filter.component.ts:21",{"_index":1798,"title":{},"body":{"components/SessionFilterComponent.html":{}}}],["filter.component.ts:23",{"_index":1800,"title":{},"body":{"components/SessionFilterComponent.html":{}}}],["filter.component.ts:24",{"_index":1795,"title":{},"body":{"components/SessionFilterComponent.html":{}}}],["filter.component.ts:28",{"_index":1797,"title":{},"body":{"components/SessionFilterComponent.html":{}}}],["filter.component.ts:5",{"_index":1249,"title":{},"body":{"interfaces/FilterPayload.html":{}}}],["filter/session",{"_index":1244,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"components/SessionsListingAllComponent.html":{},"coverage.html":{}}}],["filterchange",{"_index":1255,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["filterdata",{"_index":1262,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["filterdata[key",{"_index":1266,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["filterpayload",{"_index":1242,"title":{"interfaces/FilterPayload.html":{}},"body":{"interfaces/FilterPayload.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"coverage.html":{}}}],["filtersessions",{"_index":1261,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["filtrer",{"_index":2320,"title":{},"body":{"index.html":{}}}],["fin",{"_index":1486,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["find",{"_index":1687,"title":{},"body":{"components/SessionDetailComponent.html":{},"injectables/UserService.html":{}}}],["find(this.allsessions",{"_index":1707,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["findbookings",{"_index":634,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["firstname",{"_index":1556,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["fit",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{}}}],["fitbooking",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["fitness",{"_index":2416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flex",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["flux",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/SessionDetailComponent.html":{},"injectables/UserFacadeService.html":{}}}],["fois",{"_index":467,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fonction",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["fonctionnalit",{"_index":480,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fonctionnalités",{"_index":2064,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["fonctionnel",{"_index":1507,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["fonctionnement",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["font",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{}}}],["football",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["footer",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["force",{"_index":1502,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["forchild",{"_index":1337,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["form",{"_index":962,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{}}}],["formation",{"_index":1600,"title":{},"body":{"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["formatteddayandhours",{"_index":892,"title":{},"body":{"interfaces/Establishment.html":{},"interfaces/FormattedOpeningHour.html":{}}}],["formattedopeninghour",{"_index":891,"title":{"interfaces/FormattedOpeningHour.html":{}},"body":{"interfaces/Establishment.html":{},"interfaces/FormattedOpeningHour.html":{},"coverage.html":{}}}],["formbuilder",{"_index":821,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{}}}],["formdata",{"_index":924,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["formdata.append('image",{"_index":925,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["forme",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formgroup",{"_index":822,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{}}}],["formsmodule",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/EstablishmentModule.html":{},"modules/SessionModule.html":{}}}],["formulaire",{"_index":847,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"components/UserDashboardComponent.html":{}}}],["formulaires",{"_index":1165,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"components/LoginComponent.html":{}}}],["forroot",{"_index":471,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fourni",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["fournies",{"_index":2031,"title":{},"body":{"components/UserListComponent.html":{}}}],["fournir",{"_index":1942,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["fournissant",{"_index":2304,"title":{},"body":{"index.html":{}}}],["fournisseur",{"_index":472,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fournit",{"_index":283,"title":{},"body":{"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterRoutingModule.html":{},"injectables/UserFacadeService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["fr",{"_index":1615,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["france",{"_index":2421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["friday",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fuites",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["full",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fulldate",{"_index":1481,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":646,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}}}],["functional",{"_index":1508,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["galement",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"injectables/UserFacadeService.html":{},"modules/UserModule.html":{}}}],["gambetta",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/SessionComponent.html":{},"components/SessionFilterComponent.html":{}}}],["garantir",{"_index":2309,"title":{},"body":{"index.html":{}}}],["garde",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["garder",{"_index":2089,"title":{},"body":{"injectables/UserService.html":{}}}],["gardiens",{"_index":2079,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["generate",{"_index":2355,"title":{},"body":{"index.html":{}}}],["generateid",{"_index":628,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["generatetoken",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(user",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["genid",{"_index":1353,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["genid(users",{"_index":1369,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["gestion",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/BookingService.html":{},"components/EstablishmentPageComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"index.html":{}}}],["get('confirmpassword",{"_index":1565,"title":{},"body":{"components/RegisterComponent.html":{}}}],["get(booking",{"_index":769,"title":{},"body":{"injectables/BookingService.html":{}}}],["get(establishment",{"_index":1189,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["get(param",{"_index":1695,"title":{},"body":{"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{}}}],["get(parseduser",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(this.bookingurl",{"_index":800,"title":{},"body":{"injectables/BookingService.html":{}}}],["get(this.establishmentsurl",{"_index":1219,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["get(this.loginform.value",{"_index":1421,"title":{},"body":{"components/LoginComponent.html":{}}}],["get(this.registerform.value",{"_index":1574,"title":{},"body":{"components/RegisterComponent.html":{}}}],["get(this.sessionurl",{"_index":1884,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["get(this.user",{"_index":1977,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["get(this.userform.value",{"_index":1982,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["get(this.usersurl",{"_index":2118,"title":{},"body":{"injectables/UserService.html":{}}}],["get(u",{"_index":1426,"title":{},"body":{"components/LoginComponent.html":{}}}],["get(url",{"_index":806,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["get(user",{"_index":2158,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["getbookingasobservable",{"_index":742,"title":{},"body":{"injectables/BookingService.html":{}}}],["getbookings",{"_index":629,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["getbookingsbyuserid",{"_index":630,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["getbookingsbyuserid(id",{"_index":655,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["getbookingsbyuserid(userid",{"_index":711,"title":{},"body":{"injectables/BookingService.html":{}}}],["getemailerror",{"_index":1947,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["getestablishmens",{"_index":1163,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["getestablishment",{"_index":1054,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{}}}],["getestablishment(id",{"_index":1065,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{}}}],["getestablishments",{"_index":1055,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{}}}],["getfindbookings",{"_index":663,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["getisfilter",{"_index":1875,"title":{},"body":{"injectables/SessionService.html":{}}}],["getkeybyvalue",{"_index":1825,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["getkeybyvalue(obj",{"_index":1840,"title":{},"body":{"injectables/SessionService.html":{}}}],["getonesessionbyestablishment",{"_index":1826,"title":{},"body":{"injectables/SessionService.html":{}}}],["getonesessionbyestablishment(id",{"_index":1844,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["getsessionbyestablishment",{"_index":1827,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["getsessionbyid",{"_index":1828,"title":{},"body":{"injectables/SessionService.html":{}}}],["getsessionbyid(id",{"_index":1847,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["getsessions",{"_index":1829,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["getsessionsasobservable",{"_index":1869,"title":{},"body":{"injectables/SessionService.html":{}}}],["getsessionsasvalue",{"_index":1871,"title":{},"body":{"injectables/SessionService.html":{}}}],["getter",{"_index":668,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["getting",{"_index":2267,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettrainingsessionimageurl",{"_index":1830,"title":{},"body":{"injectables/SessionService.html":{}}}],["gettrainingsessionimageurl(type",{"_index":1850,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["getuser",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}}}],["getuser(id",{"_index":2104,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(userid",{"_index":2022,"title":{},"body":{"injectables/UserFacadeService.html":{}}}],["getuseridfromtoken",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuseridfromtoken(token",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserno404",{"_index":2098,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserno404(id",{"_index":2106,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserroles",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusers",{"_index":2013,"title":{},"body":{"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["github",{"_index":2272,"title":{},"body":{"index.html":{}}}],["gradient(90deg",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":2361,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":2000,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["green",{"_index":1637,"title":{},"body":{"components/SessionComponent.html":{},"components/UserDashboardComponent.html":{}}}],["group",{"_index":1504,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["groupe",{"_index":1401,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["guard",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gym",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gymnase",{"_index":2415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gère",{"_index":810,"title":{},"body":{"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"components/SessionDetailComponent.html":{},"injectables/SessionService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["génère",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/InMemoryDataService.html":{},"components/RegisterComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}}}],["génér",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InMemoryDataService.html":{},"injectables/UserFacadeService.html":{}}}],["génération",{"_index":2095,"title":{},"body":{"injectables/UserService.html":{}}}],["générer",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["gérer",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"modules/HomeModule.html":{},"index.html":{}}}],["h2",{"_index":966,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["hache",{"_index":1546,"title":{},"body":{"components/RegisterComponent.html":{}}}],["handleerror",{"_index":701,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["handleerror(operation",{"_index":713,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["head",{"_index":1414,"title":{},"body":{"components/LoginComponent.html":{}}}],["head(usertologged",{"_index":1438,"title":{},"body":{"components/LoginComponent.html":{}}}],["header",{"_index":1288,"title":{},"body":{"components/HomeComponent.html":{}}}],["headers",{"_index":738,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["height",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{}}}],["here",{"_index":2270,"title":{},"body":{"index.html":{}}}],["hero",{"_index":1293,"title":{},"body":{"components/HomeComponent.html":{}}}],["hero.id",{"_index":1381,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["heure",{"_index":2319,"title":{},"body":{"index.html":{}}}],["heures",{"_index":1478,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["highlight",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["home",{"_index":1273,"title":{},"body":{"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["home'},{'name",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["home.component.html",{"_index":1275,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1274,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":252,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":343,"title":{"modules/HomeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homeroutingmodule",{"_index":1299,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["horaire",{"_index":952,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/SessionDetailComponent.html":{},"index.html":{}}}],["horaires",{"_index":2332,"title":{},"body":{"index.html":{}}}],["host",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{}}}],["hour",{"_index":1616,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["hover",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["html",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["htmlinputelement",{"_index":948,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["http",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["http://localhost:4200",{"_index":2296,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["httpclientinmemorywebapimodule",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientinmemorywebapimodule.forroot(inmemorydataservice",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":739,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["httpoptions",{"_index":700,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["icon",{"_index":1034,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["id",{"_index":584,"title":{},"body":{"interfaces/Booking.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"interfaces/FormattedOpeningHour.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"modules/SessionRoutingModule.html":{},"injectables/SessionService.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["id=${id",{"_index":1225,"title":{},"body":{"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["id=${userid",{"_index":808,"title":{},"body":{"injectables/BookingService.html":{}}}],["identifiant",{"_index":651,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["il",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BookingFacadeService.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"injectables/UserFacadeService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["image",{"_index":1024,"title":{},"body":{"components/EstablishmentComponent.html":{},"components/EstablishmentListComponent.html":{},"components/HomeComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{}}}],["images",{"_index":1513,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["imageurl",{"_index":1492,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["img",{"_index":1022,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["imgurl",{"_index":873,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"interfaces/FormattedOpeningHour.html":{},"miscellaneous/variables.html":{}}}],["imite",{"_index":1345,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["implements",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/InMemoryDataService.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UsersPageComponent.html":{}}}],["implémente",{"_index":1523,"title":{},"body":{"components/RegisterComponent.html":{}}}],["import",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Booking.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"interfaces/sessionByEstablishment.html":{}}}],["import('@/app/auth/application/login/login.module').then",{"_index":456,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('@/app/auth/application/register/register.module').then",{"_index":458,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('@/app/home/home.module').then(module",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('@/app/user/user.module').then(module",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["importations",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["importe",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/UserModule.html":{}}}],["imports",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"modules/EstablishmentModule.html":{},"modules/EstablishmentRouting.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["importées",{"_index":1278,"title":{},"body":{"components/HomeComponent.html":{}}}],["importés",{"_index":1271,"title":{},"body":{"components/HomeComponent.html":{},"modules/HomeModule.html":{}}}],["includes",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["includes(user.roles",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["inclut",{"_index":1313,"title":{},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"interfaces/Booking.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1247,"title":{},"body":{"interfaces/FilterPayload.html":{}}}],["indicateur",{"_index":1552,"title":{},"body":{"components/RegisterComponent.html":{}}}],["indique",{"_index":2342,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Booking.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"interfaces/sessionByEstablishment.html":{}}}],["informations",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"index.html":{}}}],["initialise",{"_index":846,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/RegisterComponent.html":{},"components/UsersPageComponent.html":{}}}],["initialiser",{"_index":284,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["initializer.service",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["initializer.service.ts",{"_index":282,"title":{},"body":{"injectables/AppInitializerService.html":{},"coverage.html":{}}}],["initializer.service.ts:14",{"_index":288,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["initializer.service.ts:35",{"_index":289,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["inject",{"_index":820,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["inject(authservice",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(mat_dialog_data",{"_index":862,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["inject(router",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":279,"title":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{},"injectables/InMemoryDataService.html":{},"injectables/SessionService.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{},"injectables/InMemoryDataService.html":{},"injectables/SessionService.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{}}}],["injectables",{"_index":280,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{},"injectables/InMemoryDataService.html":{},"injectables/SessionService.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1635,"title":{},"body":{"components/SessionComponent.html":{}}}],["inmemorydataservice",{"_index":377,"title":{"injectables/InMemoryDataService.html":{}},"body":{"modules/AppModule.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/InMemoryDataService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{}}}],["inmemorydbservice",{"_index":906,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"injectables/InMemoryDataService.html":{}}}],["input",{"_index":603,"title":{},"body":{"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/SessionComponent.html":{},"components/UserListComponent.html":{}}}],["input[readonly",{"_index":1999,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["inputelement",{"_index":946,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["inputelement.files",{"_index":949,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["inputelement.files.length",{"_index":950,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["inputelement.files[0",{"_index":951,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["inputs",{"_index":593,"title":{},"body":{"components/BookingComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentListComponent.html":{},"components/SessionComponent.html":{},"components/UserListComponent.html":{}}}],["inscription",{"_index":1579,"title":{},"body":{"components/RegisterComponent.html":{}}}],["insertbooking",{"_index":631,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["insertbooking(booking",{"_index":657,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["insertestablishment",{"_index":1056,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{}}}],["insertestablishment(establishment",{"_index":1068,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{}}}],["insertsession",{"_index":1831,"title":{},"body":{"injectables/SessionService.html":{}}}],["insertsession(session",{"_index":1853,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["install",{"_index":2287,"title":{},"body":{"index.html":{}}}],["installing",{"_index":2290,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1399,"title":{},"body":{"components/LoginComponent.html":{}}}],["instanceof",{"_index":310,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["insère",{"_index":674,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["intense",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intensif",{"_index":2515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interagir",{"_index":615,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["interface",{"_index":581,"title":{"interfaces/Booking.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"interfaces/User.html":{},"interfaces/sessionByEstablishment.html":{}},"body":{"interfaces/Booking.html":{},"injectables/BookingFacadeService.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentEditComponent.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"injectables/InMemoryDataService.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{}}}],["interfaces",{"_index":582,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"interfaces/User.html":{},"overview.html":{},"interfaces/sessionByEstablishment.html":{}}}],["invalid",{"_index":2005,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["ironfit",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isadmin",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["isauthenticated",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["isempty",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["isempty(token",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["isequal",{"_index":1688,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["isequal(booking.timebook",{"_index":1721,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["isequal(session.id",{"_index":1708,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["isequal(time",{"_index":1711,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["isfilter",{"_index":1837,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["isfilter(isfilter",{"_index":1889,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["isfiltersubject",{"_index":1822,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["isloading",{"_index":844,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{}}}],["isnull",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["isopenondate",{"_index":1780,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["issessionopen",{"_index":1604,"title":{},"body":{"components/SessionComponent.html":{}}}],["issessionopen(session",{"_index":1607,"title":{},"body":{"components/SessionComponent.html":{}}}],["issessionopenondate",{"_index":1758,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["issessionopenondate(session",{"_index":1760,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["istanbul",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["istitlematch",{"_index":1778,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["istokenvalid",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["istypematch",{"_index":1776,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["isundefined",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{},"components/UserDashboardComponent.html":{}}}],["isundefined(id",{"_index":1978,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["isundefined(password",{"_index":1980,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["isundefined(username",{"_index":1979,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["isuserauthenticated",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isuserpasswordright",{"_index":1435,"title":{},"body":{"components/LoginComponent.html":{}}}],["isvalidatetoken",{"_index":317,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["isvalidopening",{"_index":1653,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["items",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionFilterComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["jaune",{"_index":2347,"title":{},"body":{"index.html":{}}}],["jdoe@myges.fr",{"_index":2554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jeudi",{"_index":940,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"miscellaneous/variables.html":{}}}],["john",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jour",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["jours",{"_index":1678,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["jridgewell/sourcemap",{"_index":2228,"title":{},"body":{"dependencies.html":{}}}],["jsdoc",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["json.parse(decodeuser",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(userinfo",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["justify",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["karma",{"_index":2247,"title":{},"body":{"dependencies.html":{}}}],["keita",{"_index":2278,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":1248,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["keyof",{"_index":1915,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["l'accès",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l'adresse",{"_index":2306,"title":{},"body":{"index.html":{}}}],["l'aide",{"_index":2034,"title":{},"body":{"components/UserListComponent.html":{}}}],["l'ajout",{"_index":922,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"index.html":{}}}],["l'api",{"_index":2111,"title":{},"body":{"injectables/UserService.html":{}}}],["l'application",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["l'authentification",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["l'entraînement",{"_index":1516,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["l'erreur",{"_index":721,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["l'escalade",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["l'exportation",{"_index":1340,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["l'heure",{"_index":1485,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["l'id",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InMemoryDataService.html":{},"injectables/UserFacadeService.html":{}}}],["l'identifiant",{"_index":645,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{},"injectables/UserService.html":{}}}],["l'image",{"_index":1490,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["l'initialisation",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/UserDashboardComponent.html":{}}}],["l'inscription",{"_index":1596,"title":{},"body":{"modules/RegisterModule.html":{}}}],["l'interface",{"_index":1468,"title":{},"body":{"modules/LoginModule.html":{},"modules/UserModule.html":{}}}],["l'opération",{"_index":718,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["l'url",{"_index":1489,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["l'utilisateur",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/LoginComponent.html":{},"components/SessionDetailComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["l'énumération",{"_index":1493,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["l'établissement",{"_index":859,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["l'état",{"_index":1960,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["l'événement",{"_index":915,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{}}}],["la",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{},"injectables/SessionService.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lancer",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["lansana",{"_index":2279,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["lanskei",{"_index":2284,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["laquelle",{"_index":720,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["lastname",{"_index":1557,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["lazy",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["le",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"index.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":1027,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["legend",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingComponent.html":{},"modules/BookingModule.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"components/UsersPageComponent.html":{},"overview.html":{}}}],["lequel",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["les",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{},"injectables/SessionService.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["leur",{"_index":2307,"title":{},"body":{"index.html":{}}}],["leurs",{"_index":2311,"title":{},"body":{"index.html":{}}}],["lev",{"_index":1361,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["line",{"_index":1430,"title":{},"body":{"components/LoginComponent.html":{}}}],["linear",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["link",{"_index":1451,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["list",{"_index":1084,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserListComponent.html":{}}}],["list'},{'name",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["list.component",{"_index":1143,"title":{},"body":{"modules/EstablishmentModule.html":{},"modules/UserModule.html":{}}}],["list.component.html",{"_index":1086,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.scss",{"_index":1085,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":1082,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:19",{"_index":1097,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["list.component.ts:23",{"_index":2036,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:24",{"_index":2037,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:25",{"_index":2039,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:26",{"_index":2038,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:28",{"_index":2045,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:30",{"_index":1102,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["list.component.ts:33",{"_index":2040,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:34",{"_index":1104,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["list.component.ts:38",{"_index":1106,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["list.component.ts:41",{"_index":2044,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:42",{"_index":1105,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["list.component.ts:44",{"_index":1113,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["list.component.ts:49",{"_index":2042,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:57",{"_index":1107,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["list.component.ts:66",{"_index":1111,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["list.component.ts:75",{"_index":1109,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["list.component.ts:82",{"_index":1112,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["list/establishment",{"_index":1081,"title":{},"body":{"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"coverage.html":{}}}],["list/user",{"_index":2030,"title":{},"body":{"components/UserListComponent.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["liste",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"miscellaneous/variables.html":{}}}],["listing",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{}}}],["listing'},{'name",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["literal",{"_index":1841,"title":{},"body":{"injectables/SessionService.html":{}}}],["liées",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{}}}],["lkeita2@myges.fr",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localisation",{"_index":2323,"title":{},"body":{"index.html":{}}}],["localstorage.removeitem('app_token",{"_index":325,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{}}}],["localstorage.setitem('app_token",{"_index":1441,"title":{},"body":{"components/LoginComponent.html":{}}}],["lodash",{"_index":1415,"title":{},"body":{"components/LoginComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{}}}],["lodash/get",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/EstablishmentPageComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/UserDashboardComponent.html":{},"components/UsersPageComponent.html":{}}}],["lodash/includes",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["lodash/isempty",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["lodash/isequal",{"_index":1689,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["lodash/isnull",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["lodash/isundefined",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["lodash/parseint",{"_index":1691,"title":{},"body":{"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{}}}],["loggeduser",{"_index":1437,"title":{},"body":{"components/LoginComponent.html":{}}}],["loggeduserid",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger",{"_index":2251,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"modules/LoginRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["login(username",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component",{"_index":1474,"title":{},"body":{"modules/LoginRoutingModule.html":{}}}],["login.component.html",{"_index":1393,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1392,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":254,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1394,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmodule",{"_index":344,"title":{"modules/LoginModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["loginroutingmodule",{"_index":1464,"title":{"modules/LoginRoutingModule.html":{}},"body":{"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["logique",{"_index":1157,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"components/SessionDetailComponent.html":{}}}],["logo",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["logout",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":1787,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["lors",{"_index":1349,"title":{},"body":{"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{}}}],["lorsqu'un",{"_index":2049,"title":{},"body":{"components/UserListComponent.html":{}}}],["lorsque",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"modules/HomeRoutingModule.html":{}}}],["lun",{"_index":1002,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["lundi",{"_index":935,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"miscellaneous/variables.html":{}}}],["mail",{"_index":1933,"title":{},"body":{"interfaces/User.html":{},"index.html":{}}}],["maillot",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manipulation",{"_index":2068,"title":{},"body":{"modules/UserModule.html":{}}}],["manipuler",{"_index":2087,"title":{},"body":{"injectables/UserService.html":{}}}],["map",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["map(user",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["map(users",{"_index":2124,"title":{},"body":{"injectables/UserService.html":{}}}],["mardi",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["margin",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["marseille",{"_index":2489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["mat_dialog_data",{"_index":825,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["matbuttonmodule",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{},"modules/UserModule.html":{}}}],["matcardmodule",{"_index":1141,"title":{},"body":{"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{}}}],["matching",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Booking.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":1814,"title":{},"body":{"modules/SessionModule.html":{}}}],["matdialog",{"_index":1096,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{}}}],["matdialogmodule",{"_index":1147,"title":{},"body":{"modules/EstablishmentModule.html":{}}}],["matdialogref",{"_index":824,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["material",{"_index":1099,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"modules/HomeModule.html":{},"modules/UserModule.html":{}}}],["matformfieldmodule",{"_index":1148,"title":{},"body":{"modules/EstablishmentModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/UserModule.html":{}}}],["math.floor(date.now",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["math.max(...booking.map(hero",{"_index":1385,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["math.max(...establishments.map(hero",{"_index":1383,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["math.max(...sessions.map(hero",{"_index":1387,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["math.max(...users.map(hero",{"_index":1380,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["maticonmodule",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/UserModule.html":{}}}],["matinputmodule",{"_index":1151,"title":{},"body":{"modules/EstablishmentModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{},"modules/UserModule.html":{}}}],["matlistmodule",{"_index":1307,"title":{},"body":{"modules/HomeModule.html":{}}}],["matmenumodule",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":1816,"title":{},"body":{"modules/SessionModule.html":{}}}],["matprogressspinnermodule",{"_index":1471,"title":{},"body":{"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/UserModule.html":{}}}],["matselectmodule",{"_index":1812,"title":{},"body":{"modules/SessionModule.html":{}}}],["matsnackbar",{"_index":830,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"components/UserDashboardComponent.html":{}}}],["matsnackbarmodule",{"_index":2069,"title":{},"body":{"modules/UserModule.html":{}}}],["mattablemodule",{"_index":690,"title":{},"body":{"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"modules/UserModule.html":{}}}],["mattoolbarmodule",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1016,"title":{},"body":{"components/EstablishmentComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["mdc",{"_index":959,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["memory",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"injectables/EstablishmentService.html":{},"injectables/InMemoryDataService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/sessionByEstablishment.html":{}}}],["mercredi",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mes",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":1953,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["met",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentPageComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}}}],["metadata",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["methods",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["metteur",{"_index":1117,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["mettre",{"_index":621,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["min",{"_index":1039,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["minute",{"_index":1618,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["mis",{"_index":2050,"title":{},"body":{"components/UserListComponent.html":{}}}],["miscellaneous",{"_index":2264,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":661,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentListComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["mises",{"_index":2093,"title":{},"body":{"injectables/UserService.html":{}}}],["mock",{"_index":1272,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["mock/mock",{"_index":1218,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["modification",{"_index":876,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{},"index.html":{}}}],["modifications",{"_index":837,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"index.html":{}}}],["modifier",{"_index":860,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/UserDashboardComponent.html":{}}}],["module",{"_index":328,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"modules/EstablishmentModule.html":{},"modules/EstablishmentRouting.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"modules/SessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["module.homemodule",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module.loginmodule",{"_index":457,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module.registermodule",{"_index":459,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module.usermodule",{"_index":455,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules",{"_index":330,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"modules/EstablishmentModule.html":{},"modules/EstablishmentRouting.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/UserDashboardComponent.html":{},"index.html":{}}}],["monday",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mot",{"_index":1442,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["mots",{"_index":1536,"title":{},"body":{"components/RegisterComponent.html":{}}}],["moveit",{"_index":2510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["muscu",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["musculaire",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["musculation",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mémoire",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"injectables/InMemoryDataService.html":{}}}],["métadonnée",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["méthode",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["méthodes",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"injectables/UserFacadeService.html":{}}}],["même",{"_index":2326,"title":{},"body":{"index.html":{}}}],["n",{"_index":607,"title":{},"body":{"components/BookingComponent.html":{}}}],["n'avez",{"_index":1444,"title":{},"body":{"components/LoginComponent.html":{}}}],["n'est",{"_index":292,"title":{},"body":{"injectables/AppInitializerService.html":{},"modules/HomeRoutingModule.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{}}}],["n'existe",{"_index":306,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["n\\'avez",{"_index":1459,"title":{},"body":{"components/LoginComponent.html":{}}}],["n\\'est",{"_index":1794,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["nalvac",{"_index":2281,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"index.html":{}}}],["natation",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["natinhounon@myges.fr",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nature",{"_index":2541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navigate",{"_index":2295,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppRoutingModule.html":{}}}],["navigationstart",{"_index":295,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["navigue",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["naviguer",{"_index":1403,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ne",{"_index":1548,"title":{},"body":{"components/RegisterComponent.html":{}}}],["new",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentListComponent.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["newbooking",{"_index":766,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{}}}],["newestablishment",{"_index":927,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["newsession",{"_index":1895,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["newuser",{"_index":2136,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":1429,"title":{},"body":{"components/LoginComponent.html":{}}}],["ng",{"_index":957,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"index.html":{}}}],["ngclass",{"_index":1807,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["ngforof",{"_index":1134,"title":{},"body":{"modules/EstablishmentModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["ngif",{"_index":1135,"title":{},"body":{"modules/EstablishmentModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["ngmodule",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"modules/EstablishmentModule.html":{},"modules/EstablishmentRouting.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["ngonchanges",{"_index":986,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["ngonchanges(changes",{"_index":993,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["ngondestroy",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["ngoninit",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UsersPageComponent.html":{}}}],["ngoptimizedimage",{"_index":1136,"title":{},"body":{"modules/EstablishmentModule.html":{},"modules/SessionModule.html":{},"overview.html":{}}}],["ngtools/webpack",{"_index":2231,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SessionDetailComponent.html":{},"dependencies.html":{}}}],["niveau",{"_index":463,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["niveaux",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nom",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingService.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"interfaces/FormattedOpeningHour.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nombre",{"_index":1482,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{}}}],["nomestablishment",{"_index":1879,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["non",{"_index":1621,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{}}}],["none",{"_index":1456,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["normale",{"_index":2351,"title":{},"body":{"index.html":{}}}],["notifications",{"_index":853,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"index.html":{}}}],["notre",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["nouveau",{"_index":1125,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["nouveaux",{"_index":1526,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["nouvel",{"_index":895,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/InMemoryDataService.html":{},"components/RegisterComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["nouvelle",{"_index":640,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/InMemoryDataService.html":{},"injectables/UserService.html":{}}}],["nouvelles",{"_index":747,"title":{},"body":{"injectables/BookingService.html":{}}}],["npmcli/fs",{"_index":2233,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/EstablishmentAddComponent.html":{},"components/UserDashboardComponent.html":{}}}],["num",{"_index":599,"title":{},"body":{"components/BookingComponent.html":{}}}],["number",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Booking.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/Establishment.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"interfaces/FormattedOpeningHour.html":{},"injectables/InMemoryDataService.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{},"injectables/SessionService.html":{},"interfaces/User.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"interfaces/sessionByEstablishment.html":{}}}],["numeric",{"_index":1617,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["numérique",{"_index":652,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/UserService.html":{}}}],["nécessaires",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"index.html":{}}}],["nécessite",{"_index":1326,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["obj",{"_index":1843,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["obj.hasownproperty(key",{"_index":1917,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["obj[key",{"_index":1918,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["object",{"_index":737,"title":{},"body":{"injectables/BookingService.html":{},"components/EstablishmentComponent.html":{},"injectables/EstablishmentService.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object.values(trainingsession",{"_index":1259,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["objet",{"_index":1364,"title":{},"body":{"injectables/InMemoryDataService.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["objets",{"_index":2046,"title":{},"body":{"components/UserListComponent.html":{}}}],["observable",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"interfaces/sessionByEstablishment.html":{}}}],["obtenir",{"_index":669,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/SessionService.html":{},"injectables/UserFacadeService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["obtient",{"_index":799,"title":{},"body":{"injectables/BookingService.html":{}}}],["of(null",{"_index":785,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["of(result",{"_index":815,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["offre",{"_index":2010,"title":{},"body":{"injectables/UserFacadeService.html":{}}}],["olympique",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onadd",{"_index":1087,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{}}}],["onbooking",{"_index":1654,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["oncanceladd",{"_index":902,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["oncanceledit",{"_index":885,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{}}}],["onchanges",{"_index":980,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["onconfirmadd",{"_index":903,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["onconfirmedit",{"_index":881,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{}}}],["ondelete",{"_index":1088,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{}}}],["ondelete(establishment",{"_index":1108,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["ondelete(user",{"_index":2041,"title":{},"body":{"components/UserListComponent.html":{}}}],["ondestroy",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["onfileselected",{"_index":904,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["onfileselected(event",{"_index":911,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["onfilterchange",{"_index":1759,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["onfilterchange(event",{"_index":1763,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["oninit",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UsersPageComponent.html":{}}}],["onlogin",{"_index":1395,"title":{},"body":{"components/LoginComponent.html":{}}}],["onlogout",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["onregister",{"_index":1532,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ont",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"components/UserDashboardComponent.html":{}}}],["onupdate",{"_index":1089,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{}}}],["onupdate(establishment",{"_index":1110,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["onupdate(user",{"_index":2043,"title":{},"body":{"components/UserListComponent.html":{}}}],["open",{"_index":1636,"title":{},"body":{"components/SessionComponent.html":{}}}],["openadddialog",{"_index":1090,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["opening",{"_index":871,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"interfaces/FormattedOpeningHour.html":{},"miscellaneous/variables.html":{}}}],["openinghour",{"_index":587,"title":{"interfaces/OpeningHour.html":{}},"body":{"interfaces/Booking.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"interfaces/FormattedOpeningHour.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{}}}],["openinghour.dayofweek.tolowercase",{"_index":1789,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["openinghours",{"_index":889,"title":{},"body":{"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"interfaces/FormattedOpeningHour.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{},"miscellaneous/variables.html":{}}}],["openinghours.starttime",{"_index":1623,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["openingshour",{"_index":1860,"title":{},"body":{"injectables/SessionService.html":{}}}],["openingshour.filter",{"_index":1919,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["operation",{"_index":717,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["optimisées",{"_index":2344,"title":{},"body":{"index.html":{}}}],["optional",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"interfaces/Booking.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["opérations",{"_index":2343,"title":{},"body":{"index.html":{}}}],["ou",{"_index":305,"title":{},"body":{"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"injectables/BookingFacadeService.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/UserDashboardComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["out",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["outcome",{"_index":2127,"title":{},"body":{"injectables/UserService.html":{}}}],["outdoor",{"_index":1511,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["outline",{"_index":2002,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["outline.mat",{"_index":2004,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["output",{"_index":1114,"title":{},"body":{"components/EstablishmentListComponent.html":{},"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{},"components/UserListComponent.html":{}}}],["outputs",{"_index":1092,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/SessionFilterComponent.html":{},"components/UserListComponent.html":{}}}],["ouvert",{"_index":1626,"title":{},"body":{"components/SessionComponent.html":{}}}],["ouvre",{"_index":1172,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["ouvrir",{"_index":1123,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["overlay",{"_index":1025,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["overview",{"_index":2363,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1452,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["package",{"_index":2220,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{}}}],["page",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/UsersPageComponent.html":{},"miscellaneous/variables.html":{}}}],["page'},{'name",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["page.component",{"_index":1146,"title":{},"body":{"modules/EstablishmentModule.html":{},"modules/EstablishmentRouting.html":{},"modules/HomeRoutingModule.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["page.component.html",{"_index":1162,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/UsersPageComponent.html":{}}}],["page.component.scss",{"_index":1161,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/UsersPageComponent.html":{}}}],["page.component.ts",{"_index":1156,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:100",{"_index":1168,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["page.component.ts:20",{"_index":1766,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["page.component.ts:21",{"_index":1767,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["page.component.ts:22",{"_index":1164,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{}}}],["page.component.ts:24",{"_index":2146,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["page.component.ts:30",{"_index":1762,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["page.component.ts:31",{"_index":2151,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["page.component.ts:32",{"_index":1173,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["page.component.ts:38",{"_index":2150,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["page.component.ts:39",{"_index":1170,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["page.component.ts:45",{"_index":1764,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["page.component.ts:46",{"_index":1169,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"components/UsersPageComponent.html":{}}}],["page.component.ts:55",{"_index":1166,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["page.component.ts:57",{"_index":2152,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["page.component.ts:65",{"_index":1761,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["page.component.ts:68",{"_index":1171,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["page.component.ts:71",{"_index":2149,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["page/establishment",{"_index":1145,"title":{},"body":{"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"coverage.html":{}}}],["page/session",{"_index":1318,"title":{},"body":{"modules/HomeRoutingModule.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"coverage.html":{}}}],["page/users",{"_index":2075,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/UsersPageComponent.html":{},"coverage.html":{}}}],["pages",{"_index":1405,"title":{},"body":{"components/LoginComponent.html":{}}}],["panelclass",{"_index":1988,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["par",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{},"components/UserListComponent.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["param",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/SessionDetailComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["parameters",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["paramètre",{"_index":1327,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["paramètres",{"_index":465,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paris",{"_index":2420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parmi",{"_index":2329,"title":{},"body":{"index.html":{}}}],["parseduser",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["parseint",{"_index":1690,"title":{},"body":{"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{}}}],["parseint(id",{"_index":1697,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["parties",{"_index":2091,"title":{},"body":{"injectables/UserService.html":{}}}],["partir",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{}}}],["pas",{"_index":293,"title":{},"body":{"injectables/AppInitializerService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["passe",{"_index":1443,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["passer123",{"_index":2286,"title":{},"body":{"index.html":{}}}],["password",{"_index":1418,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["passworddoesnotmatch",{"_index":1567,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordmatch",{"_index":1533,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BookingRoutingModule.html":{},"modules/EstablishmentRouting.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterRoutingModule.html":{},"modules/SessionRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["pathmatch",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pendant",{"_index":719,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["permet",{"_index":616,"title":{},"body":{"injectables/BookingFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["permettant",{"_index":1389,"title":{},"body":{"components/LoginComponent.html":{}}}],["peut",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"components/SessionDetailComponent.html":{}}}],["peuvent",{"_index":2303,"title":{},"body":{"index.html":{}}}],["phone",{"_index":1013,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["phonenumber",{"_index":874,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"interfaces/FormattedOpeningHour.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":890,"title":{},"body":{"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"interfaces/FormattedOpeningHour.html":{}}}],["pilates",{"_index":1506,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{}}}],["pin_drop",{"_index":1011,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["pipe",{"_index":762,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["pipe(filter(event",{"_index":308,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["pipe(take(1",{"_index":1734,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["pipe(tap",{"_index":801,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["place",{"_index":1483,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["placer",{"_index":1632,"title":{},"body":{"components/SessionComponent.html":{}}}],["places",{"_index":1644,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["plainpassword",{"_index":1575,"title":{},"body":{"components/RegisterComponent.html":{}}}],["planifiée",{"_index":1622,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["plein",{"_index":1509,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["plugin",{"_index":2244,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":1360,"title":{},"body":{"injectables/InMemoryDataService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["plusieurs",{"_index":697,"title":{},"body":{"injectables/BookingService.html":{}}}],["pointer",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["poppins",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["position",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/HomeComponent.html":{},"components/UserDashboardComponent.html":{}}}],["possède",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":1226,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["post(this.bookingurl",{"_index":760,"title":{},"body":{"injectables/BookingService.html":{}}}],["post(this.sessionurl",{"_index":1891,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["postcss",{"_index":2254,"title":{},"body":{"dependencies.html":{}}}],["pour",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"index.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["pouvoir",{"_index":2315,"title":{},"body":{"index.html":{}}}],["power",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prennent",{"_index":2349,"title":{},"body":{"index.html":{}}}],["principale",{"_index":1174,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["private",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["processus",{"_index":1467,"title":{},"body":{"modules/LoginModule.html":{},"components/RegisterComponent.html":{}}}],["produite",{"_index":723,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserService.html":{}}}],["project",{"_index":2274,"title":{},"body":{"index.html":{}}}],["projects",{"_index":2291,"title":{},"body":{"index.html":{}}}],["promesse",{"_index":639,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["promise",{"_index":707,"title":{},"body":{"injectables/BookingService.html":{}}}],["promise((resolve",{"_index":793,"title":{},"body":{"injectables/BookingService.html":{}}}],["propagées",{"_index":2033,"title":{},"body":{"components/UserListComponent.html":{}}}],["properties",{"_index":41,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Booking.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"properties.html":{},"interfaces/sessionByEstablishment.html":{}}}],["protected",{"_index":983,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["protéger",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protégées",{"_index":2078,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["providedin",{"_index":300,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{},"injectables/InMemoryDataService.html":{},"injectables/SessionService.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["providers",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["prédéfinis",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prénom",{"_index":1580,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{}}}],["public",{"_index":861,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{}}}],["puis",{"_index":1410,"title":{},"body":{"components/LoginComponent.html":{}}}],["punch",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["put(url",{"_index":772,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["qu'aux",{"_index":2081,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["qu'observable",{"_index":752,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["que",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["qui",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["racine",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["radius",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/SessionComponent.html":{},"components/UserDashboardComponent.html":{}}}],["reactiveformsmodule",{"_index":1153,"title":{},"body":{"modules/EstablishmentModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/UserModule.html":{}}}],["readonly",{"_index":984,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["recevoir",{"_index":2337,"title":{},"body":{"index.html":{}}}],["recueillir",{"_index":836,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["red",{"_index":1639,"title":{},"body":{"components/SessionComponent.html":{}}}],["redirig",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirige",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{}}}],["register",{"_index":1527,"title":{},"body":{"components/RegisterComponent.html":{},"modules/RegisterRoutingModule.html":{}}}],["register'},{'name",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["register.component.html",{"_index":1529,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1528,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":256,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerform",{"_index":1530,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registermodule",{"_index":345,"title":{"modules/RegisterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/RegisterModule.html":{},"modules.html":{},"overview.html":{}}}],["registerroutingmodule",{"_index":1594,"title":{"modules/RegisterRoutingModule.html":{}},"body":{"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["reject",{"_index":794,"title":{},"body":{"injectables/BookingService.html":{}}}],["reject(error",{"_index":798,"title":{},"body":{"injectables/BookingService.html":{}}}],["relative",{"_index":1019,"title":{},"body":{"components/EstablishmentComponent.html":{},"components/HomeComponent.html":{},"components/UserDashboardComponent.html":{}}}],["relatives",{"_index":2077,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["reload",{"_index":2298,"title":{},"body":{"index.html":{}}}],["removetokenifusernotfound",{"_index":285,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["rend",{"_index":473,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["renvoie",{"_index":1358,"title":{},"body":{"injectables/InMemoryDataService.html":{},"components/UserDashboardComponent.html":{}}}],["renvoyée",{"_index":2108,"title":{},"body":{"injectables/UserService.html":{}}}],["reporter",{"_index":2249,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":2273,"title":{},"body":{"index.html":{}}}],["représentant",{"_index":1936,"title":{},"body":{"interfaces/User.html":{}}}],["requis",{"_index":1955,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["requête",{"_index":812,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["requêtes",{"_index":2088,"title":{},"body":{"injectables/UserService.html":{}}}],["reset",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolve(newbooking",{"_index":796,"title":{},"body":{"injectables/BookingService.html":{}}}],["ressourcer",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rest",{"_index":1347,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["reste",{"_index":476,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["result",{"_index":714,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["result.push",{"_index":1911,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["results",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Booking.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["retour",{"_index":726,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["return",{"_index":316,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["revoir",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["reçues",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(0",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/UserDashboardComponent.html":{}}}],["right",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/UserDashboardComponent.html":{}}}],["roles",{"_index":1577,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{},"injectables/InMemoryDataService.html":{},"injectables/SessionService.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["root'},{'name",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["routage",{"_index":470,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["route",{"_index":1198,"title":{},"body":{"modules/EstablishmentRouting.html":{},"modules/HomeRoutingModule.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"modules/SessionRoutingModule.html":{},"modules/UserRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/BookingService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigatebyurl('/login",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":1808,"title":{},"body":{"modules/SessionModule.html":{},"overview.html":{}}}],["routermodule",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BookingRoutingModule.html":{},"modules/EstablishmentRouting.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterRoutingModule.html":{},"modules/SessionRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["routermodule.forchild",{"_index":1336,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["routermodule.forchild(route",{"_index":1200,"title":{},"body":{"modules/EstablishmentRouting.html":{},"modules/SessionRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":695,"title":{},"body":{"modules/BookingRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":469,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":432,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BookingRoutingModule.html":{},"modules/EstablishmentRouting.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterRoutingModule.html":{},"modules/SessionRoutingModule.html":{},"modules/UserRoutingModule.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["routeur",{"_index":461,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomeRoutingModule.html":{}}}],["routing",{"_index":1139,"title":{},"body":{"modules/EstablishmentModule.html":{}}}],["routing.module",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/UserModule.html":{}}}],["routing.module.ts",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BookingRoutingModule.html":{},"modules/HomeRoutingModule.html":{},"modules/LoginRoutingModule.html":{},"modules/RegisterRoutingModule.html":{},"modules/SessionRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["routing.ts",{"_index":1192,"title":{},"body":{"modules/EstablishmentRouting.html":{}}}],["row",{"_index":1283,"title":{},"body":{"components/HomeComponent.html":{}}}],["rue",{"_index":2418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":2288,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentFacadeService.html":{},"injectables/EstablishmentService.html":{},"components/SessionDetailComponent.html":{},"injectables/SessionService.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"interfaces/sessionByEstablishment.html":{}}}],["rxjs/operators",{"_index":299,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["récupère",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}}}],["récupérer",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"modules/HomeRoutingModule.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["référence",{"_index":855,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["réserv",{"_index":1661,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["réservation",{"_index":623,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/InMemoryDataService.html":{},"components/SessionDetailComponent.html":{},"index.html":{}}}],["réservations",{"_index":619,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/InMemoryDataService.html":{},"components/SessionDetailComponent.html":{}}}],["réserve",{"_index":679,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["réserver",{"_index":1643,"title":{},"body":{"components/SessionDetailComponent.html":{},"index.html":{}}}],["réservée",{"_index":1664,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["résultat",{"_index":730,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["réussie",{"_index":1742,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["rôle",{"_index":2083,"title":{},"body":{"modules/UserRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["rôles",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["s'abonne",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["s'abonner",{"_index":2092,"title":{},"body":{"injectables/UserService.html":{}}}],["s'est",{"_index":722,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserService.html":{}}}],["s'exécutent",{"_index":2345,"title":{},"body":{"index.html":{}}}],["s'exécuter",{"_index":2352,"title":{},"body":{"index.html":{}}}],["saisie",{"_index":1992,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["saisis",{"_index":1537,"title":{},"body":{"components/RegisterComponent.html":{}}}],["salle",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["salt",{"_index":1570,"title":{},"body":{"components/RegisterComponent.html":{}}}],["sam",{"_index":1006,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["samedi",{"_index":942,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"miscellaneous/variables.html":{}}}],["sans",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["saturday",{"_index":2412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scaffolding",{"_index":2354,"title":{},"body":{"index.html":{}}}],["se",{"_index":1390,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["searchtitle",{"_index":1257,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["second",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["see",{"_index":2094,"title":{},"body":{"injectables/UserService.html":{}}}],["sein",{"_index":1332,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["select",{"_index":974,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["selecteddate",{"_index":1260,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["selecteddays",{"_index":1649,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["selectedfile",{"_index":901,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["selectedtype",{"_index":1256,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["selector",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"interfaces/FilterPayload.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["semaine",{"_index":1484,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["serif",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["sert",{"_index":1941,"title":{},"body":{"components/UserDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":2293,"title":{},"body":{"index.html":{}}}],["service",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}}}],["services",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{}}}],["services/establishment.service",{"_index":1073,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{}}}],["session",{"_index":261,"title":{"interfaces/Session.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"interfaces/FilterPayload.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["session'},{'name",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["session.component.html",{"_index":1603,"title":{},"body":{"components/SessionComponent.html":{}}}],["session.component.scss",{"_index":1602,"title":{},"body":{"components/SessionComponent.html":{}}}],["session.description",{"_index":1625,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{}}}],["session.establishmentid",{"_index":1904,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["session.id",{"_index":1738,"title":{},"body":{"components/SessionDetailComponent.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["session.openinghours.find",{"_index":1619,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["session.title",{"_index":1624,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{}}}],["session.title.tolowercase().includes(title.tolowercase",{"_index":1779,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["session.ts",{"_index":2207,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["session.type.tolowercase().includes(type.tolowercase",{"_index":1777,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["sessionalreadybooked",{"_index":1718,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["sessionbooking",{"_index":1736,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["sessionbyestablishment",{"_index":1765,"title":{"interfaces/sessionByEstablishment.html":{}},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"injectables/SessionService.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{}}}],["sessionbyestablishment.establishmentid",{"_index":1913,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["sessioncomponent",{"_index":258,"title":{"components/SessionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sessiondata",{"_index":1901,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["sessiondetailcomponent",{"_index":260,"title":{"components/SessionDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sessionestablishmentlistingpagecomponent",{"_index":263,"title":{"components/SessionEstablishmentListingPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sessionfiltercomponent",{"_index":265,"title":{"components/SessionFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"interfaces/FilterPayload.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sessionid",{"_index":585,"title":{},"body":{"interfaces/Booking.html":{},"injectables/InMemoryDataService.html":{},"components/SessionDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["sessionid(sessions",{"_index":1371,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["sessionmodule",{"_index":1300,"title":{"modules/SessionModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/SessionModule.html":{},"modules.html":{},"overview.html":{}}}],["sessionroutingmodule",{"_index":1819,"title":{"modules/SessionRoutingModule.html":{}},"body":{"modules/SessionRoutingModule.html":{},"modules.html":{}}}],["sessions",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["sessions.find",{"_index":1737,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["sessions.length",{"_index":1386,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["sessionsasobservable",{"_index":1834,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["sessionsasvalue",{"_index":1835,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["sessionsbyestablishment",{"_index":1757,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["sessionsbyestablishment.address",{"_index":1791,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["sessionsbyestablishment.get(session.establishmentid)?.push(session",{"_index":1906,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["sessionsbyestablishment.has(session.establishmentid",{"_index":1905,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["sessionsbyestablishment.nomestablishment",{"_index":1790,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["sessionsbyestablishment.set(session.establishmentid",{"_index":1907,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["sessionservice",{"_index":1251,"title":{"injectables/SessionService.html":{}},"body":{"interfaces/FilterPayload.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{}}}],["sessionslistingallcomponent",{"_index":267,"title":{"components/SessionsListingAllComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sessionsmock",{"_index":1377,"title":{},"body":{"injectables/InMemoryDataService.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"injectables/SessionService.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["sessionssubject",{"_index":1823,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["sessiontobook",{"_index":1706,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["sessiontobook.openinghours.find(time",{"_index":1710,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["sessiontype",{"_index":1801,"title":{},"body":{"components/SessionFilterComponent.html":{}}}],["sessiontypes",{"_index":1258,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["sessionurl",{"_index":1824,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["set",{"_index":756,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["setbooking",{"_index":703,"title":{},"body":{"injectables/BookingService.html":{}}}],["setbooking(booking",{"_index":757,"title":{},"body":{"injectables/BookingService.html":{}}}],["setcurrentuser",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["setcurrentuser(user",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["seterrors",{"_index":1566,"title":{},"body":{"components/RegisterComponent.html":{}}}],["setisfilter(isfilter",{"_index":1877,"title":{},"body":{"injectables/SessionService.html":{}}}],["setsetbooking(booking",{"_index":745,"title":{},"body":{"injectables/BookingService.html":{}}}],["setter",{"_index":755,"title":{},"body":{"injectables/BookingService.html":{}}}],["setupdatesessions(session",{"_index":1873,"title":{},"body":{"injectables/SessionService.html":{}}}],["seul",{"_index":1311,"title":{},"body":{"modules/HomeModule.html":{}}}],["seule",{"_index":1333,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["shadow",{"_index":1994,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["si",{"_index":291,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["simplechanges",{"_index":994,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["simplifiée",{"_index":614,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["simuler",{"_index":1348,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["sinon",{"_index":1359,"title":{},"body":{"injectables/InMemoryDataService.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["snackbar",{"_index":851,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"components/UserDashboardComponent.html":{}}}],["soccercity",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["son",{"_index":2102,"title":{},"body":{"injectables/UserService.html":{}}}],["sont",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/UserListComponent.html":{},"modules/UserRoutingModule.html":{},"index.html":{}}}],["sortie",{"_index":2035,"title":{},"body":{"components/UserListComponent.html":{}}}],["soumission",{"_index":1408,"title":{},"body":{"components/LoginComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Booking.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"modules/BookingModule.html":{},"modules/BookingRoutingModule.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"modules/EstablishmentModule.html":{},"components/EstablishmentPageComponent.html":{},"modules/EstablishmentRouting.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"modules/SessionModule.html":{},"modules/SessionRoutingModule.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"index.html":{},"interfaces/sessionByEstablishment.html":{}}}],["space",{"_index":1284,"title":{},"body":{"components/HomeComponent.html":{},"components/SessionDetailComponent.html":{}}}],["spacer",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["spinner",{"_index":1449,"title":{},"body":{"components/LoginComponent.html":{},"modules/LoginModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"components/UserDashboardComponent.html":{},"modules/UserModule.html":{}}}],["sport",{"_index":2313,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["sportifs",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spécifi",{"_index":1325,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["spécifique",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SessionDetailComponent.html":{},"injectables/UserFacadeService.html":{}}}],["spécifiée",{"_index":1329,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/.../admin.guard.ts",{"_index":2370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mock",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../session.ts",{"_index":2266,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":281,"title":{},"body":{"injectables/AppInitializerService.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:25",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/application/guards/admin.guard.ts",{"_index":2168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/application/guards/auth.guard.ts",{"_index":2171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/application/login/login",{"_index":1473,"title":{},"body":{"modules/LoginRoutingModule.html":{}}}],["src/app/auth/application/login/login.component.ts",{"_index":1388,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/application/login/login.component.ts:22",{"_index":1411,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/application/login/login.component.ts:23",{"_index":1397,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/application/login/login.component.ts:47",{"_index":1406,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/application/login/login.module.ts",{"_index":1465,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/app/auth/application/register/register",{"_index":1599,"title":{},"body":{"modules/RegisterRoutingModule.html":{}}}],["src/app/auth/application/register/register.component.ts",{"_index":1522,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/auth/application/register/register.component.ts:26",{"_index":1554,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/application/register/register.component.ts:31",{"_index":1534,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/application/register/register.component.ts:42",{"_index":1541,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/application/register/register.component.ts:66",{"_index":1547,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/application/register/register.component.ts:81",{"_index":1535,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/application/register/register.component.ts:90",{"_index":1544,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/auth/application/register/register.module.ts",{"_index":1595,"title":{},"body":{"modules/RegisterModule.html":{}}}],["src/app/auth/application/services/auth.service.ts",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/application/services/auth.service.ts:103",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/application/services/auth.service.ts:115",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/application/services/auth.service.ts:129",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/application/services/auth.service.ts:139",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/application/services/auth.service.ts:20",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/application/services/auth.service.ts:21",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/application/services/auth.service.ts:41",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/application/services/auth.service.ts:51",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/application/services/auth.service.ts:64",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/application/services/auth.service.ts:75",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/application/services/auth.service.ts:89",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/booking/application/facade/booking",{"_index":612,"title":{},"body":{"injectables/BookingFacadeService.html":{},"coverage.html":{}}}],["src/app/booking/application/service/booking.service.ts",{"_index":696,"title":{},"body":{"injectables/BookingService.html":{},"coverage.html":{}}}],["src/app/booking/application/service/booking.service.ts:121",{"_index":708,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:150",{"_index":706,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:167",{"_index":710,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:181",{"_index":712,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:201",{"_index":709,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:214",{"_index":716,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:25",{"_index":741,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:28",{"_index":736,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:29",{"_index":734,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:32",{"_index":705,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:46",{"_index":743,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:55",{"_index":744,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:64",{"_index":746,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:74",{"_index":731,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/application/service/booking.service.ts:92",{"_index":732,"title":{},"body":{"injectables/BookingService.html":{}}}],["src/app/booking/booking",{"_index":693,"title":{},"body":{"modules/BookingRoutingModule.html":{}}}],["src/app/booking/booking.module.ts",{"_index":687,"title":{},"body":{"modules/BookingModule.html":{}}}],["src/app/booking/domain/booking.ts",{"_index":583,"title":{},"body":{"interfaces/Booking.html":{},"coverage.html":{}}}],["src/app/booking/mock/mock",{"_index":2182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/booking/vue/component/booking.component.ts",{"_index":589,"title":{},"body":{"components/BookingComponent.html":{},"coverage.html":{}}}],["src/app/booking/vue/component/booking.component.ts:11",{"_index":598,"title":{},"body":{"components/BookingComponent.html":{}}}],["src/app/booking/vue/component/booking.component.ts:13",{"_index":597,"title":{},"body":{"components/BookingComponent.html":{}}}],["src/app/establishment/application/facade/establishment",{"_index":1051,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"coverage.html":{}}}],["src/app/establishment/application/services/establishment.service.ts",{"_index":1201,"title":{},"body":{"injectables/EstablishmentService.html":{},"coverage.html":{}}}],["src/app/establishment/application/services/establishment.service.ts:100",{"_index":1206,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["src/app/establishment/application/services/establishment.service.ts:123",{"_index":1207,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["src/app/establishment/application/services/establishment.service.ts:129",{"_index":1210,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["src/app/establishment/application/services/establishment.service.ts:14",{"_index":1217,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["src/app/establishment/application/services/establishment.service.ts:18",{"_index":1215,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["src/app/establishment/application/services/establishment.service.ts:19",{"_index":1214,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["src/app/establishment/application/services/establishment.service.ts:21",{"_index":1204,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["src/app/establishment/application/services/establishment.service.ts:24",{"_index":1209,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["src/app/establishment/application/services/establishment.service.ts:36",{"_index":1208,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["src/app/establishment/application/services/establishment.service.ts:46",{"_index":1205,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["src/app/establishment/application/services/establishment.service.ts:59",{"_index":1211,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["src/app/establishment/application/services/establishment.service.ts:75",{"_index":1212,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["src/app/establishment/domain/establishment.ts",{"_index":887,"title":{},"body":{"interfaces/Establishment.html":{},"interfaces/FormattedOpeningHour.html":{},"coverage.html":{}}}],["src/app/establishment/establishment",{"_index":1191,"title":{},"body":{"modules/EstablishmentRouting.html":{}}}],["src/app/establishment/establishment.module.ts",{"_index":1137,"title":{},"body":{"modules/EstablishmentModule.html":{}}}],["src/app/establishment/mock/mock",{"_index":2190,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/establishment/vue/components/establishment",{"_index":817,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"coverage.html":{}}}],["src/app/establishment/vue/containers/establishment",{"_index":1155,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"coverage.html":{}}}],["src/app/home/home",{"_index":1314,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/home/home.component.ts",{"_index":1270,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:32",{"_index":1276,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.module.ts",{"_index":1301,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/in",{"_index":1343,"title":{},"body":{"injectables/InMemoryDataService.html":{},"coverage.html":{}}}],["src/app/session/application/services/session.service.ts",{"_index":1821,"title":{},"body":{"injectables/SessionService.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{}}}],["src/app/session/application/services/session.service.ts:100",{"_index":1848,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:106",{"_index":1846,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:138",{"_index":1845,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:144",{"_index":1851,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:150",{"_index":1842,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:162",{"_index":1859,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:176",{"_index":1852,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:27",{"_index":1865,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:28",{"_index":1861,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:30",{"_index":1867,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:34",{"_index":1864,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:37",{"_index":1862,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:40",{"_index":1838,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:45",{"_index":1870,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:49",{"_index":1872,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:52",{"_index":1874,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:56",{"_index":1849,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:66",{"_index":1839,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:72",{"_index":1876,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:76",{"_index":1878,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:79",{"_index":1854,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/application/services/session.service.ts:91",{"_index":1856,"title":{},"body":{"injectables/SessionService.html":{}}}],["src/app/session/domain/session.ts",{"_index":1476,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/session/mock/mock",{"_index":2206,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/session/session",{"_index":1820,"title":{},"body":{"modules/SessionRoutingModule.html":{}}}],["src/app/session/session.module.ts",{"_index":1809,"title":{},"body":{"modules/SessionModule.html":{}}}],["src/app/session/vue/components/session",{"_index":1243,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{},"coverage.html":{}}}],["src/app/session/vue/components/session/session.component.ts",{"_index":1601,"title":{},"body":{"components/SessionComponent.html":{},"coverage.html":{}}}],["src/app/session/vue/components/session/session.component.ts:12",{"_index":1606,"title":{},"body":{"components/SessionComponent.html":{}}}],["src/app/session/vue/components/session/session.component.ts:14",{"_index":1609,"title":{},"body":{"components/SessionComponent.html":{}}}],["src/app/session/vue/components/session/session.component.ts:16",{"_index":1608,"title":{},"body":{"components/SessionComponent.html":{}}}],["src/app/session/vue/containers/session",{"_index":1641,"title":{},"body":{"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"coverage.html":{}}}],["src/app/session/vue/containers/sessions",{"_index":1922,"title":{},"body":{"components/SessionsListingAllComponent.html":{},"coverage.html":{}}}],["src/app/user/application/facade/user",{"_index":2008,"title":{},"body":{"injectables/UserFacadeService.html":{},"coverage.html":{}}}],["src/app/user/application/services/user.service.ts",{"_index":2086,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/user/application/services/user.service.ts:121",{"_index":2113,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/application/services/user.service.ts:147",{"_index":2103,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/application/services/user.service.ts:159",{"_index":2112,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/application/services/user.service.ts:23",{"_index":2114,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/application/services/user.service.ts:26",{"_index":2117,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/application/services/user.service.ts:28",{"_index":2116,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/application/services/user.service.ts:29",{"_index":2099,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/application/services/user.service.ts:36",{"_index":2109,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/application/services/user.service.ts:51",{"_index":2107,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/application/services/user.service.ts:68",{"_index":2105,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/application/services/user.service.ts:80",{"_index":2100,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/application/services/user.service.ts:95",{"_index":2101,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user/domain/user.ts",{"_index":1932,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/user/mock/mock",{"_index":2215,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/user/user",{"_index":2076,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["src/app/user/user.module.ts",{"_index":2063,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/user/vue/components/user",{"_index":1938,"title":{},"body":{"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/user/vue/containers/users",{"_index":2144,"title":{},"body":{"components/UsersPageComponent.html":{},"coverage.html":{}}}],["stable",{"_index":468,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["stade",{"_index":2433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":1802,"title":{},"body":{"components/SessionFilterComponent.html":{},"index.html":{}}}],["started",{"_index":2268,"title":{"index.html":{}},"body":{}}],["starttime",{"_index":936,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/variables.html":{}}}],["state",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":2163,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1634,"title":{},"body":{"components/SessionComponent.html":{}}}],["sticky",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["strength",{"_index":1503,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":314,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"components/BookingComponent.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"components/LoginComponent.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["stringifyuser",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["studio",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["styleurls",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"interfaces/FilterPayload.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["submit",{"_index":2007,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["subscribe",{"_index":311,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["subscribe(bookings",{"_index":803,"title":{},"body":{"injectables/BookingService.html":{}}}],["subscribe(establishments",{"_index":1221,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["subscribe(sessions",{"_index":1735,"title":{},"body":{"components/SessionDetailComponent.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["subscribe(users",{"_index":2120,"title":{},"body":{"injectables/UserService.html":{}}}],["subscription",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["success",{"_index":643,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["succès",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{}}}],["support",{"_index":2358,"title":{},"body":{"modules.html":{}}}],["suppression",{"_index":649,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["supprim",{"_index":2051,"title":{},"body":{"components/UserListComponent.html":{}}}],["supprime",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentPageComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}}}],["supprimer",{"_index":622,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["supérieur",{"_index":464,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["sur",{"_index":618,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["svg",{"_index":2359,"title":{},"body":{"modules.html":{}}}],["séance",{"_index":2324,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["séances",{"_index":2312,"title":{},"body":{"index.html":{}}}],["sécurit",{"_index":2310,"title":{},"body":{"index.html":{}}}],["sélecteur",{"_index":1280,"title":{},"body":{"components/HomeComponent.html":{}}}],["sélection",{"_index":916,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["sélectionne",{"_index":913,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["sélectionnés",{"_index":1679,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["t",{"_index":715,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["table",{"_index":2057,"title":{},"body":{"components/UserListComponent.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{}}}],["tableau",{"_index":1934,"title":{},"body":{"interfaces/User.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/UsersPageComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2219,"title":{},"body":{"coverage.html":{}}}],["tablissement",{"_index":834,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"index.html":{}}}],["tablissements",{"_index":849,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"index.html":{}}}],["take",{"_index":1692,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["tant",{"_index":751,"title":{},"body":{"injectables/BookingService.html":{},"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["tap",{"_index":749,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["tap(newbooking",{"_index":763,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{}}}],["tap(newsession",{"_index":1892,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["tap(newuser",{"_index":2133,"title":{},"body":{"injectables/UserService.html":{}}}],["tap(u",{"_index":2126,"title":{},"body":{"injectables/UserService.html":{}}}],["tap(updatedbooking",{"_index":773,"title":{},"body":{"injectables/BookingService.html":{}}}],["tap(updateduser",{"_index":1233,"title":{},"body":{"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["tape",{"_index":1334,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["tassin",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["te",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["telles",{"_index":2305,"title":{},"body":{"index.html":{}}}],["tels",{"_index":2322,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["templates",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["templateurl",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"interfaces/FilterPayload.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["temps",{"_index":2350,"title":{},"body":{"index.html":{}}}],["terrain",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tes",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["tests",{"_index":2547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.add.emit",{"_index":1120,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/UserListComponent.html":{}}}],["this.allsessions",{"_index":1703,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.allsessionsbyestablishment",{"_index":1772,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["this.alreadybooked(book.userid",{"_index":1728,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.authservice.currentuser$.subscribe(user",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.generatetoken(loggeduser",{"_index":1440,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.gettoken",{"_index":315,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["this.authservice.getuser",{"_index":1722,"title":{},"body":{"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{}}}],["this.authservice.getuseridfromtoken(token",{"_index":321,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["this.authservice.login(username).subscribe((user",{"_index":1422,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.setcurrentuser(loggeduser",{"_index":1439,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.setcurrentuser(null",{"_index":326,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["this.authservice.setcurrentuser(u",{"_index":327,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["this.authservice.setcurrentuser(updateduser",{"_index":1984,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.authservice.verifytoken(token",{"_index":318,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["this.booking$.subscribe(booking",{"_index":1713,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.bookingfacadeservice.getbookings",{"_index":624,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["this.bookingservice.booking",{"_index":1674,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.bookingservice.bookings",{"_index":662,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["this.bookingservice.booksession(booking",{"_index":681,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["this.bookingservice.deletebooking(id",{"_index":678,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["this.bookingservice.findbookings",{"_index":671,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["this.bookingservice.generateid",{"_index":682,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["this.bookingservice.getbookings",{"_index":672,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["this.bookingservice.getbookingsbyuserid(id",{"_index":673,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["this.bookingservice.insertbooking(book).subscribe",{"_index":1732,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.bookingservice.insertbooking(booking",{"_index":675,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["this.bookingservice.updatebooking(booking",{"_index":677,"title":{},"body":{"injectables/BookingFacadeService.html":{}}}],["this.bookingssubject.asobservable",{"_index":733,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.bookingssubject.getvalue",{"_index":754,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.bookingssubject.next([...currentvalue",{"_index":765,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.bookingssubject.next(booking",{"_index":758,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.bookingssubject.next(bookings",{"_index":804,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.bookingssubject.next(updatedbookings",{"_index":779,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.bookingurl}/${bookingid",{"_index":771,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.bookingurl}/${id",{"_index":786,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.bookingurl}/?userid=${userid",{"_index":805,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.checkpassword",{"_index":1561,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.currentusersubject.asobservable",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(null",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentusersubject.next(user",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.decreaseavailability(book.sessionid",{"_index":1739,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.delete.emit(establishment",{"_index":1122,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["this.delete.emit(user",{"_index":2053,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.dialog.open(establishmentaddcomponent",{"_index":1124,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["this.dialog.open(establishmenteditcomponent",{"_index":1180,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["this.dialogref.close",{"_index":886,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["this.dialogref.close(newestablishment",{"_index":945,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["this.dialogref.close(this.establishment",{"_index":882,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{}}}],["this.editing",{"_index":1974,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.establishment",{"_index":863,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{}}}],["this.establishmentfacade.generateid",{"_index":928,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["this.establishmentfacade.insertestablishment(newestablishment).subscribe",{"_index":944,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["this.establishmentform",{"_index":865,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{}}}],["this.establishmentform.value.address",{"_index":930,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["this.establishmentform.value.close",{"_index":932,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["this.establishmentform.value.name",{"_index":929,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["this.establishmentform.value.opening",{"_index":931,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["this.establishmentform.value.phonenumber",{"_index":933,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["this.establishments.find",{"_index":1908,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.establishmentservice.addestablishment(establishment",{"_index":1076,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{}}}],["this.establishmentservice.addestablishment(establishment).subscribe",{"_index":1179,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["this.establishmentservice.deleteestablishment(id",{"_index":1078,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{}}}],["this.establishmentservice.establishment",{"_index":1072,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{}}}],["this.establishmentservice.generateid",{"_index":1079,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{}}}],["this.establishmentservice.getestablishment(id",{"_index":1075,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{}}}],["this.establishmentservice.getestablishments",{"_index":1074,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{}}}],["this.establishmentservice.insertestablishment(establishment",{"_index":1080,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{}}}],["this.establishmentservice.updateestablishment",{"_index":1183,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["this.establishmentservice.updateestablishment(establishment",{"_index":1077,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{}}}],["this.establishmentsubject.asobservable",{"_index":1213,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["this.establishmentsubject.getvalue",{"_index":1229,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["this.establishmentsubject.next([...currentvalue",{"_index":1230,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["this.establishmentsubject.next(establishments",{"_index":1222,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["this.establishmentsubject.next(update",{"_index":1239,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["this.establishmentsubject.next(updatedusers",{"_index":1237,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["this.establishmentsurl",{"_index":1227,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["this.establishmentsurl}/${establishment.id",{"_index":1232,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["this.establishmentsurl}/${id",{"_index":1223,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["this.fb.group",{"_index":866,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/UserDashboardComponent.html":{}}}],["this.filterchange.emit(filterdata",{"_index":1269,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["this.formbuilder.group",{"_index":1417,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getestablishmens",{"_index":1177,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["this.getkeybyvalue(trainingsession",{"_index":1914,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.getsessionbyestablishment().find",{"_index":1912,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.gettoken",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getuseridfromtoken(token",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getusers",{"_index":2154,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["this.handleerror(`getbookingsbyuserid",{"_index":807,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.handleerror(`updatebooking",{"_index":782,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.handleerror(`updateestablishment",{"_index":1238,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["this.handleerror(`updateuser",{"_index":2142,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http",{"_index":759,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.http.get(`${apiloginurl}/?username=${username}`).pipe",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(url).pipe",{"_index":2123,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(this.usersurl",{"_index":2131,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpoptions",{"_index":761,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.httpoptions).pipe",{"_index":2132,"title":{},"body":{"injectables/UserService.html":{}}}],["this.insertbooking(booking).subscribe",{"_index":795,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.isadmin",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isauthenticated",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isfiltersubject.next(isfilter",{"_index":1890,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.isfiltersubject.value",{"_index":1888,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.isloading",{"_index":1420,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{}}}],["this.issessionopenondate(session",{"_index":1781,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["this.loginform",{"_index":1416,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":1419,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.memory.bookingid(bookings",{"_index":809,"title":{},"body":{"injectables/BookingService.html":{}}}],["this.memory.establishmentid(establishments",{"_index":1241,"title":{},"body":{"injectables/EstablishmentService.html":{}}}],["this.memory.genid(users",{"_index":2143,"title":{},"body":{"injectables/UserService.html":{}}}],["this.memory.sessionid(sessions",{"_index":1887,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.passwordmatch",{"_index":1569,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform",{"_index":1555,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['confirmpassword'].valuechanges.subscribe",{"_index":1562,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls['password'].valuechanges.subscribe",{"_index":1560,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('confirmpassword')?.seterrors(null",{"_index":1568,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('confirmpassword')?.value",{"_index":1564,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('password')?.value",{"_index":1563,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.valid",{"_index":1572,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.removetokenifusernotfound",{"_index":312,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["this.route.params.subscribe(param",{"_index":1694,"title":{},"body":{"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{}}}],["this.router.events",{"_index":307,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["this.router.navigatebyurl",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":319,"title":{},"body":{"injectables/AppInitializerService.html":{},"components/RegisterComponent.html":{}}}],["this.searchtitle",{"_index":1264,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["this.selecteddate",{"_index":1265,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["this.selecteddays",{"_index":1704,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.selectedfile",{"_index":923,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["this.selectedfile.name",{"_index":926,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["this.selectedtype",{"_index":1263,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionFilterComponent.html":{}}}],["this.session",{"_index":1698,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.session.openinghours",{"_index":1700,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.session.openinghours[0",{"_index":1705,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.sessionid",{"_index":1696,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.sessions",{"_index":1903,"title":{},"body":{"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.sessions.filter(session",{"_index":1931,"title":{},"body":{"components/SessionsListingAllComponent.html":{}}}],["this.sessions.find(session",{"_index":1902,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.sessionsasvalue",{"_index":1900,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.sessionsasvalue.findindex",{"_index":1897,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.sessionsasvalue[index",{"_index":1899,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.sessionsbyestablishment",{"_index":1770,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["this.sessionsbyestablishment.sessions",{"_index":1774,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["this.sessionsbyestablishment.sessions.filter(session",{"_index":1775,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["this.sessionservice.getonesessionbyestablishment(parseint(id",{"_index":1771,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["this.sessionservice.getsessionbyestablishment",{"_index":1773,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{}}}],["this.sessionservice.getsessionbyid(this.sessionid",{"_index":1699,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.sessionservice.getsessions",{"_index":1783,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["this.sessionservice.isfilter",{"_index":1267,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["this.sessionservice.sessionsasobservable",{"_index":1733,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.sessionservice.sessionsasobservable.subscribe",{"_index":1702,"title":{},"body":{"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{}}}],["this.sessionservice.sessionsasobservable.subscribe(sessions",{"_index":1930,"title":{},"body":{"components/SessionsListingAllComponent.html":{}}}],["this.sessionservice.updatesession(sessionbooking",{"_index":1740,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.sessionservice.validopenings",{"_index":1701,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.sessionservice.validopenings(this.session.openinghours).length",{"_index":1745,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.sessionssubject.asobservable",{"_index":1880,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.sessionssubject.getvalue",{"_index":1893,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.sessionssubject.next([...currentvalue",{"_index":1894,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.sessionssubject.next(session",{"_index":1883,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.sessionssubject.next(sessions",{"_index":1886,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.sessionssubject.value",{"_index":1881,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["this.snackbar.open",{"_index":1985,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.subscription",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastr.error",{"_index":1723,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.toastr.error('erreur",{"_index":1744,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.toastr.error('vous",{"_index":1731,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.toastr.success('réservation",{"_index":1741,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.toastr.success('vous",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["this.update.emit(establishment",{"_index":1121,"title":{},"body":{"components/EstablishmentListComponent.html":{}}}],["this.update.emit(user",{"_index":2052,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.user",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/UserDashboardComponent.html":{}}}],["this.user?.email",{"_index":1972,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.user?.firstname",{"_index":1970,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.user?.lastname",{"_index":1971,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.user?.username",{"_index":1973,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.userbookings",{"_index":1717,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.userbookings.find",{"_index":1719,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["this.userfacade.adduser(user",{"_index":2156,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["this.userfacade.deleteuser(id",{"_index":2159,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["this.userfacade.getusers",{"_index":2155,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["this.userfacade.updateuser(user",{"_index":2157,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["this.userfacade.users",{"_index":2153,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["this.userform",{"_index":1969,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.userform.controls['email'].haserror('email",{"_index":1990,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.userform.controls['email'].haserror('required",{"_index":1989,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.userform.disable",{"_index":1976,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.userform.enable",{"_index":1975,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.userform.valid",{"_index":1981,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.userservice.adduser(user",{"_index":2027,"title":{},"body":{"injectables/UserFacadeService.html":{}}}],["this.userservice.adduser(user).subscribe",{"_index":1578,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.deleteuser(id",{"_index":2029,"title":{},"body":{"injectables/UserFacadeService.html":{}}}],["this.userservice.generateid",{"_index":1573,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserFacadeService.html":{}}}],["this.userservice.getuser(loggeduserid).subscribe(user",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.getuser(userid",{"_index":322,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/UserFacadeService.html":{}}}],["this.userservice.getusers",{"_index":2026,"title":{},"body":{"injectables/UserFacadeService.html":{}}}],["this.userservice.updateuser(updateduser",{"_index":1983,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["this.userservice.updateuser(user",{"_index":2028,"title":{},"body":{"injectables/UserFacadeService.html":{}}}],["this.userservice.users",{"_index":2024,"title":{},"body":{"injectables/UserFacadeService.html":{}}}],["this.userssubject.asobservable",{"_index":2115,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userssubject.getvalue",{"_index":2134,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userssubject.next([...currentvalue",{"_index":2135,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userssubject.next(updatedusers",{"_index":2139,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userssubject.next(users",{"_index":2121,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersurl}/${id",{"_index":2130,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersurl}/${user.id",{"_index":2141,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersurl}/?id=${id",{"_index":2122,"title":{},"body":{"injectables/UserService.html":{}}}],["thursday",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thème",{"_index":2318,"title":{},"body":{"index.html":{}}}],["time",{"_index":973,"title":{},"body":{"components/EstablishmentAddComponent.html":{}}}],["timebook",{"_index":586,"title":{},"body":{"interfaces/Booking.html":{},"components/SessionDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["timeslot",{"_index":1709,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["timeslot.availableplace",{"_index":1712,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["title",{"_index":1246,"title":{},"body":{"interfaces/FilterPayload.html":{},"components/LoginComponent.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"miscellaneous/variables.html":{}}}],["titre",{"_index":600,"title":{},"body":{"components/BookingComponent.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{}}}],["toastr",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/SessionDetailComponent.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/SessionDetailComponent.html":{}}}],["toggleedit",{"_index":1948,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["token",{"_index":290,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["tokenexpiration",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbar",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["top",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/UserDashboardComponent.html":{}}}],["tous",{"_index":1466,"title":{},"body":{"modules/LoginModule.html":{},"components/SessionFilterComponent.html":{},"injectables/UserFacadeService.html":{},"miscellaneous/variables.html":{}}}],["tout",{"_index":475,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["toutes",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/SessionDetailComponent.html":{}}}],["trace",{"_index":2090,"title":{},"body":{"injectables/UserService.html":{}}}],["trainingsession",{"_index":1250,"title":{},"body":{"interfaces/FilterPayload.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"miscellaneous/enumerations.html":{},"interfaces/sessionByEstablishment.html":{}}}],["trainingsession.cardio",{"_index":2516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trainingsession.functional",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trainingsession.group",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trainingsession.outdoor",{"_index":2542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trainingsession.strength",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trainingsession.yoga",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trainingsessionimages",{"_index":1514,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"injectables/SessionService.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["transform",{"_index":1029,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["transparent",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["tre",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"components/SessionDetailComponent.html":{},"index.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["trouv",{"_index":294,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/UserService.html":{}}}],["true",{"_index":868,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentEditComponent.html":{},"interfaces/FilterPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionFilterComponent.html":{},"components/UserDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1184,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["tslib",{"_index":2257,"title":{},"body":{"dependencies.html":{}}}],["tuesday",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"interfaces/Booking.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"interfaces/Establishment.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"interfaces/FormattedOpeningHour.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"modules/LoginRoutingModule.html":{},"interfaces/OpeningHour.html":{},"components/RegisterComponent.html":{},"modules/RegisterRoutingModule.html":{},"interfaces/Session.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1916,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["types",{"_index":1496,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{}}}],["types/node",{"_index":2235,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1431,"title":{},"body":{"components/LoginComponent.html":{},"dependencies.html":{}}}],["u",{"_index":324,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["u.id",{"_index":776,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["un",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentPageComponent.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"components/SessionDetailComponent.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"interfaces/sessionByEstablishment.html":{}}}],["underline",{"_index":1457,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["une",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"components/EstablishmentListComponent.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Session.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["unique",{"_index":653,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/InMemoryDataService.html":{},"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["unknown",{"_index":638,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["unsafe",{"_index":1433,"title":{},"body":{"components/LoginComponent.html":{}}}],["update",{"_index":1094,"title":{},"body":{"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["updatebooking",{"_index":632,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["updatebooking(booking",{"_index":659,"title":{},"body":{"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{}}}],["updatedbooking",{"_index":778,"title":{},"body":{"injectables/BookingService.html":{}}}],["updatedbooking.id",{"_index":777,"title":{},"body":{"injectables/BookingService.html":{}}}],["updatedbookings",{"_index":774,"title":{},"body":{"injectables/BookingService.html":{}}}],["updatedsession",{"_index":1857,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["updatedsession.id",{"_index":1898,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["updateduser",{"_index":1236,"title":{},"body":{"injectables/EstablishmentService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserService.html":{}}}],["updateduser.id",{"_index":1235,"title":{},"body":{"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["updatedusers",{"_index":1234,"title":{},"body":{"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["updateestablishment",{"_index":1057,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{}}}],["updateestablishment(establishment",{"_index":1070,"title":{},"body":{"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{}}}],["updatesession",{"_index":1832,"title":{},"body":{"injectables/SessionService.html":{}}}],["updatesession(updatedsession",{"_index":1855,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["updatesessions",{"_index":1836,"title":{},"body":{"injectables/SessionService.html":{}}}],["updatesessions(session",{"_index":1882,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["updateuser",{"_index":1949,"title":{},"body":{"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["updateuser(user",{"_index":2023,"title":{},"body":{"injectables/UserFacadeService.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["uppercase",{"_index":1030,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["url",{"_index":770,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/UserService.html":{}}}],["url('https://images.unsplash.com/photo",{"_index":1289,"title":{},"body":{"components/HomeComponent.html":{}}}],["url(../../assets/pictures/fit.png",{"_index":1295,"title":{},"body":{"components/HomeComponent.html":{}}}],["use",{"_index":2356,"title":{},"body":{"index.html":{}}}],["user",{"_index":46,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":2056,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.firstname",{"_index":2054,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.id",{"_index":1727,"title":{},"body":{"components/SessionDetailComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["user.lastname",{"_index":2055,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.subscribe(u",{"_index":323,"title":{},"body":{"injectables/AppInitializerService.html":{}}}],["user?.firstname",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["userbookings",{"_index":1650,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["userdashboardcomponent",{"_index":270,"title":{"components/UserDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userfacade",{"_index":2147,"title":{},"body":{"components/UsersPageComponent.html":{}}}],["userfacadeservice",{"_index":287,"title":{"injectables/UserFacadeService.html":{}},"body":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"modules/UserModule.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userform",{"_index":1946,"title":{},"body":{"components/UserDashboardComponent.html":{}}}],["userid",{"_index":320,"title":{},"body":{"injectables/AppInitializerService.html":{},"interfaces/Booking.html":{},"injectables/BookingService.html":{},"components/SessionDetailComponent.html":{},"injectables/UserFacadeService.html":{},"miscellaneous/variables.html":{}}}],["userinfo",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["userlistcomponent",{"_index":272,"title":{"components/UserListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usermodule",{"_index":346,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserDashboardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usernames",{"_index":2282,"title":{},"body":{"index.html":{}}}],["userpassword",{"_index":1425,"title":{},"body":{"components/LoginComponent.html":{}}}],["userroutingmodule",{"_index":2062,"title":{"modules/UserRoutingModule.html":{}},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"injectables/InMemoryDataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.length",{"_index":1379,"title":{},"body":{"injectables/InMemoryDataService.html":{}}}],["users.ts",{"_index":2216,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["users[0",{"_index":2125,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":286,"title":{"injectables/UserService.html":{}},"body":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userspagecomponent",{"_index":273,"title":{"components/UsersPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/UsersPageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userssubject",{"_index":2096,"title":{},"body":{"injectables/UserService.html":{}}}],["usersurl",{"_index":2097,"title":{},"body":{"injectables/UserService.html":{}}}],["usertologged",{"_index":1423,"title":{},"body":{"components/LoginComponent.html":{}}}],["utilis",{"_index":835,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/InMemoryDataService.html":{},"interfaces/User.html":{},"injectables/UserFacadeService.html":{},"components/UsersPageComponent.html":{}}}],["utilisant",{"_index":1281,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["utilisateur",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"modules/HomeModule.html":{},"injectables/InMemoryDataService.html":{},"modules/LoginModule.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["utilisateurs",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["utilisation",{"_index":1342,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["utilise",{"_index":1525,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{}}}],["utiliser",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisée",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["valeur",{"_index":725,"title":{},"body":{"injectables/BookingService.html":{},"components/RegisterComponent.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["valeurs",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["validators",{"_index":823,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{}}}],["validators.email",{"_index":1559,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{}}}],["validators.required",{"_index":869,"title":{},"body":{"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{}}}],["valide",{"_index":304,"title":{},"body":{"injectables/AppInitializerService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["validit",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["validopenings",{"_index":1833,"title":{},"body":{"injectables/SessionService.html":{}}}],["validopenings(openingshour",{"_index":1858,"title":{},"body":{"injectables/SessionService.html":{},"interfaces/sessionByEstablishment.html":{}}}],["value",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookingComponent.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/sessionByEstablishment.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{},"components/UsersPageComponent.html":{}}}],["variable",{"_index":2169,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2369,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ven",{"_index":1003,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["vendredi",{"_index":941,"title":{},"body":{"components/EstablishmentAddComponent.html":{},"miscellaneous/variables.html":{}}}],["verifytoken",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytoken(token",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["vers",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"modules/HomeRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2367,"title":{},"body":{"properties.html":{}}}],["vertes",{"_index":2341,"title":{},"body":{"index.html":{}}}],["vertigo",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":2017,"title":{},"body":{"injectables/UserFacadeService.html":{},"injectables/UserService.html":{}}}],["vide",{"_index":1357,"title":{},"body":{"injectables/InMemoryDataService.html":{},"components/UserDashboardComponent.html":{}}}],["vie",{"_index":1176,"title":{},"body":{"components/EstablishmentPageComponent.html":{}}}],["villeurbanne",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visualiser",{"_index":2330,"title":{},"body":{"index.html":{}}}],["viter",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"injectables/BookingFacadeService.html":{},"injectables/BookingService.html":{},"interfaces/DialogData.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"injectables/EstablishmentFacadeService.html":{},"components/EstablishmentListComponent.html":{},"components/EstablishmentPageComponent.html":{},"injectables/EstablishmentService.html":{},"interfaces/FilterPayload.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"injectables/SessionService.html":{},"components/SessionsListingAllComponent.html":{},"components/UserDashboardComponent.html":{},"injectables/UserFacadeService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/UsersPageComponent.html":{},"interfaces/sessionByEstablishment.html":{}}}],["voir",{"_index":1015,"title":{},"body":{"components/EstablishmentComponent.html":{}}}],["vous",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{}}}],["vouvou",{"_index":2276,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vrai",{"_index":1663,"title":{},"body":{"components/SessionDetailComponent.html":{}}}],["vue/components/establishment",{"_index":1154,"title":{},"body":{"modules/EstablishmentModule.html":{}}}],["vue/components/user",{"_index":2070,"title":{},"body":{"modules/UserModule.html":{}}}],["vue/containers/establishment",{"_index":1193,"title":{},"body":{"modules/EstablishmentRouting.html":{}}}],["vue/containers/sessions",{"_index":1818,"title":{},"body":{"modules/SessionModule.html":{}}}],["vénement",{"_index":2047,"title":{},"body":{"components/UserListComponent.html":{}}}],["vérifie",{"_index":303,"title":{},"body":{"injectables/AppInitializerService.html":{},"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{}}}],["vérifier",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["web",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"components/EstablishmentAddComponent.html":{},"injectables/InMemoryDataService.html":{},"dependencies.html":{},"index.html":{}}}],["webkit",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["webpack",{"_index":2260,"title":{},"body":{"dependencies.html":{}}}],["wednesday",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weekday",{"_index":1786,"title":{},"body":{"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["weight",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{},"components/SessionComponent.html":{}}}],["welcome",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["white",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/UserDashboardComponent.html":{}}}],["whitesmoke",{"_index":1588,"title":{},"body":{"components/RegisterComponent.html":{}}}],["width",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentAddComponent.html":{},"components/EstablishmentComponent.html":{},"components/EstablishmentEditComponent.html":{},"components/EstablishmentListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SessionComponent.html":{},"components/SessionDetailComponent.html":{},"components/UserDashboardComponent.html":{},"components/UserListComponent.html":{}}}],["wrap",{"_index":1628,"title":{},"body":{"components/SessionComponent.html":{},"components/SessionEstablishmentListingPageComponent.html":{},"components/SessionFilterComponent.html":{},"components/SessionsListingAllComponent.html":{}}}],["y",{"_index":1158,"title":{},"body":{"components/EstablishmentPageComponent.html":{},"index.html":{}}}],["yarn",{"_index":2289,"title":{},"body":{"index.html":{}}}],["year",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["yes",{"_index":724,"title":{},"body":{"injectables/BookingService.html":{},"injectables/EstablishmentService.html":{},"injectables/SessionService.html":{},"injectables/UserService.html":{}}}],["yoga",{"_index":1505,"title":{},"body":{"interfaces/OpeningHour.html":{},"interfaces/Session.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["z",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/EstablishmentComponent.html":{}}}],["zen",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":2262,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"modules/BookingModule.html":{},"modules/EstablishmentModule.html":{},"modules/HomeModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules/SessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Le composant AppComponent est le composant racine de l'application.\nIl contient des méthodes pour la gestion de l'authentification et de la navigation utilisateur.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAdmin\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                user\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, appInitializerService: AppInitializerService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appInitializerService\n                                                  \n                                                        \n                                                                        AppInitializerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:67\n                \n            \n\n\n            \n                \n                    Avant la destruction du composant, désabonne du flux de l'utilisateur courant pour éviter les fuites de mémoire.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:52\n                \n            \n\n\n            \n                \n                    Au moment de l'initialisation, s'abonne au flux de l'utilisateur courant fourni par le service d'authentification.\nMet à jour les informations de l'utilisateur et les droits d'accès en fonction des données reçues.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogout\n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:42\n                \n            \n\n\n            \n                \n                    Méthode pour gérer la déconnexion de l'utilisateur.\nElle supprime les informations de l'utilisateur du service d'authentification et redirige vers la page d'accueil.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { AppInitializerService } from '@/app/app-initializer.service';\nimport { AuthService } from '@/app/auth/application/services/auth.service';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from '@/app/user/domain/user';\nimport includes from 'lodash/includes';\n\n/**\n * Le composant `AppComponent` est le composant racine de l'application.\n * Il contient des méthodes pour la gestion de l'authentification et de la navigation utilisateur.\n *\n * @selector `app-root`\n * @templateUrl `./app.component.html`\n * @styleUrls [`./app.component.scss`]\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  isAuthenticated!: boolean;\n  private subscription!: Subscription;\n  year = new Date().getFullYear();\n  user!: User | null;\n  isAdmin!: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private appInitializerService: AppInitializerService,\n    private toastr: ToastrService\n  ) {}\n\n  /**\n   * Méthode pour gérer la déconnexion de l'utilisateur.\n   * Elle supprime les informations de l'utilisateur du service d'authentification et redirige vers la page d'accueil.\n   */\n  onLogout() {\n    this.authService.logout();\n    void this.router.navigateByUrl('/');\n    this.toastr.success('Vous vous êtes déconnecté avec succès !');\n  }\n\n  /**\n   * Au moment de l'initialisation, s'abonne au flux de l'utilisateur courant fourni par le service d'authentification.\n   * Met à jour les informations de l'utilisateur et les droits d'accès en fonction des données reçues.\n   */\n  ngOnInit(): void {\n    this.subscription = this.authService.currentUser$.subscribe(user => {\n      if (this.user !== user) {\n        this.user = user;\n      }\n\n      this.isAuthenticated = !!user;\n      this.user = user;\n      this.isAdmin = user ? includes(user.roles, 'admin') : false;\n    });\n  }\n\n  /**\n   * Avant la destruction du composant, désabonne du flux de l'utilisateur courant pour éviter les fuites de mémoire.\n   */\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      FIT\n      \n        BOOKING\n      \n    \n    \n      Content de te revoir, {{ user?.firstName }} !\n    \n  \n  \n  \n    Etablissements\n  \n  Sessions\n  \n    Liste des utilisateurs\n  \n  \n    account_circle\n  \n\n\n\n  \n    Mes informations\n  \n  \n    Connexion\n  \n  \n    Déconnexion\n  \n\n\n\n\n  \n\n\n\n\n  \n    &#169; FitBooking {{ year }}\n  \n--->\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  display: block;\n  height: 100%;\n}\n\n.spacer {\n  flex: 1 1 auto;\n}\n\n.logo {\n  display: flex;\n  gap: 5px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: bolder;\n  color: #fff;\n  cursor: pointer;\n  font-size: 2em;\n\n  .second {\n    background: linear-gradient(90deg, #fff, #ffc107);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    padding: 4px;\n    border-radius: 1px;\n  }\n}\n\nmat-toolbar {\n  background: linear-gradient(90deg, #7b61ff, #1eb1fc);\n  color: white;\n}\n\n.highlight {\n  background: linear-gradient(90deg, #7b61ff, #1eb1fc);\n  color: white;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n\n  .auth {\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: white;\n  }\n}\n\n.footer {\n  position: sticky;\n  bottom: 0;\n  width: 100%;\n  z-index: 1000;\n  mat-toolbar {\n    background: linear-gradient(90deg, #7b61ff, #1eb1fc);\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex: 1 1 auto;\n  }\n}\n\n.copyright {\n  padding-right: 10px;\n}\n\n.info {\n  display: flex;\n  gap: 20px;\n\n  .welcome {\n    font-family: 'Poppins', sans-serif;\n    color: #fff;\n    margin-top: 10px;\n  }\n}\n\n.content {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            FIT              BOOKING                    Content de te revoir, {{ user?.firstName }} !              Etablissements    Sessions      Liste des utilisateurs        account_circle        Mes informations        Connexion        Déconnexion          © FitBooking {{ year }}  --->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppInitializerService.html":{"url":"injectables/AppInitializerService.html","title":"injectable - AppInitializerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppInitializerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-initializer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Le AppInitializerService fournit des méthodes pour initialiser l'application.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                removeTokenIfUserNotFound\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, userService: UserFacadeService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-initializer.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        removeTokenIfUserNotFound\n                        \n                    \n                \n            \n            \n                \nremoveTokenIfUserNotFound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-initializer.service.ts:35\n                \n            \n\n\n            \n                \n                    Supprime le token de l'utilisateur si l'utilisateur n'est pas trouvé.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { NavigationStart, Router } from '@angular/router';\n\nimport { AuthService } from '@/app/auth/application/services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { UserFacadeService } from '@/app/user/application/facade/user-facade.service';\nimport { filter } from 'rxjs/operators';\n\n/**\n * Le `AppInitializerService` fournit des méthodes pour initialiser l'application.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppInitializerService {\n  constructor(\n    private authService: AuthService,\n    private userService: UserFacadeService,\n    private router: Router\n  ) {\n    /**\n     * À chaque démarrage de la navigation, le service vérifie si le token de l'utilisateur est valide.\n     * Si le token n'est pas valide ou si l'utilisateur n'existe pas, le service supprime le token\n     * et redirige l'utilisateur vers la page de connexion.\n     */\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationStart))\n      .subscribe(() => {\n        this.removeTokenIfUserNotFound();\n      });\n  }\n\n  /**\n   * Supprime le token de l'utilisateur si l'utilisateur n'est pas trouvé.\n   */\n  removeTokenIfUserNotFound() {\n    const token: string = this.authService.getToken();\n    if (!token) {\n      return;\n    }\n\n    const isValidateToken = this.authService.verifyToken(token);\n    if (!isValidateToken) {\n      void this.router.navigateByUrl('/login');\n      return;\n    }\n\n    const userId = this.authService.getUserIdFromToken(token);\n    const user = this.userService.getUser(userId);\n\n    user.subscribe(u => {\n      if (!u) {\n        localStorage.removeItem('app_token');\n        this.authService.setCurrentUser(null);\n        void this.router.navigateByUrl('/login');\n      }\n      this.authService.setCurrentUser(u);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBookingModule\n\nBookingModule\n\nAppModule -->\n\nBookingModule->AppModule\n\n\n\n\n\nEstablishmentModule\n\nEstablishmentModule\n\nAppModule -->\n\nEstablishmentModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nRegisterModule\n\nRegisterModule\n\nAppModule -->\n\nRegisterModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            AppModule est le module racine de l'application.\nIl déclare le composant AppComponent et importe divers autres modules nécessaires pour le fonctionnement de l'application.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            BookingModule\n                        \n                        \n                            EstablishmentModule\n                        \n                        \n                            HomeModule\n                        \n                        \n                            LoginModule\n                        \n                        \n                            RegisterModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AppComponent } from '@/app/app.component';\nimport { AppRoutingModule } from '@/app/app-routing.module';\nimport { BookingModule } from './booking/booking.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { EstablishmentModule } from '@/app/establishment/establishment.module';\nimport { FormsModule } from '@angular/forms';\nimport { HomeModule } from '@/app/home/home.module';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InMemoryDataService } from '@/app/in-memory-data.service';\nimport { LoginModule } from '@/app/auth/application/login/login.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { NgModule } from '@angular/core';\nimport { RegisterModule } from './auth/application/register/register.module';\nimport { ToastrModule } from 'ngx-toastr';\nimport { UserModule } from '@/app/user/user.module';\n\n/**\n * `AppModule` est le module racine de l'application.\n * Il déclare le composant `AppComponent` et importe divers autres modules nécessaires pour le fonctionnement de l'application.\n *\n * @NgModule déclare que cette classe est un module et fournit la métadonnée qui détermine comment compiler et lancer l'application.\n */\n@NgModule({\n  /**\n   * `declarations` est la liste des composants, directives, etc. qui appartiennent à ce module.\n   */\n  declarations: [AppComponent],\n  /**\n   * `imports` est la liste des modules dont les composants exportés sont nécessaires pour les templates des composants de ce module.\n   */\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, {\n      dataEncapsulation: false,\n    }),\n    ToastrModule.forRoot(),\n    UserModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    HomeModule,\n    LoginModule,\n    RegisterModule,\n    BookingModule,\n    EstablishmentModule,\n  ],\n  /**\n   * `providers` est la liste des services, valeurs ou autres dépendances que les composants de l'application ont besoin.\n   */\n  providers: [],\n  /**\n   * `bootstrap` est la liste des composants qui devraient être amorcés (bootstrap) lorsque ce module est amorcé.\n   */\n  bootstrap: [AppComponent],\n})\n/**\n * La classe exportée, `AppModule`, est la classe du module racine.\n * Elle peut être utilisée ailleurs dans l'application pour des importations.\n */\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\n\nimport { NgModule } from '@angular/core';\n\n/**\n * `routes` est une configuration des chemins d'accès dans notre application.\n * Chaque chemin est associé à un module spécifique qui est chargé à la demande (lazy-loaded) lorsque l'utilisateur navigue vers ce chemin.\n */\nconst routes: Routes = [\n  {\n    // Ce chemin correspond à la racine de l'application.\n    // Le module associé est le HomeModule.\n    path: '',\n    loadChildren: () =>\n      \"import('@/app/home/home.module').then(module => module.HomeModule)\",\n    pathMatch: 'full',\n  },\n  {\n    // Ce chemin correspond également à la racine de l'application.\n    // Le module associé est le UserModule.\n    path: '',\n    loadChildren: () =>\n      \"import('@/app/user/user.module').then(module => module.UserModule)\",\n  },\n  {\n    // Ce chemin correspond également à la racine de l'application.\n    // Le module associé est le LoginModule.\n    path: '',\n    loadChildren: () =>\n      \"import('@/app/auth/application/login/login.module').then(\\\n        module => module.LoginModule\\\n      )\",\n  },\n  {\n    // Ce chemin correspond également à la racine de l'application.\n    // Le module associé est le RegisterModule.\n    path: '',\n    loadChildren: () =>\n      \"import('@/app/auth/application/register/register.module').then(\\\n        module => module.RegisterModule\\\n      )\",\n  },\n];\n\n/**\n * `AppRoutingModule` configure le routeur d'application à un niveau supérieur\n * avec les routes et les autres paramètres du routeur.\n * Le routeur est en attente de navigation une fois que l'application est stable.\n */\n@NgModule({\n  /**\n   * `RouterModule.forRoot(routes)` fournit la configuration de routage pour le module.\n   * `forRoot` configure également le fournisseur de service du routeur.\n   */\n  imports: [RouterModule.forRoot(routes)],\n  /**\n   * `exports` rend `RouterModule` disponible dans tout le reste de l'application.\n   */\n  exports: [RouterModule],\n})\n/**\n * La classe `AppRoutingModule` fournit un module de routage qui donne aux composants d'application accès à la fonctionnalité de routage.\n */\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/application/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser$\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateToken\n                            \n                            \n                                getToken\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserIdFromToken\n                            \n                            \n                                getUserRoles\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                setCurrentUser\n                            \n                            \n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, userService: UserFacadeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/application/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateToken\n                        \n                    \n                \n            \n            \n                \ngenerateToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/services/auth.service.ts:75\n                \n            \n\n\n            \n                \n                    Génère un token pour un utilisateur\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nL'utilisateur pour lequel générer le token\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Le token généré\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/services/auth.service.ts:115\n                \n            \n\n\n            \n                \n                    Récupère le token actuel\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Le token actuel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/services/auth.service.ts:129\n                \n            \n\n\n            \n                \n                    Récupère l'utilisateur actuel\n\n\n                    \n                    \n                    \n                        Returns :         User | undefined\n\n                    \n                    \n                        L'utilisateur actuel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserIdFromToken\n                        \n                    \n                \n            \n            \n                \ngetUserIdFromToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/services/auth.service.ts:103\n                \n            \n\n\n            \n                \n                    Récupère l'ID de l'utilisateur à partir du token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nLe token à utiliser pour récupérer l'ID\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        L'ID de l'utilisateur\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRoles\n                        \n                    \n                \n            \n            \n                \ngetUserRoles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/services/auth.service.ts:139\n                \n            \n\n\n            \n                \n                    Récupère les rôles de l'utilisateur actuellement authentifié.\n\n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        Les rôles de l'utilisateur\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/services/auth.service.ts:51\n                \n            \n\n\n            \n                \n                    Authentifie un utilisateur\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nLe nom d'utilisateur à utiliser pour la connexion\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        L'utilisateur connecté\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/services/auth.service.ts:64\n                \n            \n\n\n            \n                \n                    Déconnecte l'utilisateur actuellement connecté\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentUser\n                        \n                    \n                \n            \n            \n                \nsetCurrentUser(user: User | null | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/services/auth.service.ts:41\n                \n            \n\n\n            \n                \n                    Défini l'utilisateur courant\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nL'utilisateur à définir comme utilisateur courant\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyToken\n                        \n                    \n                \n            \n            \n                \nverifyToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/services/auth.service.ts:89\n                \n            \n\n\n            \n                \n                    Vérifie la validité d'un token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nLe token à vérifier\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        La validité du token\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentUserSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/application/services/auth.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/application/services/auth.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '@/app/user/domain/user';\nimport { UserFacadeService } from '@/app/user/application/facade/user-facade.service';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport isNull from 'lodash/isNull';\nimport isUndefined from 'lodash/isUndefined';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\n/**\n * Classe de service d'authentification qui contient toutes les méthodes liées à l'authentification de l'utilisateur.\n */\nexport class AuthService {\n  private currentUserSubject = new BehaviorSubject(null);\n  currentUser$ = this.currentUserSubject.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private userService: UserFacadeService\n  ) {\n    const token = this.getToken();\n    if (!isEmpty(token)) {\n      const loggedUserId = this.getUserIdFromToken(token);\n      this.userService.getUser(loggedUserId).subscribe(user => {\n        this.currentUserSubject.next(user);\n      });\n    }\n  }\n\n  /**\n   * Défini l'utilisateur courant\n   *\n   * @param {User | null | undefined} user - L'utilisateur à définir comme utilisateur courant\n   */\n  setCurrentUser(user: User | null | undefined) {\n    this.currentUserSubject.next(user ?? null);\n  }\n\n  /**\n   * Authentifie un utilisateur\n   *\n   * @param {string} userName - Le nom d'utilisateur à utiliser pour la connexion\n   * @returns {Observable} L'utilisateur connecté\n   */\n  login(userName: string): Observable {\n    const apiLoginUrl = 'api/users';\n    return this.http.get(`${apiLoginUrl}/?userName=${userName}`).pipe(\n      map(user => {\n        this.currentUserSubject.next(user);\n        return user;\n      })\n    );\n  }\n\n  /**\n   * Déconnecte l'utilisateur actuellement connecté\n   */\n  logout() {\n    localStorage.removeItem('app_token');\n    this.currentUserSubject.next(null);\n  }\n\n  /**\n   * Génère un token pour un utilisateur\n   *\n   * @param {User} user - L'utilisateur pour lequel générer le token\n   * @returns {string} Le token généré\n   */\n  generateToken(user: User): string {\n    const expire = Math.floor(Date.now() / 1000) + 60 * 60 * 4;\n    const userInfo = { ...user, expire };\n    const stringifyUser = JSON.stringify(userInfo);\n    const encodeUser = btoa(stringifyUser);\n    return encodeUser;\n  }\n\n  /**\n   * Vérifie la validité d'un token\n   *\n   * @param {string} token - Le token à vérifier\n   * @returns {boolean} La validité du token\n   */\n  verifyToken(token: string): boolean {\n    const decodeUser = atob(token);\n    const parsedUser = JSON.parse(decodeUser);\n    const currentTime = Math.floor(Date.now() / 1000);\n    const tokenExpiration = get(parsedUser, 'expire');\n    return currentTime \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Booking.html":{"url":"interfaces/Booking.html","title":"interface - Booking","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Booking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/booking/domain/booking.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                        \n                                            timeBook\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeBook\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeBook:         OpeningHour[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OpeningHour[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OpeningHour } from '@/app/session/domain/session';\n\nexport interface Booking {\n  id?: number;\n  userId: number;\n  sessionId: number;\n  timeBook: OpeningHour[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookingComponent.html":{"url":"components/BookingComponent.html","title":"component - BookingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BookingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/booking/vue/component/booking.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-booking\n            \n\n\n\n            \n                styleUrls\n                ./booking.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./booking.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayedColumns\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bookings\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bookingService: BookingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/booking/vue/component/booking.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookingService\n                                                  \n                                                        \n                                                                        BookingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bookings\n                    \n                \n                \n                    \n                        Type :         Booking[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/booking/vue/component/booking.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['num', 'titre', 'contenu', 'date']\n                    \n                \n                    \n                        \n                                Defined in src/app/booking/vue/component/booking.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { BookingService } from '../../application/service/booking.service';\nimport { Booking } from '@/app/booking/domain/booking';\n\n@Component({\n  selector: 'app-booking',\n  templateUrl: './booking.component.html',\n  styleUrls: ['./booking.component.scss'],\n})\nexport class BookingComponent {\n  @Input() bookings: Booking[] = [];\n\n  displayedColumns: string[] = ['num', 'titre', 'contenu', 'date'];\n  constructor(private bookingService: BookingService) {}\n}\n\n    \n\n    \n        \n  \n    \n    \n       N° \n       {{ bookking.num }} \n    \n\n    \n    \n       Titre \n       fdgdfgfg\n    \n\n    \n    \n       Contenu \n       csscsc \n    \n\n    \n    \n       Date \n       csscsc \n    \n\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./booking.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 N°        {{ bookking.num }}                    Titre        fdgdfgfg                   Contenu        csscsc                    Date        csscsc               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookingFacadeService.html":{"url":"injectables/BookingFacadeService.html","title":"injectable - BookingFacadeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookingFacadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/booking/application/facade/booking-facade.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Ce service fournit une interface simplifiée pour interagir avec le BookingService.\nIl permet d'obtenir des informations sur les réservations, d'insérer, de mettre à jour ou de supprimer une réservation.\nthis.bookingFacadeService.getBookings();\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                booking$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bookSession\n                            \n                            \n                                deleteBooking\n                            \n                            \n                                generateId\n                            \n                            \n                                getBookings\n                            \n                            \n                                getBookingsByUserId\n                            \n                            \n                                insertBooking\n                            \n                            \n                                updateBooking\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    findBookings\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookingService: BookingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/booking/application/facade/booking-facade.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookingService\n                                                  \n                                                        \n                                                                        BookingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bookSession\n                        \n                    \n                \n            \n            \n                \n                    \n                    bookSession(booking: Booking)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/facade/booking-facade.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                Booking\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La réservation de la session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Une Promesse de la nouvelle réservation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBooking\n                        \n                    \n                \n            \n            \n                \ndeleteBooking(id: number, callback: (success: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/facade/booking-facade.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'identifiant de la réservation à supprimer.\n\n                                    \n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La fonction à exécuter après la suppression.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateId\n                        \n                    \n                \n            \n            \n                \ngenerateId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/facade/booking-facade.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Un identifiant numérique unique.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookings\n                        \n                    \n                \n            \n            \n                \ngetBookings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/facade/booking-facade.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookingsByUserId\n                        \n                    \n                \n            \n            \n                \ngetBookingsByUserId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/facade/booking-facade.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'identifiant de l'utilisateur.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertBooking\n                        \n                    \n                \n            \n            \n                \ninsertBooking(booking: Booking)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/facade/booking-facade.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                Booking\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La nouvelle réservation.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Un Observable de la nouvelle réservation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBooking\n                        \n                    \n                \n            \n            \n                \nupdateBooking(booking: Booking, callback: (success: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/facade/booking-facade.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                Booking\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La réservation à mettre à jour.\n\n                                    \n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La fonction à exécuter après la mise à jour.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        booking$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.bookingService.bookings$\n                    \n                \n                    \n                        \n                                Defined in src/app/booking/application/facade/booking-facade.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        findBookings\n                    \n                \n\n                \n                    \n                        getfindBookings()\n                    \n                \n                            \n                                \n                                    Defined in src/app/booking/application/facade/booking-facade.service.ts:29\n                                \n                            \n                    \n                        \n\n                                \n                                \n                                \n                                    Returns :         Booking[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Booking } from '@/app/booking/domain/booking';\nimport { BookingService } from '@/app/booking/application/service/booking.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * @description Service de façade pour les réservations.\n * Ce service fournit une interface simplifiée pour interagir avec le BookingService.\n * Il permet d'obtenir des informations sur les réservations, d'insérer, de mettre à jour ou de supprimer une réservation.\n *\n * @example\n * this.bookingFacadeService.getBookings();\n *\n * @injectable\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class BookingFacadeService {\n  booking$ = this.bookingService.bookings$;\n\n  constructor(private bookingService: BookingService) {}\n\n  /**\n   * @description Getter pour obtenir les réservations.\n   *\n   * @returns Les réservations actuelles.\n   */\n  get findBookings(): Booking[] {\n    return this.bookingService.findBookings;\n  }\n\n  /**\n   * @description Récupère toutes les réservations.\n   */\n  getBookings() {\n    this.bookingService.getBookings();\n  }\n\n  /**\n   * @description Récupère les réservations d'un utilisateur.\n   *\n   * @param id L'identifiant de l'utilisateur.\n   */\n  getBookingsByUserId(id: number) {\n    return this.bookingService.getBookingsByUserId(id);\n  }\n\n  /**\n   * @description Insère une nouvelle réservation.\n   *\n   * @param booking La nouvelle réservation.\n   * @returns Un Observable de la nouvelle réservation.\n   */\n  insertBooking(booking: Booking): Observable {\n    return this.bookingService.insertBooking(booking);\n  }\n\n  /**\n   * @description Met à jour une réservation existante.\n   *\n   * @param booking La réservation à mettre à jour.\n   * @param callback La fonction à exécuter après la mise à jour.\n   */\n  updateBooking(booking: Booking, callback: (success: boolean) => void) {\n    this.bookingService.updateBooking(booking, callback);\n  }\n\n  /**\n   * @description Supprime une réservation.\n   *\n   * @param id L'identifiant de la réservation à supprimer.\n   * @param callback La fonction à exécuter après la suppression.\n   */\n  deleteBooking(id: number, callback: (success: boolean) => void) {\n    this.bookingService.deleteBooking(id, callback);\n  }\n\n  /**\n   * @description Réserve une session.\n   *\n   * @param booking La réservation de la session.\n   * @returns Une Promesse de la nouvelle réservation.\n   */\n  async bookSession(booking: Booking) {\n    return await this.bookingService.bookSession(booking);\n  }\n\n  /**\n   * @description Génère un identifiant unique pour une nouvelle réservation.\n   *\n   * @returns Un identifiant numérique unique.\n   */\n  generateId() {\n    return this.bookingService.generateId();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookingModule.html":{"url":"modules/BookingModule.html","title":"module - BookingModule","body":"\n                   \n\n\n\n\n    Modules\n    BookingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BookingModule\n\n\n\ncluster_BookingModule_imports\n\n\n\ncluster_BookingModule_declarations\n\n\n\n\nBookingComponent\n\nBookingComponent\n\n\n\nBookingModule\n\nBookingModule\n\nBookingModule -->\n\nBookingComponent->BookingModule\n\n\n\n\n\nBookingRoutingModule\n\nBookingRoutingModule\n\nBookingModule -->\n\nBookingRoutingModule->BookingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/booking/booking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BookingComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BookingRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { BookingRoutingModule } from './booking-routing.module';\nimport { BookingComponent } from '../booking/vue/component/booking.component';\n\n@NgModule({\n  declarations: [BookingComponent],\n  imports: [\n    CommonModule,\n    BookingRoutingModule,\n    MatButtonModule,\n    MatTableModule,\n  ],\n})\nexport class BookingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookingRoutingModule.html":{"url":"modules/BookingRoutingModule.html","title":"module - BookingRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BookingRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/booking/booking-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\n\nimport { BookingComponent } from '@/app/booking/vue/component/booking.component';\nimport { NgModule } from '@angular/core';\n\nconst routes: Routes = [{ path: 'bookings', component: BookingComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BookingRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookingService.html":{"url":"injectables/BookingService.html","title":"injectable - BookingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/booking/application/service/booking.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Ce service fournit plusieurs méthodes pour obtenir des informations sur les réservations.\nthis.bookingService.getBookings();\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookings$\n                            \n                            \n                                    Private\n                                bookingsSubject\n                            \n                            \n                                    Private\n                                bookingUrl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bookSession\n                            \n                            \n                                deleteBooking\n                            \n                            \n                                generateId\n                            \n                            \n                                getBookings\n                            \n                            \n                                getBookingsByUserId\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                insertBooking\n                            \n                            \n                                updateBooking\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    bookingAsObservable\n                                \n                                \n                                    findBookings\n                                \n                                \n                                    setBooking\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(memory: InMemoryDataService, authService: AuthService, router: Router, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/booking/application/service/booking.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        memory\n                                                  \n                                                        \n                                                                        InMemoryDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        bookSession\n                        \n                    \n                \n            \n            \n                \n                    \n                    bookSession(booking: Booking)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/service/booking.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                Booking\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La réservation de la session.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Une Promesse de la nouvelle réservation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBooking\n                        \n                    \n                \n            \n            \n                \ndeleteBooking(id: number, callback: (success: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/service/booking.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'identifiant de la réservation à supprimer.\n\n                                    \n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La fonction à exécuter après la suppression.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateId\n                        \n                    \n                \n            \n            \n                \ngenerateId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/service/booking.service.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Un identifiant numérique unique.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookings\n                        \n                    \n                \n            \n            \n                \ngetBookings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/service/booking.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookingsByUserId\n                        \n                    \n                \n            \n            \n                \ngetBookingsByUserId(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/service/booking.service.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string, result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/service/booking.service.ts:214\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                    \n                                        Le nom de l'opération pendant laquelle l'erreur s'est produite.\n\n                                    \n                                \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        La valeur de retour en cas d'erreur.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: unknown) => Observable\n\n                    \n                    \n                        Un Observable du résultat.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertBooking\n                        \n                    \n                \n            \n            \n                \ninsertBooking(booking: Booking)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/service/booking.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                Booking\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La nouvelle réservation.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Un Observable de la nouvelle réservation.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBooking\n                        \n                    \n                \n            \n            \n                \nupdateBooking(booking: Booking, callback: (success: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking/application/service/booking.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                Booking\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La réservation à mettre à jour.\n\n                                    \n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        La fonction à exécuter après la mise à jour.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bookings$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.bookingsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/booking/application/service/booking.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bookingsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/booking/application/service/booking.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bookingUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api/bookings'\n                    \n                \n                    \n                        \n                                Defined in src/app/booking/application/service/booking.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/booking/application/service/booking.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        bookingAsObservable\n                    \n                \n\n                \n                    \n                        getbookingAsObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/booking/application/service/booking.service.ts:46\n                                \n                            \n                    \n                        \n\n                                \n                                \n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        findBookings\n                    \n                \n\n                \n                    \n                        getfindBookings()\n                    \n                \n                            \n                                \n                                    Defined in src/app/booking/application/service/booking.service.ts:55\n                                \n                            \n                    \n                        \n\n                                \n                                \n                                \n                                    Returns :         Booking[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        setBooking\n                    \n                \n\n\n                \n                    \n                        setsetBooking(booking: Booking[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/booking/application/service/booking.service.ts:64\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            booking\n                                                    \n                                                            \n                                                                            Booking[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Les nouvelles réservations.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, Observable, catchError, of, tap } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { AuthService } from '@/app/auth/application/services/auth.service';\nimport { BOOKINGS } from '@/app/booking/mock/mock-booking';\nimport { Booking } from '@/app/booking/domain/booking';\nimport { InMemoryDataService } from '@/app/in-memory-data.service';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport get from 'lodash/get';\n\n/**\n * @description Service pour la gestion des réservations.\n * Ce service fournit plusieurs méthodes pour obtenir des informations sur les réservations.\n *\n * @example\n * this.bookingService.getBookings();\n *\n * @injectable\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class BookingService {\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n  private bookingUrl = 'api/bookings';\n  private bookingsSubject: BehaviorSubject = new BehaviorSubject([]);\n  bookings$ = this.bookingsSubject.asObservable();\n\n  constructor(\n    private memory: InMemoryDataService,\n    private authService: AuthService,\n    private router: Router,\n    private http: HttpClient\n  ) {}\n\n  /**\n   * @description Getter pour obtenir le BehaviorSubject en tant qu'Observable\n   *\n   * @returns Un Observable des réservations.\n   */\n  get bookingAsObservable(): Observable {\n    return this.bookingsSubject.asObservable();\n  }\n\n  /**\n   * @description Getter pour obtenir la valeur actuelle du BehaviorSubject.\n   *\n   * @returns La valeur actuelle du BehaviorSubject.\n   */\n  get findBookings(): Booking[] {\n    return this.bookingsSubject.getValue();\n  }\n\n  /**\n   * @description Setter pour mettre à jour les réservations.\n   *\n   * @param booking Les nouvelles réservations.\n   */\n  set setBooking(booking: Booking[]) {\n    this.bookingsSubject.next(booking);\n  }\n\n  /**\n   * @description Insère une nouvelle réservation.\n   *\n   * @param booking La nouvelle réservation.\n   * @returns Un Observable de la nouvelle réservation.\n   */\n  insertBooking(booking: Booking): Observable {\n    return this.http\n      .post(this.bookingUrl, booking, this.httpOptions)\n      .pipe(\n        tap(newBooking => {\n          const currentValue = this.bookingsSubject.getValue();\n          this.bookingsSubject.next([...currentValue, newBooking]);\n        }),\n        catchError(this.handleError('insertBooking'))\n      );\n  }\n\n  /**\n   * @description Met à jour une réservation existante.\n   *\n   * @param booking La réservation à mettre à jour.\n   * @param callback La fonction à exécuter après la mise à jour.\n   */\n  updateBooking(booking: Booking, callback: (success: boolean) => void): void {\n    const bookingId = get(booking, 'id');\n    const url = `${this.bookingUrl}/${bookingId}`;\n    this.http\n      .put(url, booking, this.httpOptions)\n      .pipe(\n        tap(updatedBooking => {\n          const currentValue = this.bookingsSubject.getValue();\n          const updatedBookings = currentValue.map(u =>\n            u.id === updatedBooking.id ? updatedBooking : u\n          );\n          this.bookingsSubject.next(updatedBookings);\n          callback(true);\n        }),\n        catchError(err => {\n          this.handleError(`updateBooking ${err.message}`);\n          callback(false);\n          return of(null);\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * @description Supprime une réservation.\n   *\n   * @param id L'identifiant de la réservation à supprimer.\n   * @param callback La fonction à exécuter après la suppression.\n   */\n  deleteBooking(id: number, callback: (success: boolean) => void): void {\n    const url = `${this.bookingUrl}/${id}`;\n    this.http\n      .delete(url, this.httpOptions)\n      .pipe(\n        tap(() => {\n          const currentValue = this.bookingsSubject.getValue();\n          const updatedBookings = currentValue.filter(\n            booking => booking.id !== id\n          );\n          this.bookingsSubject.next(updatedBookings);\n          callback(true);\n        }),\n        catchError(this.handleError('deleteBooking'))\n      )\n      .subscribe({\n        error: err => {\n          console.error(err);\n          callback(false);\n        },\n      });\n  }\n\n  /**\n   * @description Réserve une session.\n   *\n   * @param booking La réservation de la session.\n   * @returns Une Promesse de la nouvelle réservation.\n   */\n  async bookSession(booking: Booking): Promise {\n    return new Promise((resolve, reject) => {\n      this.insertBooking(booking).subscribe(\n        newBooking => {\n          resolve(newBooking);\n        },\n        error => {\n          console.error('Error:', error);\n          reject(error);\n        }\n      );\n    });\n  }\n\n  /**\n   * @description Obtient toutes les réservations.\n   */\n  getBookings(): void {\n    this.http\n      .get(this.bookingUrl)\n      .pipe(tap(), catchError(this.handleError('getBookings', [])))\n      .subscribe(bookings => {\n        this.bookingsSubject.next(bookings);\n      });\n  }\n\n  /**\n   * @description Obtient les réservations d'un utilisateur.\n   *\n   * @param id L'identifiant de l'utilisateur.\n   */\n  getBookingsByUserId(userId: number): void {\n    const url = `${this.bookingUrl}/?userId=${userId}`;\n    this.http\n      .get(url)\n      .pipe(\n        tap(),\n        catchError(\n          this.handleError(`getBookingsByUserId id=${userId}`, [])\n        )\n      )\n      .subscribe(bookings => {\n        this.bookingsSubject.next(bookings);\n      });\n  }\n\n  /**\n   * @description Génère un identifiant unique pour une nouvelle réservation.\n   *\n   * @returns Un identifiant numérique unique.\n   */\n  generateId(): number {\n    const bookings = BOOKINGS;\n    const id = this.memory.bookingId(bookings);\n    return id;\n  }\n\n  /**\n   * @description Gère les erreurs de requête HTTP.\n   *\n   * @param operation Le nom de l'opération pendant laquelle l'erreur s'est produite.\n   * @param result La valeur de retour en cas d'erreur.\n   * @returns Un Observable du résultat.\n   */\n  private handleError(operation = 'operation', result?: T) {\n    return (error: unknown): Observable => {\n      console.error(`${operation} failed: ${error}`);\n      return of(result as T);\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            establishment\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        establishment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        establishment:         Establishment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Establishment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Establishment } from '@/app/establishment/domain/establishment';\nimport { EstablishmentFacadeService } from '@/app/establishment/application/facade/establishment-facade.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\ninterface DialogData {\n  establishment: Establishment;\n}\n\n/**\n * @description Composant d'édition d'un établissement.\n * Ce composant est utilisé pour recueillir les modifications sur un établissement existant.\n *\n * @selector app-establishment-edit\n * @component\n */\n@Component({\n  selector: 'app-establishment-edit',\n  templateUrl: './establishment-edit.component.html',\n  styleUrls: ['./establishment-edit.component.scss'],\n})\nexport class EstablishmentEditComponent {\n  establishmentForm: FormGroup;\n  establishment: Establishment;\n  editing = false;\n  error!: string;\n  isLoading = false;\n\n  /**\n   * @description Constructeur du composant.\n   * Initialise le formulaire d'édition d'un établissement.\n   *\n   * @param establishmentFacade Service de façade pour les établissements.\n   * @param fb Constructeur de formulaire.\n   * @param snackBar Barre de notifications.\n   * @param dialogRef Référence à la boîte de dialogue.\n   * @param data Données de l'établissement à modifier.\n   */\n  constructor(\n    private establishmentFacade: EstablishmentFacadeService,\n    private fb: FormBuilder,\n    private snackBar: MatSnackBar,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.establishment = { ...data.establishment };\n    this.establishmentForm = this.fb.group({\n      name: [{ value: '', disabled: true }, Validators.required],\n      adresse: [{ value: '', disabled: true }, Validators.required],\n      opening: [{ value: '', disabled: true }, Validators.required],\n      close: [{ value: '', disabled: true }, Validators.required],\n      imgUrl: [{ value: '', disabled: true }, Validators.required],\n      phoneNumber: [{ value: '', disabled: true }, Validators.required],\n    });\n  }\n\n  /**\n   * @description Confirme la modification d'un établissement.\n   * Cette méthode est appelée lorsque l'utilisateur appuie sur le bouton de confirmation.\n   */\n  onConfirmEdit(): void {\n    this.dialogRef.close(this.establishment);\n  }\n\n  /**\n   * @description Annule la modification d'un établissement.\n   * Cette méthode est appelée lorsque l'utilisateur appuie sur le bouton d'annulation.\n   */\n  onCancelEdit(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Establishment.html":{"url":"interfaces/Establishment.html","title":"interface - Establishment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Establishment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/establishment/domain/establishment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            close\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imgUrl\n                                        \n                                \n                                \n                                        \n                                            nom\n                                        \n                                \n                                \n                                        \n                                            opening\n                                        \n                                \n                                \n                                        \n                                            openingHours\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        close\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        close:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imgUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imgUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nom:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opening\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opening:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        openingHours\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        openingHours:         Pick[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pick[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OpeningHour } from '@/app/session/domain/session';\n\nexport interface Establishment {\n  nom: string;\n  address: string;\n  opening: string;\n  close: string;\n  imgUrl: string;\n  phoneNumber: string;\n  openingHours: Pick[];\n  id: number;\n}\n\nexport interface FormattedOpeningHour {\n  formattedDayAndHours: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstablishmentAddComponent.html":{"url":"components/EstablishmentAddComponent.html","title":"component - EstablishmentAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EstablishmentAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/establishment/vue/components/establishment-add/establishment-add.component.ts\n\n\n\n    \n        Description\n    \n    \n        Ce composant est utilisé pour recueillir les informations sur un nouvel établissement à ajouter à la base de données.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-establishment-add\n            \n\n\n\n            \n                styleUrls\n                ./establishment-add.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./establishment-add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                error\n                            \n                            \n                                establishmentForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                selectedFile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancelAdd\n                            \n                            \n                                onConfirmAdd\n                            \n                            \n                                onFileSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(establishmentFacade: EstablishmentFacadeService, fb: FormBuilder, dialogRef: MatDialogRef, memory: InMemoryDbService, data: Establishment)\n                    \n                \n                        \n                            \n                                Defined in src/app/establishment/vue/components/establishment-add/establishment-add.component.ts:25\n                            \n                        \n\n                \n                    \n                            Initialise le formulaire d'ajout d'un établissement.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        establishmentFacade\n                                                  \n                                                        \n                                                                        EstablishmentFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service de façade pour les établissements.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Constructeur de formulaire.\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Référence à la boîte de dialogue.\n\n                                                        \n                                                \n                                                \n                                                        memory\n                                                  \n                                                        \n                                                                    InMemoryDbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service en mémoire pour les données web.\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Establishment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Données de l'établissement à ajouter.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancelAdd\n                        \n                    \n                \n            \n            \n                \nonCancelAdd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/components/establishment-add/establishment-add.component.ts:89\n                \n            \n\n\n            \n                \n                    Cette méthode est appelée lorsque l'utilisateur appuie sur le bouton d'annulation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmAdd\n                        \n                    \n                \n            \n            \n                \nonConfirmAdd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/components/establishment-add/establishment-add.component.ts:58\n                \n            \n\n\n            \n                \n                    Cette méthode est appelée lorsque l'utilisateur appuie sur le bouton de confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/components/establishment-add/establishment-add.component.ts:99\n                \n            \n\n\n            \n                \n                    Cette méthode est appelée lorsque l'utilisateur sélectionne un fichier.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'événement de sélection du fichier.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Establishment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-add/establishment-add.component.ts:42\n                        \n                    \n\n            \n                \n                    Données de l'établissement à ajouter.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-add/establishment-add.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        establishmentForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-add/establishment-add.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-add/establishment-add.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-add/establishment-add.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Establishment } from '@/app/establishment/domain/establishment';\nimport { EstablishmentFacadeService } from '@/app/establishment/application/facade/establishment-facade.service';\nimport { OpeningHour } from '@/app/session/domain/session';\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\n\n/**\n * @description Composant d'ajout d'un établissement.\n * Ce composant est utilisé pour recueillir les informations sur un nouvel établissement à ajouter à la base de données.\n *\n * @selector app-establishment-add\n * @component\n */\n@Component({\n  selector: 'app-establishment-add',\n  templateUrl: './establishment-add.component.html',\n  styleUrls: ['./establishment-add.component.scss'],\n})\nexport class EstablishmentAddComponent {\n  establishmentForm: FormGroup;\n  selectedFile: File | null = null;\n  error!: string;\n  isLoading = false;\n\n  /**\n   * @description Constructeur du composant.\n   * Initialise le formulaire d'ajout d'un établissement.\n   *\n   * @param establishmentFacade Service de façade pour les établissements.\n   * @param fb Constructeur de formulaire.\n   * @param dialogRef Référence à la boîte de dialogue.\n   * @param memory Service en mémoire pour les données web.\n   * @param data Données de l'établissement à ajouter.\n   */\n  constructor(\n    private establishmentFacade: EstablishmentFacadeService,\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef,\n    private memory: InMemoryDbService,\n    @Inject(MAT_DIALOG_DATA) public data: Establishment\n  ) {\n    this.establishmentForm = this.fb.group({\n      name: ['', Validators.required],\n      address: ['', Validators.required],\n      opening: ['', Validators.required],\n      close: ['', Validators.required],\n      imgUrl: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n    });\n  }\n\n  /**\n   * @description Confirme l'ajout d'un établissement.\n   * Cette méthode est appelée lorsque l'utilisateur appuie sur le bouton de confirmation.\n   */\n  onConfirmAdd(): void {\n    if (this.selectedFile === null) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append('image', this.selectedFile, this.selectedFile.name);\n\n    const newEstablishment: Establishment = {\n      id: this.establishmentFacade.generateId(),\n      nom: this.establishmentForm.value.name,\n      address: this.establishmentForm.value.address,\n      opening: this.establishmentForm.value.opening,\n      close: this.establishmentForm.value.close,\n      imgUrl: this.selectedFile.name,\n      phoneNumber: this.establishmentForm.value.phoneNumber,\n      openingHours: [\n        { dayOfWeek: 'Lundi', startTime: '09:00', endTime: '18:00' },\n        { dayOfWeek: 'Jeudi', startTime: '09:00', endTime: '18:00' },\n        { dayOfWeek: 'Vendredi', startTime: '09:00', endTime: '18:00' },\n        { dayOfWeek: 'Samedi', startTime: '09:00', endTime: '13:00' },\n      ] as Pick[],\n    };\n    this.establishmentFacade.insertEstablishment(newEstablishment).subscribe();\n\n    this.dialogRef.close(newEstablishment);\n  }\n\n  /**\n   * @description Annule l'ajout d'un établissement.\n   * Cette méthode est appelée lorsque l'utilisateur appuie sur le bouton d'annulation.\n   */\n  onCancelAdd(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * @description Gère la sélection d'un fichier par l'utilisateur.\n   * Cette méthode est appelée lorsque l'utilisateur sélectionne un fichier.\n   *\n   * @param event L'événement de sélection du fichier.\n   */\n  onFileSelected(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedFile = inputElement.files[0];\n    }\n  }\n}\n\n    \n\n    \n        Ajouter un établissement\n\n  \n    \n    \n      Nom\n      \n    \n\n    \n      Adresse\n      \n    \n\n    \n      Horaire d'ouverture\n      \n    \n\n    \n      Horaire de fermeture\n      \n    \n\n    \n      Contact\n      \n    \n\n    \n    \n      \n    \n\n    \n      \n        Annuler\n      \n      \n        Ajouter\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./establishment-add.component.scss\n                \n                ::ng-deep .mdc-dialog__container {\n  width: 664px;\n\n  form {\n    width: 100%;\n    text-align: center;\n    mat-form-field {\n      width: 70%;\n      margin-bottom: 1em;\n    }\n  }\n  h2 {\n    text-align: center;\n  }\n\n  .btn-add {\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n    margin: 15px;\n    button {\n      width: 140px;\n    }\n  }\n\n  .file {\n    input {\n      width: 60%;\n      margin-bottom: 1em;\n    }\n    width: 500px;\n  }\n\n  .time-select-container {\n    form {\n      width: 35%;\n      text-align: center;\n      mat-form-field {\n        width: 35%;\n        margin-bottom: 1em;\n      }\n    }\n\n    .time-select-field {\n      flex: 1;\n      margin-right: 8px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Ajouter un établissement                Nom                    Adresse                    Horaire d\\'ouverture                    Horaire de fermeture                    Contact                                              Annuler                    Ajouter            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstablishmentAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstablishmentComponent.html":{"url":"components/EstablishmentComponent.html","title":"component - EstablishmentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EstablishmentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/establishment/vue/components/establishment-card/establishment.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-establishment\n            \n\n\n\n            \n                styleUrls\n                ./establishment.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./establishment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                Error\n                            \n                            \n                                establishmentElt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                establishment\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef, establishmentService: EstablishmentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/establishment/vue/components/establishment-card/establishment.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        establishmentService\n                                                  \n                                                        \n                                                                        EstablishmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        establishment\n                    \n                \n                \n                    \n                        Type :         Establishment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/establishment/vue/components/establishment-card/establishment.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/components/establishment-card/establishment.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        Error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Error\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-card/establishment.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        establishmentElt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Establishment\n\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-card/establishment.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { Establishment } from '../../../domain/establishment';\nimport { EstablishmentService } from '@/app/establishment/application/services/establishment.service';\n\n@Component({\n  selector: 'app-establishment',\n  templateUrl: './establishment.component.html',\n  styleUrls: ['./establishment.component.scss'],\n})\nexport class EstablishmentComponent implements OnChanges {\n  @Input() establishment!: Establishment;\n\n  establishmentElt!: Establishment;\n  protected readonly Error = Error;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private establishmentService: EstablishmentService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['establishment']) {\n      return;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n      \n      \n        {{ establishment.nom }}\n        \n      \n    \n    \n      \n        \n          LUN - VEN 07H - 22H\n          SAM 08H - 20H\n          DIM 08H - 17H\n        \n        \n        \n          pin_drop\n          {{ establishment.address }}\n        \n        \n          phone\n          {{ establishment.phoneNumber }}\n        \n      \n    \n    \n      \n        Voir session\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./establishment.component.scss\n                \n                .establishment-container {\n  padding: 20px;\n  max-width: 346px;\n  max-height: 641px;\n  position: relative;\n\n  .establishment-card {\n    height: 541px;\n    .establishment-img-container {\n      width: 346px;\n      height: 228px;\n      position: relative;\n\n      .image-overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.5);\n        z-index: 1;\n      }\n\n      .image-text {\n        position: absolute;\n        bottom: 10px;\n        left: 10px;\n        color: #fff;\n        text-transform: uppercase;\n        font-size: 20px;\n        font-weight: bold;\n        z-index: 2;\n      }\n\n      .establishment-image {\n        width: 100%;\n        object-fit: contain;\n      }\n    }\n\n    .establishment-info {\n      display: flex;\n      align-items: center;\n\n      .icon-padding {\n        padding-right: 8px;\n      }\n    }\n\n    .action-button {\n      display: flex;\n      justify-content: center;\n      width: 100%;\n      margin: 0 auto;\n      position: absolute;\n      bottom: 0;\n\n      button {\n        width: 50%;\n        padding: 0;\n        border-radius: 3px;\n      }\n    }\n\n    .mdc-card__actions {\n      min-height: auto;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ establishment.nom }}                                              LUN - VEN 07H - 22H          SAM 08H - 20H          DIM 08H - 17H                                  pin_drop          {{ establishment.address }}                          phone          {{ establishment.phoneNumber }}                                    Voir session            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstablishmentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstablishmentEditComponent.html":{"url":"components/EstablishmentEditComponent.html","title":"component - EstablishmentEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EstablishmentEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts\n\n\n\n    \n        Description\n    \n    \n        Ce composant est utilisé pour recueillir les modifications sur un établissement existant.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-establishment-edit\n            \n\n\n\n            \n                styleUrls\n                ./establishment-edit.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./establishment-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                editing\n                            \n                            \n                                error\n                            \n                            \n                                establishment\n                            \n                            \n                                establishmentForm\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancelEdit\n                            \n                            \n                                onConfirmEdit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(establishmentFacade: EstablishmentFacadeService, fb: FormBuilder, snackBar: MatSnackBar, dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts:29\n                            \n                        \n\n                \n                    \n                            Initialise le formulaire d'édition d'un établissement.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        establishmentFacade\n                                                  \n                                                        \n                                                                        EstablishmentFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service de façade pour les établissements.\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Constructeur de formulaire.\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Barre de notifications.\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Référence à la boîte de dialogue.\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Données de l'établissement à modifier.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCancelEdit\n                        \n                    \n                \n            \n            \n                \nonCancelEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts:71\n                \n            \n\n\n            \n                \n                    Cette méthode est appelée lorsque l'utilisateur appuie sur le bouton d'annulation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmEdit\n                        \n                    \n                \n            \n            \n                \nonConfirmEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts:63\n                \n            \n\n\n            \n                \n                    Cette méthode est appelée lorsque l'utilisateur appuie sur le bouton de confirmation.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts:46\n                        \n                    \n\n            \n                \n                    Données de l'établissement à modifier.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts:45\n                        \n                    \n\n            \n                \n                    Référence à la boîte de dialogue.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        establishment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Establishment\n\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        establishmentForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Establishment } from '@/app/establishment/domain/establishment';\nimport { EstablishmentFacadeService } from '@/app/establishment/application/facade/establishment-facade.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\ninterface DialogData {\n  establishment: Establishment;\n}\n\n/**\n * @description Composant d'édition d'un établissement.\n * Ce composant est utilisé pour recueillir les modifications sur un établissement existant.\n *\n * @selector app-establishment-edit\n * @component\n */\n@Component({\n  selector: 'app-establishment-edit',\n  templateUrl: './establishment-edit.component.html',\n  styleUrls: ['./establishment-edit.component.scss'],\n})\nexport class EstablishmentEditComponent {\n  establishmentForm: FormGroup;\n  establishment: Establishment;\n  editing = false;\n  error!: string;\n  isLoading = false;\n\n  /**\n   * @description Constructeur du composant.\n   * Initialise le formulaire d'édition d'un établissement.\n   *\n   * @param establishmentFacade Service de façade pour les établissements.\n   * @param fb Constructeur de formulaire.\n   * @param snackBar Barre de notifications.\n   * @param dialogRef Référence à la boîte de dialogue.\n   * @param data Données de l'établissement à modifier.\n   */\n  constructor(\n    private establishmentFacade: EstablishmentFacadeService,\n    private fb: FormBuilder,\n    private snackBar: MatSnackBar,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) {\n    this.establishment = { ...data.establishment };\n    this.establishmentForm = this.fb.group({\n      name: [{ value: '', disabled: true }, Validators.required],\n      adresse: [{ value: '', disabled: true }, Validators.required],\n      opening: [{ value: '', disabled: true }, Validators.required],\n      close: [{ value: '', disabled: true }, Validators.required],\n      imgUrl: [{ value: '', disabled: true }, Validators.required],\n      phoneNumber: [{ value: '', disabled: true }, Validators.required],\n    });\n  }\n\n  /**\n   * @description Confirme la modification d'un établissement.\n   * Cette méthode est appelée lorsque l'utilisateur appuie sur le bouton de confirmation.\n   */\n  onConfirmEdit(): void {\n    this.dialogRef.close(this.establishment);\n  }\n\n  /**\n   * @description Annule la modification d'un établissement.\n   * Cette méthode est appelée lorsque l'utilisateur appuie sur le bouton d'annulation.\n   */\n  onCancelEdit(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \nEtablissement\n\n  \n    \n    \n      Nom\n      \n    \n\n    \n      Adresse\n      \n    \n\n    \n      Horaire d'ouverture\n      \n    \n\n    \n      Horaire de fermeture\n      \n    \n\n    \n      Contact\n      \n    \n\n    \n    \n      \n    \n\n    \n      \n        Fermer\n      \n      \n        Mettre à jour\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./establishment-edit.component.scss\n                \n                ::ng-deep .mdc-dialog__container {\n  width: 664px;\n\n  form {\n    width: 100%;\n    text-align: center;\n    mat-form-field {\n      width: 70%;\n      margin-bottom: 1em;\n    }\n  }\n  h2 {\n    text-align: center;\n  }\n\n  .btn-edit {\n    display: flex;\n    justify-content: center;\n    gap: 50px;\n    margin: 15px;\n    button {\n      width: 140px;\n    }\n  }\n\n  .file {\n    input {\n      width: 60%;\n      margin-bottom: 1em;\n    }\n    width: 500px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Etablissement                Nom                    Adresse                    Horaire d\\'ouverture                    Horaire de fermeture                    Contact                                              Fermer                    Mettre à jour            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstablishmentEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EstablishmentFacadeService.html":{"url":"injectables/EstablishmentFacadeService.html","title":"injectable - EstablishmentFacadeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EstablishmentFacadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/establishment/application/facade/establishment-facade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                establishment$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEstablishment\n                            \n                            \n                                deleteEstablishment\n                            \n                            \n                                generateId\n                            \n                            \n                                getEstablishment\n                            \n                            \n                                getEstablishments\n                            \n                            \n                                insertEstablishment\n                            \n                            \n                                updateEstablishment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(establishmentService: EstablishmentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/establishment/application/facade/establishment-facade.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        establishmentService\n                                                  \n                                                        \n                                                                        EstablishmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEstablishment\n                        \n                    \n                \n            \n            \n                \naddEstablishment(establishment: Establishment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/facade/establishment-facade.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    establishment\n                                    \n                                                Establishment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEstablishment\n                        \n                    \n                \n            \n            \n                \ndeleteEstablishment(id: number, callback: (success: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/facade/establishment-facade.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateId\n                        \n                    \n                \n            \n            \n                \ngenerateId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/facade/establishment-facade.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEstablishment\n                        \n                    \n                \n            \n            \n                \ngetEstablishment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/facade/establishment-facade.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEstablishments\n                        \n                    \n                \n            \n            \n                \ngetEstablishments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/facade/establishment-facade.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertEstablishment\n                        \n                    \n                \n            \n            \n                \ninsertEstablishment(establishment: Establishment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/facade/establishment-facade.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    establishment\n                                    \n                                                Establishment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEstablishment\n                        \n                    \n                \n            \n            \n                \nupdateEstablishment(establishment: Establishment, callback: (success: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/facade/establishment-facade.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    establishment\n                                    \n                                                Establishment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        establishment$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.establishmentService.establishment$\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/application/facade/establishment-facade.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EstablishmentService } from '../services/establishment.service';\nimport { Establishment } from '../../domain/establishment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EstablishmentFacadeService {\n  establishment$ = this.establishmentService.establishment$;\n  constructor(private establishmentService: EstablishmentService) {}\n\n  getEstablishments() {\n    this.establishmentService.getEstablishments();\n  }\n\n  getEstablishment(id: number) {\n    const establishment = this.establishmentService.getEstablishment(id);\n    return establishment;\n  }\n\n  addEstablishment(establishment: Establishment) {\n    return this.establishmentService.addEstablishment(establishment);\n  }\n\n  updateEstablishment(\n    establishment: Establishment,\n    callback: (success: boolean) => void\n  ) {\n    this.establishmentService.updateEstablishment(establishment, callback);\n  }\n\n  deleteEstablishment(id: number, callback: (success: boolean) => void) {\n    this.establishmentService.deleteEstablishment(id, callback);\n  }\n\n  generateId() {\n    return this.establishmentService.generateId();\n  }\n\n  insertEstablishment(establishment: Establishment): Observable {\n    return this.establishmentService.insertEstablishment(establishment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstablishmentListComponent.html":{"url":"components/EstablishmentListComponent.html","title":"component - EstablishmentListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EstablishmentListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/establishment/vue/components/establishment-list/establishment-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Ce composant affiche une liste des établissements et permet l'ajout, la mise à jour et la suppression des établissements.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-establishment-list\n            \n\n\n\n            \n                styleUrls\n                ./establishment-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./establishment-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayedColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onAdd\n                            \n                            \n                                onDelete\n                            \n                            \n                                onUpdate\n                            \n                            \n                                openAddDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                establishments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/establishment/vue/components/establishment-list/establishment-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialogue Material Angular pour afficher le formulaire d'ajout d'établissement.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        establishments\n                    \n                \n                \n                    \n                        Type :         Establishment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/establishment/vue/components/establishment-list/establishment-list.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        add\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/establishment/vue/components/establishment-list/establishment-list.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/establishment/vue/components/establishment-list/establishment-list.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/establishment/vue/components/establishment-list/establishment-list.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onAdd\n                        \n                    \n                \n            \n            \n                \nonAdd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/components/establishment-list/establishment-list.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete(establishment: Establishment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/components/establishment-list/establishment-list.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    establishment\n                                    \n                                                Establishment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'établissement à supprimer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdate\n                        \n                    \n                \n            \n            \n                \nonUpdate(establishment: Establishment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/components/establishment-list/establishment-list.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    establishment\n                                    \n                                                Establishment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'établissement à mettre à jour.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddDialog\n                        \n                    \n                \n            \n            \n                \nopenAddDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/components/establishment-list/establishment-list.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'nom',\n    'address',\n    'opening',\n    'close',\n    'phoneNumber',\n    'imgUrl',\n    'action',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/components/establishment-list/establishment-list.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Establishment } from '@/app/establishment/domain/establishment';\nimport { EstablishmentAddComponent } from '@/app/establishment/vue/components/establishment-add/establishment-add.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n/**\n * @description Composant de la liste des établissements.\n * Ce composant affiche une liste des établissements et permet l'ajout, la mise à jour et la suppression des établissements.\n *\n * @selector app-establishment-list\n * @component\n */\n@Component({\n  selector: 'app-establishment-list',\n  templateUrl: './establishment-list.component.html',\n  styleUrls: ['./establishment-list.component.scss'],\n})\nexport class EstablishmentListComponent {\n  /**\n   * @description Constructeur du composant.\n   *\n   * @param dialog Dialogue Material Angular pour afficher le formulaire d'ajout d'établissement.\n   */\n  constructor(private dialog: MatDialog) {}\n\n  /**\n   * @description Établissements à afficher.\n   */\n  @Input() establishments: Establishment[] = [];\n  /**\n   * @description Émetteur d'événements pour l'ajout d'un établissement.\n   */\n  @Output() add = new EventEmitter();\n  /**\n   * @description Émetteur d'événements pour la mise à jour d'un établissement.\n   */\n  @Output() update = new EventEmitter();\n  /**\n   * @description Émetteur d'événements pour la suppression d'un établissement.\n   */\n  @Output() delete = new EventEmitter();\n\n  displayedColumns: string[] = [\n    'nom',\n    'address',\n    'opening',\n    'close',\n    'phoneNumber',\n    'imgUrl',\n    'action',\n  ];\n\n  /**\n   * @description Méthode pour déclencher l'événement d'ajout d'un établissement.\n   */\n  onAdd() {\n    this.add.emit();\n  }\n\n  /**\n   * @description Méthode pour déclencher l'événement de mise à jour d'un établissement.\n   *\n   * @param establishment L'établissement à mettre à jour.\n   */\n  onUpdate(establishment: Establishment) {\n    this.update.emit(establishment);\n  }\n\n  /**\n   * @description Méthode pour déclencher l'événement de suppression d'un établissement.\n   *\n   * @param establishment L'établissement à supprimer.\n   */\n  onDelete(establishment: Establishment) {\n    this.delete.emit(establishment);\n  }\n\n  /**\n   * @description Méthode pour ouvrir le dialogue d'ajout d'un établissement.\n   */\n  openAddDialog(): void {\n    this.dialog.open(EstablishmentAddComponent, {});\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Nouveau\n    \n  \n\n  \n    \n    \n       Name \n      \n        {{ establishment.nom }}\n      \n    \n\n    \n    \n       address \n      \n        {{ establishment.address }}\n      \n    \n\n    \n    \n       opening \n      \n        {{ establishment.opening }}\n      \n    \n\n    \n    \n       close \n      \n        {{ establishment.close }}\n      \n    \n\n    \n    \n       phoneNumber \n      \n        {{ establishment.phoneNumber }}\n      \n    \n\n    \n\n    \n       Image \n      \n        \n      \n    \n\n    \n    \n       Actions \n      \n        \n          edit\n        \n        \n          delete\n        \n      \n    \n\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./establishment-list.component.scss\n                \n                .btn-add {\n  display: flex;\n  justify-content: center;\n  margin: 15px;\n  button {\n    width: 140px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Nouveau                       Name               {{ establishment.nom }}                         address               {{ establishment.address }}                         opening               {{ establishment.opening }}                         close               {{ establishment.close }}                         phoneNumber               {{ establishment.phoneNumber }}                         Image                                        Actions                         edit                          delete                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstablishmentListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EstablishmentModule.html":{"url":"modules/EstablishmentModule.html","title":"module - EstablishmentModule","body":"\n                   \n\n\n\n\n    Modules\n    EstablishmentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EstablishmentModule\n\n\n\ncluster_EstablishmentModule_imports\n\n\n\ncluster_EstablishmentModule_declarations\n\n\n\ncluster_EstablishmentModule_exports\n\n\n\n\nEstablishmentAddComponent\n\nEstablishmentAddComponent\n\n\n\nEstablishmentModule\n\nEstablishmentModule\n\nEstablishmentModule -->\n\nEstablishmentAddComponent->EstablishmentModule\n\n\n\n\n\nEstablishmentComponent\n\nEstablishmentComponent\n\nEstablishmentModule -->\n\nEstablishmentComponent->EstablishmentModule\n\n\n\n\n\nEstablishmentEditComponent\n\nEstablishmentEditComponent\n\nEstablishmentModule -->\n\nEstablishmentEditComponent->EstablishmentModule\n\n\n\n\n\nEstablishmentListComponent\n\nEstablishmentListComponent\n\nEstablishmentModule -->\n\nEstablishmentListComponent->EstablishmentModule\n\n\n\n\n\nEstablishmentPageComponent\n\nEstablishmentPageComponent\n\nEstablishmentModule -->\n\nEstablishmentPageComponent->EstablishmentModule\n\n\n\n\n\nEstablishmentComponent \n\nEstablishmentComponent \n\nEstablishmentComponent  -->\n\nEstablishmentModule->EstablishmentComponent \n\n\n\n\n\nEstablishmentRouting\n\nEstablishmentRouting\n\nEstablishmentModule -->\n\nEstablishmentRouting->EstablishmentModule\n\n\n\n\n\nNgForOf\n\nNgForOf\n\nEstablishmentModule -->\n\nNgForOf->EstablishmentModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nEstablishmentModule -->\n\nNgIf->EstablishmentModule\n\n\n\n\n\nNgOptimizedImage\n\nNgOptimizedImage\n\nEstablishmentModule -->\n\nNgOptimizedImage->EstablishmentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/establishment/establishment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EstablishmentAddComponent\n                        \n                        \n                            EstablishmentComponent\n                        \n                        \n                            EstablishmentEditComponent\n                        \n                        \n                            EstablishmentListComponent\n                        \n                        \n                            EstablishmentPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EstablishmentRouting\n                        \n                        \n                            NgForOf\n                        \n                        \n                            NgIf\n                        \n                        \n                            NgOptimizedImage\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EstablishmentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EstablishmentRouting } from '@/app/establishment/establishment-routing';\nimport { MatTableModule } from '@angular/material/table';\nimport { EstablishmentComponent } from '@/app/establishment/vue/components/establishment-card/establishment.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { NgForOf, NgIf, NgOptimizedImage } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { EstablishmentListComponent } from '@/app/establishment/vue/components/establishment-list/establishment-list.component';\nimport { EstablishmentPageComponent } from '@/app/establishment/vue/containers/establishment-page/establishment-page.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { EstablishmentEditComponent } from '@/app/establishment/vue/components/establishment-edit/establishment-edit.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule } from '@angular/forms'; // Import ReactiveFormsModule\nimport { EstablishmentAddComponent } from './vue/components/establishment-add/establishment-add.component';\n\n@NgModule({\n  declarations: [\n    EstablishmentComponent,\n    EstablishmentListComponent,\n    EstablishmentPageComponent,\n    EstablishmentEditComponent,\n    EstablishmentAddComponent,\n  ],\n  imports: [\n    EstablishmentRouting,\n    MatTableModule,\n    MatCardModule,\n    NgIf,\n    NgOptimizedImage,\n    MatIconModule,\n    MatButtonModule,\n    NgForOf,\n    MatDialogModule,\n    MatFormFieldModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n  ],\n  providers: [],\n  exports: [EstablishmentComponent],\n})\nexport class EstablishmentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EstablishmentPageComponent.html":{"url":"components/EstablishmentPageComponent.html","title":"component - EstablishmentPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EstablishmentPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/establishment/vue/containers/establishment-page/establishment-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Cette page contient la logique de gestion des établissements, y compris l'ajout, la modification et la suppression d'établissements.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-establishment-page\n            \n\n\n\n            \n                styleUrls\n                ./establishment-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./establishment-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                establishments$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEstablishment\n                            \n                            \n                                deleteEstablishment\n                            \n                            \n                                getEstablishmens\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateEstablishment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(establishmentService: EstablishmentFacadeService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/establishment/vue/containers/establishment-page/establishment-page.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        establishmentService\n                                                  \n                                                        \n                                                                        EstablishmentFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service de façade pour la gestion des établissements.\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service de dialogue de Material Angular pour afficher les formulaires de modification d'établissement.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEstablishment\n                        \n                    \n                \n            \n            \n                \naddEstablishment(establishment: Establishment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/containers/establishment-page/establishment-page.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    establishment\n                                    \n                                                Establishment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'établissement à ajouter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEstablishment\n                        \n                    \n                \n            \n            \n                \ndeleteEstablishment(establishment: Establishment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/containers/establishment-page/establishment-page.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    establishment\n                                    \n                                                Establishment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'établissement à supprimer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEstablishmens\n                        \n                    \n                \n            \n            \n                \ngetEstablishmens()\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/containers/establishment-page/establishment-page.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/containers/establishment-page/establishment-page.component.ts:39\n                \n            \n\n\n            \n                \n                    Récupère la liste des établissements à l'initialisation du composant.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEstablishment\n                        \n                    \n                \n            \n            \n                \nupdateEstablishment(establishment: Establishment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/vue/containers/establishment-page/establishment-page.component.ts:68\n                \n            \n\n\n            \n                \n                    Ouvre un dialogue pour modifier l'établissement et met à jour l'établissement dans le service après la fermeture du dialogue.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    establishment\n                                    \n                                                Establishment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'établissement à mettre à jour.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/containers/establishment-page/establishment-page.component.ts:32\n                        \n                    \n\n            \n                \n                    Service de dialogue de Material Angular pour afficher les formulaires de modification d'établissement.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        establishments$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.establishmentService.establishment$\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/vue/containers/establishment-page/establishment-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Establishment } from '@/app/establishment/domain/establishment';\nimport { EstablishmentEditComponent } from '@/app/establishment/vue/components/establishment-edit/establishment-edit.component';\nimport { EstablishmentFacadeService } from '@/app/establishment/application/facade/establishment-facade.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport get from 'lodash/get';\n\n/**\n * @description Page principale du module établissement.\n * Cette page contient la logique de gestion des établissements, y compris l'ajout, la modification et la suppression d'établissements.\n *\n * @selector app-establishment-page\n * @component\n */\n@Component({\n  selector: 'app-establishment-page',\n  templateUrl: './establishment-page.component.html',\n  styleUrls: ['./establishment-page.component.scss'],\n})\nexport class EstablishmentPageComponent implements OnInit {\n  establishments$ = this.establishmentService.establishment$;\n\n  /**\n   * @description Constructeur du composant.\n   *\n   * @param establishmentService Service de façade pour la gestion des établissements.\n   * @param dialog Service de dialogue de Material Angular pour afficher les formulaires de modification d'établissement.\n   */\n  constructor(\n    private establishmentService: EstablishmentFacadeService,\n    public dialog: MatDialog\n  ) {}\n\n  /**\n   * @description Méthode ngOnInit du cycle de vie du composant Angular.\n   * Récupère la liste des établissements à l'initialisation du composant.\n   */\n  ngOnInit(): void {\n    this.getEstablishmens();\n  }\n\n  /**\n   * @description Récupère la liste des établissements du service.\n   */\n  getEstablishmens(): void {\n    this.establishmentService.getEstablishments();\n  }\n\n  /**\n   * @description Ajoute un nouvel établissement.\n   *\n   * @param establishment L'établissement à ajouter.\n   */\n  addEstablishment(establishment: Establishment) {\n    if (!establishment) {\n      return;\n    }\n    this.establishmentService.addEstablishment(establishment).subscribe();\n  }\n\n  /**\n   * @description Met à jour un établissement existant.\n   * Ouvre un dialogue pour modifier l'établissement et met à jour l'établissement dans le service après la fermeture du dialogue.\n   *\n   * @param establishment L'établissement à mettre à jour.\n   */\n  updateEstablishment(establishment: Establishment): void {\n    const dialogRef = this.dialog.open(EstablishmentEditComponent, {\n      data: { establishment: { ...establishment } },\n    });\n\n    dialogRef.afterClosed().subscribe((editedEstablishment: any) => {\n      if (editedEstablishment) {\n        this.establishmentService.updateEstablishment(\n          establishment,\n          (success: boolean) => {\n            try {\n              if (success) {\n                return;\n              } else {\n                console.log(\n                  `Failed to update establishment with id ${establishment.id}`\n                );\n              }\n            } catch (error) {\n              console.error(error);\n            }\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * @description Supprime un établissement existant.\n   *\n   * @param establishment L'établissement à supprimer.\n   */\n  deleteEstablishment(establishment: Establishment) {\n    const id: number = get(establishment, 'id');\n    this.establishmentService.deleteEstablishment(id, (success: boolean) => {\n      if (success) {\n        this.getEstablishmens();\n      } else {\n        console.log(`Failed to delete establishment with id ${id}`);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./establishment-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EstablishmentPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EstablishmentRouting.html":{"url":"modules/EstablishmentRouting.html","title":"module - EstablishmentRouting","body":"\n                   \n\n\n\n\n    Modules\n    EstablishmentRouting\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/establishment/establishment-routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { EstablishmentPageComponent } from './vue/containers/establishment-page/establishment-page.component';\nimport { adminGuard } from '@/app/auth/application/guards/admin.guard';\nimport { authGuard } from '@/app/auth/application/guards/auth.guard';\n\nconst route: Routes = [\n  {\n    path: 'establishments',\n    component: EstablishmentPageComponent,\n    canActivate: [authGuard, adminGuard],\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(route)],\n  exports: [RouterModule],\n})\nexport class EstablishmentRouting {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EstablishmentService.html":{"url":"injectables/EstablishmentService.html","title":"injectable - EstablishmentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EstablishmentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/establishment/application/services/establishment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                establishment$\n                            \n                            \n                                    Private\n                                establishmentSubject\n                            \n                            \n                                    Private\n                                establishmentsUrl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEstablishment\n                            \n                            \n                                deleteEstablishment\n                            \n                            \n                                generateId\n                            \n                            \n                                getEstablishment\n                            \n                            \n                                getEstablishments\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                insertEstablishment\n                            \n                            \n                                updateEstablishment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, memory: InMemoryDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/establishment/application/services/establishment.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memory\n                                                  \n                                                        \n                                                                        InMemoryDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEstablishment\n                        \n                    \n                \n            \n            \n                \naddEstablishment(establishment: Establishment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/services/establishment.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    establishment\n                                    \n                                                Establishment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteEstablishment\n                        \n                    \n                \n            \n            \n                \ndeleteEstablishment(id: number, callback: (success: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/services/establishment.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateId\n                        \n                    \n                \n            \n            \n                \ngenerateId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/services/establishment.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEstablishment\n                        \n                    \n                \n            \n            \n                \ngetEstablishment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/services/establishment.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEstablishments\n                        \n                    \n                \n            \n            \n                \ngetEstablishments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/services/establishment.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string, result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/services/establishment.service.ts:129\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: unknown) => Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertEstablishment\n                        \n                    \n                \n            \n            \n                \ninsertEstablishment(establishment: Establishment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/services/establishment.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    establishment\n                                    \n                                                Establishment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEstablishment\n                        \n                    \n                \n            \n            \n                \nupdateEstablishment(establishment: Establishment, callback: (success: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/establishment/application/services/establishment.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    establishment\n                                    \n                                                Establishment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        establishment$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.establishmentSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/application/services/establishment.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        establishmentSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/application/services/establishment.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        establishmentsUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api/establishments'\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/application/services/establishment.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/establishment/application/services/establishment.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BehaviorSubject, Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { ESTABLISHMENTS } from '../../mock/mock-establishment';\nimport { Establishment } from '@/app/establishment/domain/establishment';\nimport { InMemoryDataService } from '@/app/in-memory-data.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EstablishmentService {\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n\n  private establishmentSubject = new BehaviorSubject([]);\n  establishment$ = this.establishmentSubject.asObservable();\n\n  private establishmentsUrl = 'api/establishments';\n  constructor(private http: HttpClient, private memory: InMemoryDataService) {}\n\n  getEstablishments(): void {\n    this.http\n      .get(this.establishmentsUrl)\n      .pipe(\n        tap(),\n        catchError(this.handleError('getEstablishments', []))\n      )\n      .subscribe(establishments => {\n        this.establishmentSubject.next(establishments);\n      });\n  }\n\n  getEstablishment(id: number): Observable {\n    const url = `${this.establishmentsUrl}/${id}`;\n    return this.http\n      .get(url)\n      .pipe(\n        tap(),\n        catchError(this.handleError(`Establishment id=${id}`))\n      );\n  }\n\n  addEstablishment(establishment: Establishment): Observable {\n    return this.http\n      .post(\n        this.establishmentsUrl,\n        establishment,\n        this.httpOptions\n      )\n      .pipe(\n        tap(),\n        catchError(this.handleError('addEstablishment'))\n      );\n  }\n\n  insertEstablishment(establishment: Establishment): Observable {\n    return this.http\n      .post(\n        this.establishmentsUrl,\n        establishment,\n        this.httpOptions\n      )\n      .pipe(\n        tap(newBooking => {\n          const currentValue = this.establishmentSubject.getValue();\n          this.establishmentSubject.next([...currentValue, newBooking]);\n        }),\n        catchError(this.handleError('insertEstablishment'))\n      );\n  }\n\n  updateEstablishment(\n    establishment: Establishment,\n    callback: (success: boolean) => void\n  ): void {\n    const url = `${this.establishmentsUrl}/${establishment.id}`;\n    this.http\n      .put(url, establishment, this.httpOptions)\n      .pipe(\n        tap(updatedUser => {\n          const currentValue = this.establishmentSubject.getValue();\n          const updatedUsers = currentValue.map(u =>\n            u.id === updatedUser.id ? updatedUser : u\n          );\n          this.establishmentSubject.next(updatedUsers);\n          callback(true);\n        }),\n        catchError(err => {\n          this.handleError(`UpdateEstablishment ${err.message}`);\n          callback(false);\n          return of(null);\n        })\n      )\n      .subscribe();\n  }\n\n  deleteEstablishment(id: number, callback: (success: boolean) => void): void {\n    const url = `${this.establishmentsUrl}/${id}`;\n    this.http\n      .delete(url, this.httpOptions)\n      .pipe(\n        tap(() => {\n          const currentValue = this.establishmentSubject.getValue();\n          const update = currentValue.filter(\n            establishment => establishment.id !== id\n          );\n          this.establishmentSubject.next(update);\n          callback(true);\n        }),\n        catchError(this.handleError('delete establishment'))\n      )\n      .subscribe({\n        error: err => {\n          console.error(err);\n          callback(false);\n        },\n      });\n  }\n\n  generateId(): number {\n    const establishments = ESTABLISHMENTS;\n    const id = this.memory.EstablishmentId(establishments);\n    return id;\n  }\n\n  private handleError(operation = 'operation', result?: T) {\n    return (error: unknown): Observable => {\n      console.error(`${operation} failed: ${error}`);\n      return of(result as T);\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterPayload.html":{"url":"interfaces/FilterPayload.html","title":"interface - FilterPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/session/vue/components/session-filter/session-filter.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/app/session/vue/components/session-filter/session-filter.component.ts:5\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { TrainingSession } from '@/app/session/domain/session';\nimport { SessionService } from '@/app/session/application/services/session.service';\n\nexport interface FilterPayload {\n  [key: string]: string;\n  type: string;\n  title: string;\n  date: string;\n}\n@Component({\n  selector: 'session-filter',\n  templateUrl: 'session-filter.component.html',\n  styleUrls: ['session-filter.component.scss'],\n})\nexport class SessionFilterComponent {\n  @Output() filterChange: EventEmitter =\n    new EventEmitter();\n\n  selectedType = '';\n  searchTitle = '';\n\n  sessionTypes: string[] = Object.values(TrainingSession);\n  selectedDate!: string;\n\n  constructor(private sessionService: SessionService) {}\n\n  filterSessions(): void {\n    const filterData: FilterPayload = {\n      type: this.selectedType ?? '',\n      title: this.searchTitle,\n      date: this.selectedDate ?? '',\n    };\n\n    for (const key in filterData) {\n      if (filterData[key] !== '') {\n        this.sessionService.isFilter = true;\n        break;\n      } else {\n        this.sessionService.isFilter = false;\n      }\n    }\n\n    this.filterChange.emit(filterData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormattedOpeningHour.html":{"url":"interfaces/FormattedOpeningHour.html","title":"interface - FormattedOpeningHour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FormattedOpeningHour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/establishment/domain/establishment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            formattedDayAndHours\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        formattedDayAndHours\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formattedDayAndHours:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OpeningHour } from '@/app/session/domain/session';\n\nexport interface Establishment {\n  nom: string;\n  address: string;\n  opening: string;\n  close: string;\n  imgUrl: string;\n  phoneNumber: string;\n  openingHours: Pick[];\n  id: number;\n}\n\nexport interface FormattedOpeningHour {\n  formattedDayAndHours: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component HomeComponent\nCe composant affiche une liste des établissements sur la page d'accueil de l'application.\nLes établissements sont importés à partir d'un mock et sont de type Establishment.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                establishments\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        establishments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Establishment[]\n\n                    \n                \n                \n                    \n                        Default value : ESTABLISHMENTS\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:32\n                        \n                    \n\n            \n                \n                    Liste des établissements affichés sur la page d'accueil.\nLes données sont importées à partir d'un fichier mock.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ESTABLISHMENTS } from '@/app/establishment/mock/mock-establishment';\nimport { Establishment } from '@/app/establishment/domain/establishment';\n\n/**\n * Component HomeComponent\n *\n * Ce composant affiche une liste des établissements sur la page d'accueil de l'application.\n * Les établissements sont importés à partir d'un mock et sont de type Establishment.\n *\n * @Component\n */\n@Component({\n  /**\n   * Le sélecteur 'app-home' permet d'insérer ce composant dans une page HTML en utilisant .\n   */\n  selector: 'app-home',\n  /**\n   * Chemin vers le fichier HTML qui contient le template pour ce composant.\n   */\n  templateUrl: './home.component.html',\n  /**\n   * Chemin vers le fichier CSS qui contient les styles pour ce composant.\n   */\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {\n  /**\n   * Liste des établissements affichés sur la page d'accueil.\n   * Les données sont importées à partir d'un fichier mock.\n   */\n  establishments: Establishment[] = ESTABLISHMENTS;\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                :host {\n  height: 100%;\n}\n\n.mat-toolbar-row {\n  justify-content: space-between;\n}\n\n.content {\n  width: 80%;\n  margin-top: 20px;\n}\n\n.example-card {\n  max-width: 400px;\n  margin: 20px;\n}\n\n.example-header-image {\n  background-image: url('https://images.unsplash.com/photo-1505250469679-203ad9ced0cb');\n  background-size: cover;\n}\n\n.hero-container {\n  height: 300px;\n  background-image: url(../../assets/pictures/Fit.png);\n  background-size: cover;\n  background-position: center center;\n  position: relative;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nEstablishmentModule\n\nEstablishmentModule\n\nHomeModule -->\n\nEstablishmentModule->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nSessionModule\n\nSessionModule\n\nHomeModule -->\n\nSessionModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module HomeModule\nCe module fournit le composant Home et les routes associées.\nIl importe également les modules nécessaires, comme les modules Material pour les composants d'interface utilisateur, et le module HomeRoutingModule pour le routage.\nLe module SessionModule pour gérer les sessions et le module EstablishmentModule pour gérer les établissements sont également importés.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EstablishmentModule\n                        \n                        \n                            HomeRoutingModule\n                        \n                        \n                            HomeRoutingModule\n                        \n                        \n                            SessionModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { EstablishmentModule } from '../establishment/establishment.module';\nimport { HomeComponent } from '@/app/home/home.component';\nimport { HomeRoutingModule } from '@/app/home/home-routing.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { NgModule } from '@angular/core';\nimport { SessionModule } from '@/app/session/session.module';\n\n/**\n * Module HomeModule\n *\n * Ce module fournit le composant Home et les routes associées.\n * Il importe également les modules nécessaires, comme les modules Material pour les composants d'interface utilisateur, et le module HomeRoutingModule pour le routage.\n * Le module SessionModule pour gérer les sessions et le module EstablishmentModule pour gérer les établissements sont également importés.\n *\n * @NgModule\n */\n@NgModule({\n  /**\n   * Les composants déclarés par ce module. Le seul composant est HomeComponent.\n   */\n  declarations: [HomeComponent],\n  /**\n   * Les modules importés par ce module. Cela inclut les modules nécessaires pour les composants d'interface utilisateur, le module HomeRoutingModule pour le routage,\n   * le module SessionModule pour la gestion des sessions et le module EstablishmentModule pour la gestion des établissements.\n   */\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    MatIconModule,\n    MatButtonModule,\n    MatListModule,\n    MatCardModule,\n    HomeRoutingModule,\n    SessionModule,\n    EstablishmentModule,\n  ],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from '@/app/home/home.component';\nimport { NgModule } from '@angular/core';\nimport { SessionDetailComponent } from '@/app/session/vue/containers/session-detail/session-detail.component';\nimport { SessionEstablishmentListingPageComponent } from '@/app/session/vue/containers/session-listing-by-establishment-page/session-establishment-listing-page.component';\nimport { SessionsListingAllComponent } from '@/app/session/vue/containers/sessions-listing-all/sessions-listing-all.component';\n\n/**\n * Configuration des routes pour le module Home.\n * Inclut le routage vers HomeComponent et SessionDetailComponent.\n */\nconst routes: Routes = [\n  {\n    // Route vers le HomeComponent.\n    // C'est la route par défaut lorsque aucun chemin n'est spécifié.\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    // Route vers le SessionDetailComponent.\n    // Elle nécessite un paramètre id pour récupérer le détail de la session spécifiée.\n    path: 'detail/:id',\n    component: SessionDetailComponent,\n  },\n  {\n    path: 'establishment/:id',\n    component: SessionEstablishmentListingPageComponent,\n  },\n  {\n    path: 'all-session',\n    component: SessionsListingAllComponent,\n  },\n];\n\n/**\n * Module de gestion de routage au sein du module Home.\n *\n * @NgModule\n */\n@NgModule({\n  /**\n   * Importe le RouterModule et le configure avec les routes en une seule étape en appelant RouterModule.forChild().\n   * La méthode est appelée forChild() car elle configure le routeur au niveau enfant.\n   */\n  imports: [RouterModule.forChild(routes)],\n  /**\n   * L'exportation de RouterModule rend les directives de routage disponibles pour une utilisation dans les composants du module Home.\n   */\n  exports: [RouterModule],\n})\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InMemoryDataService.html":{"url":"injectables/InMemoryDataService.html","title":"injectable - InMemoryDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InMemoryDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/in-memory-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service qui imite une interface d'API REST avec une base de données en mémoire.\nCe service est utilisé pour simuler une API lors du développement de l'application.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bookingId\n                            \n                            \n                                createDb\n                            \n                            \n                                EstablishmentId\n                            \n                            \n                                genId\n                            \n                            \n                                sessionId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bookingId\n                        \n                    \n                \n            \n            \n                \nbookingId(booking: Booking[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/in-memory-data.service.ts:58\n                \n            \n\n\n            \n                \n                    Génère un ID unique pour une nouvelle réservation.\nSi la collection des réservations est vide, renvoie 1.\nSinon, renvoie l'ID le plus élevé + 1.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                Booking[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nLa collection des réservations\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Le nouvel ID généré.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createDb\n                        \n                    \n                \n            \n            \n                \ncreateDb()\n                \n            \n\n\n            \n                \n                    Defined in src/app/in-memory-data.service.ts:26\n                \n            \n\n\n            \n                \n                    Crée et renvoie une base de données en mémoire.\n\n\n                    \n                    \n                    \n                        Returns :     { users: any; establishments: any; bookings: any; sessions: {}; }\n\n                    \n                    \n                        Un objet qui contient des collections d'utilisateurs et d'établissements.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EstablishmentId\n                        \n                    \n                \n            \n            \n                \nEstablishmentId(Establishments: Establishment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/in-memory-data.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Establishments\n                                    \n                                                Establishment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genId\n                        \n                    \n                \n            \n            \n                \ngenId(users: User[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/in-memory-data.service.ts:41\n                \n            \n\n\n            \n                \n                    Génère un ID unique pour un nouvel utilisateur.\nSi la collection d'utilisateurs est vide, renvoie 1.\nSinon, renvoie l'ID le plus élevé + 1.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    users\n                                    \n                                                User[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nLa collection d'utilisateurs\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Le nouvel ID généré.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessionId\n                        \n                    \n                \n            \n            \n                \nsessionId(sessions: Session[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/in-memory-data.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sessions\n                                    \n                                                Session[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BOOKINGS } from '@/app/booking/mock/mock-booking';\nimport { Booking } from './booking/domain/booking';\nimport { ESTABLISHMENTS } from './establishment/mock/mock-establishment';\nimport { Establishment } from './establishment/domain/establishment';\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Injectable } from '@angular/core';\nimport { USERS } from '@/app/user/mock/mock-users';\nimport { User } from '@/app/user/domain/user';\nimport { Session } from '@/app/session/domain/session';\nimport { sessionsMock } from '@/app/session/mock/mock-session';\n\n/**\n * Service qui imite une interface d'API REST avec une base de données en mémoire.\n * Ce service est utilisé pour simuler une API lors du développement de l'application.\n *\n * @Injectable\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  /**\n   * Crée et renvoie une base de données en mémoire.\n   * @returns Un objet qui contient des collections d'utilisateurs et d'établissements.\n   */\n  createDb() {\n    const users = USERS;\n    const sessions: Session[] = sessionsMock;\n    const bookings = BOOKINGS;\n    const establishments = ESTABLISHMENTS;\n    return { users, establishments, bookings, sessions };\n  }\n\n  /**\n   * Génère un ID unique pour un nouvel utilisateur.\n   * Si la collection d'utilisateurs est vide, renvoie 1.\n   * Sinon, renvoie l'ID le plus élevé + 1.\n   * @param users - La collection d'utilisateurs\n   * @returns Le nouvel ID généré.\n   */\n  genId(users: User[]): number {\n    return users.length > 0 ? Math.max(...users.map(hero => hero.id)) + 1 : 1;\n  }\n\n  EstablishmentId(Establishments: Establishment[]): number {\n    return Establishments.length > 0\n      ? Math.max(...Establishments.map(hero => hero.id)) + 1\n      : 1;\n  }\n\n  /**\n   * Génère un ID unique pour une nouvelle réservation.\n   * Si la collection des réservations est vide, renvoie 1.\n   * Sinon, renvoie l'ID le plus élevé + 1.\n   * @param booking - La collection des réservations\n   * @returns Le nouvel ID généré.\n   */\n  bookingId(booking: Booking[]): number {\n    return booking.length > 0\n      ? Math.max(...booking.map(hero => hero.id as number)) + 1\n      : 1;\n  }\n\n  sessionId(sessions: Session[]): number {\n    return sessions.length > 0\n      ? Math.max(...sessions.map(hero => hero.id)) + 1\n      : 1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/application/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Composant permettant à l'utilisateur de se connecter à l'application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/application/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                            Construit une instance de LoginComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nPermet de construire le groupe de formulaires.\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService d'authentification.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter d'Angular pour naviguer entre les pages.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/login/login.component.ts:47\n                \n            \n\n\n            \n                \n                    Méthode exécutée lors de la soumission du formulaire de connexion.\nSi le formulaire est valide, elle appelle le service d'authentification pour connecter l'utilisateur,\npuis navigue vers la page d'accueil.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/application/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/application/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import * as bcrypt from 'bcryptjs';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { filter, head } from 'lodash';\n\nimport { AuthService } from '@/app/auth/application/services/auth.service';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '@/app/user/domain/user';\nimport get from 'lodash/get';\n\n/**\n * Composant permettant à l'utilisateur de se connecter à l'application.\n * @selector 'app-login'\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  isLoading = false;\n  loginForm: FormGroup;\n\n  /**\n   * Construit une instance de LoginComponent.\n   * @param {FormBuilder} formBuilder - Permet de construire le groupe de formulaires.\n   * @param {AuthService} authService - Service d'authentification.\n   * @param {Router} router - Router d'Angular pour naviguer entre les pages.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  /**\n   * Méthode exécutée lors de la soumission du formulaire de connexion.\n   * Si le formulaire est valide, elle appelle le service d'authentification pour connecter l'utilisateur,\n   * puis navigue vers la page d'accueil.\n   */\n  onLogin() {\n    if (this.loginForm.valid) {\n      this.isLoading = true;\n\n      const userName: string = get(this.loginForm.value, 'username');\n      const password: string = get(this.loginForm.value, 'password');\n      this.authService.login(userName).subscribe((user: any) => {\n        const userToLogged = filter(user, u => {\n          const userPassword: string = get(u, 'password');\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          const isUserPasswordRight = bcrypt.compareSync(\n            password,\n            userPassword\n          );\n          return isUserPasswordRight;\n        });\n        const loggedUser: User = head(userToLogged);\n        this.authService.setCurrentUser(loggedUser);\n        const token = this.authService.generateToken(loggedUser);\n        localStorage.setItem('app_token', token);\n        void this.router.navigateByUrl('/');\n        this.isLoading = false;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  Connexion\n\n  \n    \n      \n        Nom d'utilisateur\n        \n      \n      \n        Mot de passe\n        \n      \n      \n        \n      \n      \n        \n          Se connecter\n        \n      \n    \n\n    \n      \n        Vous n'avez pas de compte ?\n        Créer un compte\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                mat-card {\n  width: 100%;\n  max-width: 800px;\n  margin: 2em auto;\n  padding: 8em;\n\n  mat-card-title {\n    margin-bottom: 20px;\n  }\n\n  mat-form-field {\n    width: 100%;\n    margin-bottom: 1em;\n  }\n\n  button,\n  mat-spinner {\n    display: block;\n    margin: auto;\n  }\n\n  button {\n    width: 55%;\n  }\n}\n\n.link {\n  margin-top: 15px;\n  text-align: center;\n\n  p {\n    font-size: 14px;\n  }\n\n  a {\n    color: blue;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Connexion                    Nom d\\'utilisateur                            Mot de passe                                                          Se connecter                                    Vous n\\'avez pas de compte ?        Créer un compte            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginModule.html":{"url":"modules/LoginModule.html","title":"module - LoginModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_providers\n\n\n\ncluster_LoginModule_declarations\n\n\n\ncluster_LoginModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nLoginComponent->LoginModule\n\n\n\n\n\nLoginRoutingModule\n\nLoginRoutingModule\n\nLoginModule -->\n\nLoginRoutingModule->LoginModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nLoginModule -->\n\nAuthService->LoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/application/login/login.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Ce module fournit tous les composants et services nécessaires pour le processus de connexion.\nIl importe également les modules nécessaires pour l'interface utilisateur du formulaire de connexion.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthService } from '@/app/auth/application/services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from '@/app/auth/application/login/login.component';\nimport { LoginRoutingModule } from '@/app/auth/application/login/login-routing.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n/**\n * Ce module fournit tous les composants et services nécessaires pour le processus de connexion.\n * Il importe également les modules nécessaires pour l'interface utilisateur du formulaire de connexion.\n */\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    LoginRoutingModule,\n  ],\n  providers: [AuthService],\n})\nexport class LoginModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginRoutingModule.html":{"url":"modules/LoginRoutingModule.html","title":"module - LoginRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/application/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\nimport { NgModule } from '@angular/core';\n\n/**\n * Définit les routes pour le module de connexion.\n * @type {Routes}\n */\nconst routes: Routes = [{ path: 'login', component: LoginComponent }];\n\n/**\n * Ce module fournit la configuration de routage pour le composant de connexion.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpeningHour.html":{"url":"interfaces/OpeningHour.html","title":"interface - OpeningHour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpeningHour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/session/domain/session.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface décrivant les heures d'ouverture d'une Session.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            availablePlace\n                                        \n                                \n                                \n                                        \n                                            dayOfWeek\n                                        \n                                \n                                \n                                        \n                                            endTime\n                                        \n                                \n                                \n                                        \n                                            fullDate\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availablePlace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availablePlace:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre de place\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dayOfWeek\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dayOfWeek:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Le jour de la semaine.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    L'heure de fin.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    La date complète.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    L'heure de début.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Session {\n  /** L'identifiant unique de la Session. */\n  id: number;\n\n  /** L'identifiant unique de l'établissement associé. */\n  establishmentId?: number;\n\n  /** Le titre de la Session. */\n  title: string;\n\n  /** La description de la Session. */\n  description: string;\n\n  /** L'URL de l'image associée à la Session. */\n  imageUrl?: string;\n\n  /** Le type de la Session, défini par l'énumération TrainingSession. */\n  type: TrainingSession;\n\n  /** Les heures d'ouverture pour cette Session. */\n  openingHours: OpeningHour[];\n}\n\n/**\n * Interface décrivant les heures d'ouverture d'une Session.\n */\nexport interface OpeningHour {\n  /** Le jour de la semaine. */\n  dayOfWeek: string;\n\n  /** L'heure de début. */\n  startTime: string;\n\n  /** L'heure de fin. */\n  endTime: string;\n\n  /** La date complète. */\n  fullDate: number;\n\n  /** Nombre de place*/\n  availablePlace: number;\n}\n\n/**\n * Enumération des différents types de Sessions.\n */\nexport enum TrainingSession {\n  /** Session d'entraînement cardiovasculaire. */\n  CARDIO = 'Entraînement cardiovasculaire',\n\n  /** Session d'entraînement en force. */\n  STRENGTH = 'Entraînement en force',\n\n  /** Session d'entraînement en groupe. */\n  GROUP = 'Entraînement en groupe',\n\n  /** Session de Yoga ou Pilates. */\n  YOGA = 'Yoga ou Pilates',\n\n  /** Session d'entraînement fonctionnel. */\n  FUNCTIONAL = 'Entraînement fonctionnel',\n\n  /** Session d'entraînement en plein air. */\n  OUTDOOR = 'Entraînement en plein air',\n}\n\n/**\n * Objet contenant les chemins d'accès aux images pour chaque type de Session.\n */\nexport const TrainingSessionImages = {\n  /** Chemin d'accès à l'image pour le cardio. */\n  CARDIO: 'assets/pictures/cardio.jpeg',\n\n  /** Chemin d'accès à l'image pour l'entraînement en force. */\n  STRENGTH: 'assets/pictures/strength.jpeg',\n\n  /** Chemin d'accès à l'image pour l'entraînement en groupe. */\n  GROUP: 'assets/pictures/group.gif',\n\n  /** Chemin d'accès à l'image pour le yoga. */\n  YOGA: 'assets/pictures/yoga.jpeg',\n\n  /** Chemin d'accès à l'image pour l'entraînement fonctionnel. */\n  FUNCTIONAL: 'assets/pictures/functional.jpeg',\n\n  /** Chemin d'accès à l'image pour l'entraînement en plein air. */\n  OUTDOOR: 'assets/pictures/outdoor.jpg',\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/application/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Ce composant implémente le formulaire d'inscription de l'application.\nIl utilise le service UserFacadeService pour ajouter de nouveaux utilisateurs et naviguer vers la page de connexion.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPassword\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRegister\n                            \n                            \n                                    Private\n                                passwordMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, userService: UserFacadeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/application/register/register.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkPassword\n                        \n                    \n                \n            \n            \n                \ncheckPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/register/register.component.ts:81\n                \n            \n\n\n            \n                \n                    Vérifie si les mots de passe saisis dans les champs \"password\" et \"confirmPassword\" correspondent.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/register/register.component.ts:42\n                \n            \n\n\n            \n                \n                    Initialise le formulaire d'inscription et abonne les changements de valeur aux champs de mot de passe.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRegister\n                        \n                    \n                \n            \n            \n                \nonRegister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/register/register.component.ts:90\n                \n            \n\n\n            \n                \n                    Exécute le processus d'inscription.\nSi le formulaire est valide, il hache le mot de passe, génère un identifiant pour le nouvel utilisateur,\ncrée un objet utilisateur et utilise le service UserFacadeService pour ajouter le nouvel utilisateur.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        passwordMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordMatch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/application/register/register.component.ts:66\n                \n            \n\n\n            \n                \n                    Vérifie si les mots de passe saisis dans les champs \"password\" et \"confirmPassword\" correspondent.\nSi les mots de passe ne correspondent pas, une erreur est définie sur le champ \"confirmPassword\".\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/application/register/register.component.ts:31\n                        \n                    \n\n            \n                \n                    Indicateur de chargement de la page d'inscription\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/application/register/register.component.ts:26\n                        \n                    \n\n            \n                \n                    Le formulaire d'inscription\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import * as bcrypt from 'bcryptjs';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserFacadeService } from '@/app/user/application/facade/user-facade.service';\nimport get from 'lodash/get';\n\n/**\n * Ce composant implémente le formulaire d'inscription de l'application.\n * Il utilise le service `UserFacadeService` pour ajouter de nouveaux utilisateurs et naviguer vers la page de connexion.\n *\n * @example\n * \n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent {\n  /**\n   * Le formulaire d'inscription\n   */\n  registerForm!: FormGroup;\n\n  /**\n   * Indicateur de chargement de la page d'inscription\n   */\n  isLoading = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private userService: UserFacadeService\n  ) {}\n\n  /**\n   * Initialise le formulaire d'inscription et abonne les changements de valeur aux champs de mot de passe.\n   */\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      userName: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    });\n\n    this.registerForm.controls['password'].valueChanges.subscribe(() => {\n      this.checkPassword();\n    });\n\n    this.registerForm.controls['confirmPassword'].valueChanges.subscribe(() => {\n      this.checkPassword();\n    });\n  }\n\n  /**\n   * Vérifie si les mots de passe saisis dans les champs \"password\" et \"confirmPassword\" correspondent.\n   * Si les mots de passe ne correspondent pas, une erreur est définie sur le champ \"confirmPassword\".\n   * @private\n   */\n  private passwordMatch() {\n    const password = this.registerForm.get('password')?.value;\n    const confirmPassword = this.registerForm.get('confirmPassword')?.value;\n    if (password !== confirmPassword) {\n      this.registerForm\n        .get('confirmPassword')\n        ?.setErrors({ passwordDoesNotMatch: true });\n    } else {\n      this.registerForm.get('confirmPassword')?.setErrors(null);\n    }\n  }\n\n  /**\n   * Vérifie si les mots de passe saisis dans les champs \"password\" et \"confirmPassword\" correspondent.\n   */\n  checkPassword() {\n    this.passwordMatch();\n  }\n\n  /**\n   * Exécute le processus d'inscription.\n   * Si le formulaire est valide, il hache le mot de passe, génère un identifiant pour le nouvel utilisateur,\n   * crée un objet utilisateur et utilise le service `UserFacadeService` pour ajouter le nouvel utilisateur.\n   */\n  onRegister() {\n    const salt = bcrypt.genSaltSync(10);\n    if (this.registerForm.valid) {\n      this.isLoading = true;\n\n      const id: number = this.userService.generateId();\n      const userName: string = get(this.registerForm.value, 'userName');\n      const firstName: string = get(this.registerForm.value, 'firstName');\n      const lastName: string = get(this.registerForm.value, 'lastName');\n      const email: string = get(this.registerForm.value, 'email');\n      const plainPassword: string = get(this.registerForm.value, 'password');\n      const password: string = bcrypt.hashSync(plainPassword, salt);\n      const roles = ['user'];\n      const user = {\n        id,\n        userName,\n        firstName,\n        lastName,\n        email,\n        password,\n        roles,\n      };\n      this.userService.addUser(user).subscribe(() => {\n        void this.router.navigateByUrl('/login');\n        this.isLoading = false;\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Inscription\n    \n      \n        \n          Nom d'utilisateur\n          \n        \n\n        \n          Prénom\n          \n        \n\n        \n          Nom de famille\n          \n        \n\n        \n          Email\n          \n        \n\n        \n          Mot de passe\n          \n        \n\n        \n          Confirmer le mot de passe\n          \n          \n            Les mots de passe ne correspondent pas.\n          \n        \n\n        \n          \n        \n        \n          \n            Créer un compte\n          \n        \n\n        \n          Vous avez déjà un compte ? Se connecter\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                .centered-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  padding: 2vh 0;\n  background-color: whitesmoke;\n\n  mat-card {\n    width: 100%;\n    max-width: 800px;\n    margin: auto;\n    padding: 5rem;\n  }\n\n  mat-card-title {\n    margin-bottom: 20px;\n  }\n\n  mat-form-field {\n    width: 100%;\n  }\n\n  button,\n  mat-spinner {\n    display: block;\n    margin: auto;\n  }\n\n  button {\n    margin-top: 1rem;\n    width: 55%;\n  }\n}\n\n.link {\n  margin-top: 15px;\n  text-align: center;\n\n  p {\n    font-size: 14px;\n  }\n\n  a {\n    color: blue;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Inscription                            Nom d\\'utilisateur                                    Prénom                                    Nom de famille                                    Email                                    Mot de passe                                    Confirmer le mot de passe                                Les mots de passe ne correspondent pas.                                                                          Créer un compte                                    Vous avez déjà un compte ? Se connecter                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterModule.html":{"url":"modules/RegisterModule.html","title":"module - RegisterModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegisterModule\n\n\n\ncluster_RegisterModule_imports\n\n\n\ncluster_RegisterModule_declarations\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\n\n\nRegisterModule\n\nRegisterModule\n\nRegisterModule -->\n\nRegisterComponent->RegisterModule\n\n\n\n\n\nRegisterRoutingModule\n\nRegisterRoutingModule\n\nRegisterModule -->\n\nRegisterRoutingModule->RegisterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/application/register/register.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Ce module définit le composant d'inscription et les dépendances nécessaires pour le formulaire d'inscription.\nIl importe également le module RegisterRoutingModule pour le routage associé à l'inscription.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegisterRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from '@/app/auth/application/register/register.component';\nimport { RegisterRoutingModule } from '@/app/auth/application/register/register-routing.module';\n\n/**\n * Ce module définit le composant d'inscription et les dépendances nécessaires pour le formulaire d'inscription.\n * Il importe également le module `RegisterRoutingModule` pour le routage associé à l'inscription.\n */\n@NgModule({\n  declarations: [RegisterComponent],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    ReactiveFormsModule,\n    RegisterRoutingModule,\n  ],\n})\nexport class RegisterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterRoutingModule.html":{"url":"modules/RegisterRoutingModule.html","title":"module - RegisterRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/application/register/register-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\n\nimport { NgModule } from '@angular/core';\nimport { RegisterComponent } from '@/app/auth/application/register/register.component';\n\n/**\n * Définit les routes pour le module d'inscription.\n * @type {Routes}\n */\nconst routes: Routes = [{ path: 'register', component: RegisterComponent }];\n\n/**\n * Ce module fournit la configuration de routage pour le composant d'inscription.\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session.html":{"url":"interfaces/Session.html","title":"interface - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/session/domain/session.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface décrivant une Session de formation.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            establishmentId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                        \n                                            openingHours\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    La description de la Session.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        establishmentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        establishmentId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    L'identifiant unique de l'établissement associé.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    L'identifiant unique de la Session.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    L'URL de l'image associée à la Session.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        openingHours\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        openingHours:         OpeningHour[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OpeningHour[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Les heures d'ouverture pour cette Session.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Le titre de la Session.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         TrainingSession\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrainingSession\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Le type de la Session, défini par l'énumération TrainingSession.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Session {\n  /** L'identifiant unique de la Session. */\n  id: number;\n\n  /** L'identifiant unique de l'établissement associé. */\n  establishmentId?: number;\n\n  /** Le titre de la Session. */\n  title: string;\n\n  /** La description de la Session. */\n  description: string;\n\n  /** L'URL de l'image associée à la Session. */\n  imageUrl?: string;\n\n  /** Le type de la Session, défini par l'énumération TrainingSession. */\n  type: TrainingSession;\n\n  /** Les heures d'ouverture pour cette Session. */\n  openingHours: OpeningHour[];\n}\n\n/**\n * Interface décrivant les heures d'ouverture d'une Session.\n */\nexport interface OpeningHour {\n  /** Le jour de la semaine. */\n  dayOfWeek: string;\n\n  /** L'heure de début. */\n  startTime: string;\n\n  /** L'heure de fin. */\n  endTime: string;\n\n  /** La date complète. */\n  fullDate: number;\n\n  /** Nombre de place*/\n  availablePlace: number;\n}\n\n/**\n * Enumération des différents types de Sessions.\n */\nexport enum TrainingSession {\n  /** Session d'entraînement cardiovasculaire. */\n  CARDIO = 'Entraînement cardiovasculaire',\n\n  /** Session d'entraînement en force. */\n  STRENGTH = 'Entraînement en force',\n\n  /** Session d'entraînement en groupe. */\n  GROUP = 'Entraînement en groupe',\n\n  /** Session de Yoga ou Pilates. */\n  YOGA = 'Yoga ou Pilates',\n\n  /** Session d'entraînement fonctionnel. */\n  FUNCTIONAL = 'Entraînement fonctionnel',\n\n  /** Session d'entraînement en plein air. */\n  OUTDOOR = 'Entraînement en plein air',\n}\n\n/**\n * Objet contenant les chemins d'accès aux images pour chaque type de Session.\n */\nexport const TrainingSessionImages = {\n  /** Chemin d'accès à l'image pour le cardio. */\n  CARDIO: 'assets/pictures/cardio.jpeg',\n\n  /** Chemin d'accès à l'image pour l'entraînement en force. */\n  STRENGTH: 'assets/pictures/strength.jpeg',\n\n  /** Chemin d'accès à l'image pour l'entraînement en groupe. */\n  GROUP: 'assets/pictures/group.gif',\n\n  /** Chemin d'accès à l'image pour le yoga. */\n  YOGA: 'assets/pictures/yoga.jpeg',\n\n  /** Chemin d'accès à l'image pour l'entraînement fonctionnel. */\n  FUNCTIONAL: 'assets/pictures/functional.jpeg',\n\n  /** Chemin d'accès à l'image pour l'entraînement en plein air. */\n  OUTDOOR: 'assets/pictures/outdoor.jpg',\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionComponent.html":{"url":"components/SessionComponent.html","title":"component - SessionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/session/vue/components/session/session.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                session\n            \n\n\n\n            \n                styleUrls\n                session.component.scss\n            \n\n\n\n            \n                templateUrl\n                session.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sessionService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isSessionOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                session\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/session/vue/components/session/session.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        session\n                    \n                \n                \n                    \n                        Type :         Session\n\n                    \n                \n                \n                    \n                        Default value : {} as Session\n                    \n                \n                        \n                            \n                                    Defined in src/app/session/vue/components/session/session.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isSessionOpen\n                        \n                    \n                \n            \n            \n                \nisSessionOpen(session: Session)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/vue/components/session/session.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                Session\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sessionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SessionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/components/session/session.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { Session } from '@/app/session/domain/session';\nimport { SessionService } from '@/app/session/application/services/session.service';\n\n@Component({\n  selector: 'session',\n  templateUrl: 'session.component.html',\n  styleUrls: ['session.component.scss'],\n})\nexport class SessionComponent {\n  @Input() session: Session = {} as Session;\n\n  constructor(public sessionService: SessionService) {}\n\n  isSessionOpen(session: Session): boolean {\n    const currentDate = new Date();\n    const currentDay = currentDate.getDay();\n    const currentTime = currentDate.toLocaleTimeString('fr-FR', {\n      hour: 'numeric',\n      minute: 'numeric',\n    });\n\n    const openingHours = session.openingHours.find(\n      openingHour => new Date(openingHour.fullDate).getDay() === currentDay\n    );\n\n    if (!openingHours) {\n      return false; // Session non planifiée pour le jour actuel\n    }\n\n    return (\n      currentTime >= openingHours.startTime &&\n      currentTime \n    \n\n    \n        \n  \n    \n    \n      \n        {{ session.title }}\n      \n      {{ session.description }}\n    \n    \n      \n        {{ isSessionOpen(session) ? 'Ouvert' : 'Fermé' }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    session.component.scss\n                \n                .sessions-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  height: 100%;\n\n  .session-card {\n    display: flex;\n    flex-direction: column;\n    width: 300px;\n\n    mat-card-actions {\n      margin-top: auto; /* Pour placer le contenu en bas */\n    }\n\n    .session-status {\n      display: inline-block;\n      padding: 4px 8px;\n      border-radius: 4px;\n      color: #fff;\n      font-weight: bold;\n      margin-top: auto; /* Pour placer le contenu en bas */\n    }\n\n    .open {\n      background-color: green;\n    }\n\n    .closed {\n      background-color: red;\n    }\n\n    .session-image {\n      width: 300px;\n      height: 200px;\n      object-fit: cover;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ session.title }}            {{ session.description }}                      {{ isSessionOpen(session) ? \\'Ouvert\\' : \\'Fermé\\' }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SessionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionDetailComponent.html":{"url":"components/SessionDetailComponent.html","title":"component - SessionDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/session/vue/containers/session-detail/session-detail.component.ts\n\n\n\n    \n        Description\n    \n    \n        L'utilisateur peut réserver une session à partir de cette page.\nLe composant met à jour le nombre de places disponibles après chaque réservation.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                session-detail\n            \n\n\n\n            \n                styleUrls\n                session-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                session-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allSessions\n                            \n                            \n                                booking$\n                            \n                            \n                                selectedDays\n                            \n                            \n                                session\n                            \n                            \n                                sessionId\n                            \n                            \n                                    Public\n                                sessionService\n                            \n                            \n                                userBookings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alreadyBooked\n                            \n                            \n                                decreaseAvailability\n                            \n                            \n                                isValidOpening\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBooking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, sessionService: SessionService, bookingService: BookingFacadeService, authService: AuthService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/session/vue/containers/session-detail/session-detail.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookingService\n                                                  \n                                                        \n                                                                        BookingFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        alreadyBooked\n                        \n                    \n                \n            \n            \n                \nalreadyBooked(userId: number, sessionId: number, bookedTime: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/vue/containers/session-detail/session-detail.component.ts:114\n                \n            \n\n\n            \n                \n                    Vérifie si l'utilisateur a déjà réservé la session.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'identifiant de l'utilisateur.\n\n                                    \n                                \n                                \n                                    sessionId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'identifiant de la session.\n\n                                    \n                                \n                                \n                                    bookedTime\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Le créneau horaire réservé.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Vrai si la session est déjà réservée, sinon faux.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseAvailability\n                        \n                    \n                \n            \n            \n                \ndecreaseAvailability(sessionId: number, bookedTime: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/vue/containers/session-detail/session-detail.component.ts:92\n                \n            \n\n\n            \n                \n                    Diminue la disponibilité d'une session.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sessionId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'identifiant de la session à réserver.\n\n                                    \n                                \n                                \n                                    bookedTime\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Le créneau horaire réservé.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidOpening\n                        \n                    \n                \n            \n            \n                \nisValidOpening()\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/vue/containers/session-detail/session-detail.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/vue/containers/session-detail/session-detail.component.ts:68\n                \n            \n\n\n            \n                \n                    Méthode ngOnInit, récupère les informations de la session à partir de l'identifiant.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBooking\n                        \n                    \n                \n            \n            \n                \nonBooking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/vue/containers/session-detail/session-detail.component.ts:138\n                \n            \n\n\n            \n                \n                    Gère la logique de réservation d'une session.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allSessions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Session[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/containers/session-detail/session-detail.component.ts:51\n                        \n                    \n\n            \n                \n                    Toutes les sessions disponibles.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        booking$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.bookingService.booking$\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/containers/session-detail/session-detail.component.ts:47\n                        \n                    \n\n            \n                \n                    Un flux d'informations de réservation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OpeningHour[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/containers/session-detail/session-detail.component.ts:43\n                        \n                    \n\n            \n                \n                    Les jours sélectionnés pour la réservation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        session\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Session\n\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/containers/session-detail/session-detail.component.ts:35\n                        \n                    \n\n            \n                \n                    La session en cours de consultation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/containers/session-detail/session-detail.component.ts:39\n                        \n                    \n\n            \n                \n                    L'identifiant de la session en cours de consultation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sessionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SessionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/containers/session-detail/session-detail.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userBookings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Booking[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/containers/session-detail/session-detail.component.ts:55\n                        \n                    \n\n            \n                \n                    Les réservations effectuées par l'utilisateur.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { OpeningHour, Session } from '@/app/session/domain/session';\n\nimport { AuthService } from '@/app/auth/application/services/auth.service';\nimport { Booking } from '@/app/booking/domain/booking';\nimport { BookingFacadeService } from '@/app/booking/application/facade/booking-facade.service';\nimport { SessionService } from '@/app/session/application/services/session.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { find } from 'lodash';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport parseInt from 'lodash/parseInt';\nimport { take } from 'rxjs';\n\n/**\n * @description Le composant SessionDetailComponent affiche les détails d'une session spécifique.\n * L'utilisateur peut réserver une session à partir de cette page.\n * Le composant met à jour le nombre de places disponibles après chaque réservation.\n *\n * @example\n * \n *\n * @selector session-detail\n */\n@Component({\n  selector: 'session-detail',\n  templateUrl: 'session-detail.component.html',\n  styleUrls: ['session-detail.component.scss'],\n})\nexport class SessionDetailComponent implements OnInit {\n  /**\n   * La session en cours de consultation.\n   */\n  session!: Session;\n  /**\n   * L'identifiant de la session en cours de consultation.\n   */\n  sessionId!: number;\n  /**\n   * Les jours sélectionnés pour la réservation.\n   */\n  selectedDays!: OpeningHour[];\n  /**\n   * Un flux d'informations de réservation.\n   */\n  booking$ = this.bookingService.booking$;\n  /**\n   * Toutes les sessions disponibles.\n   */\n  allSessions: Session[] = [];\n  /**\n   * Les réservations effectuées par l'utilisateur.\n   */\n  userBookings: Booking[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    public sessionService: SessionService,\n    private bookingService: BookingFacadeService,\n    private authService: AuthService,\n    private toastr: ToastrService\n  ) {}\n\n  /**\n   * Méthode ngOnInit, récupère les informations de la session à partir de l'identifiant.\n   */\n  ngOnInit(): void {\n    this.route.params.subscribe(param => {\n      const id: string = get(param, 'id');\n      this.sessionId = parseInt(id);\n      this.session = this.sessionService.getSessionById(this.sessionId);\n\n      this.session.openingHours = this.sessionService.validOpenings(\n        this.session.openingHours\n      );\n\n      this.sessionService.sessionsAsObservable.subscribe(\n        sessions => (this.allSessions = sessions)\n      );\n    });\n\n    this.selectedDays = [this.session.openingHours[0]];\n  }\n\n  /**\n   * Diminue la disponibilité d'une session.\n   *\n   * @param sessionId L'identifiant de la session à réserver.\n   * @param bookedTime Le créneau horaire réservé.\n   */\n  decreaseAvailability(sessionId: number, bookedTime: any) {\n    const sessionToBook = find(this.allSessions, session =>\n      isEqual(session.id, sessionId)\n    );\n    if (sessionToBook) {\n      const timeSlot = sessionToBook.openingHours.find(time =>\n        isEqual(time, bookedTime)\n      );\n      if (timeSlot && timeSlot.availablePlace > 0) {\n        timeSlot.availablePlace--;\n      }\n    }\n  }\n\n  /**\n   * Vérifie si l'utilisateur a déjà réservé la session.\n   *\n   * @param userId L'identifiant de l'utilisateur.\n   * @param sessionId L'identifiant de la session.\n   * @param bookedTime Le créneau horaire réservé.\n   * @returns Vrai si la session est déjà réservée, sinon faux.\n   */\n  alreadyBooked(userId: number, sessionId: number, bookedTime: any): boolean {\n    this.booking$.subscribe(booking => {\n      const bookings = booking.filter(b => b.userId === userId);\n\n      if (!bookings.length) {\n        return;\n      }\n      this.userBookings = bookings;\n    });\n\n    if (this.userBookings) {\n      const sessionAlreadyBooked = this.userBookings.find(\n        booking =>\n          booking.sessionId === sessionId &&\n          isEqual(booking.timeBook, bookedTime)\n      );\n      return sessionAlreadyBooked !== undefined;\n    }\n    return false;\n  }\n\n  /**\n   * Gère la logique de réservation d'une session.\n   */\n  onBooking() {\n    const user = this.authService.getUser();\n    if (!user) {\n      this.toastr.error(\n        'Vous devez être connecté pour faire une réservation',\n        'Erreur'\n      );\n      return;\n    }\n\n    const book: Booking = {\n      timeBook: this.selectedDays,\n      sessionId: this.sessionId,\n      userId: user.id,\n    };\n\n    if (this.alreadyBooked(book.userId, book.sessionId, book.timeBook)) {\n      this.toastr.error('Vous avez déjà réservé ce créneau', 'Erreur');\n      return;\n    }\n\n    this.bookingService.insertBooking(book).subscribe(\n      () => {\n        this.sessionService.sessionsAsObservable\n          .pipe(take(1))\n          .subscribe(sessions => {\n            const sessionBooking = sessions.find(\n              session => session.id === this.sessionId\n            );\n            if (sessionBooking) {\n              this.decreaseAvailability(book.sessionId, book.timeBook);\n              this.sessionService.updateSession(sessionBooking);\n              this.toastr.success('Réservation réussie!', 'Succès');\n            }\n          });\n      },\n      error => {\n        console.error('Erreur lors de la réservation :', error);\n        this.toastr.error('Erreur lors de la réservation', 'Erreur');\n      }\n    );\n  }\n\n  isValidOpening() {\n    return (\n      this.sessionService.validOpenings(this.session.openingHours).length > 0\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      {{ session.title }}\n      {{ session.description }}\n    \n\n    Disponibilité(s)\n    \n      Aucune disponibilité\n    \n    \n      \n        \n          \n            {{ availability.dayOfWeek }} -\n            {{ availability.fullDate | date : 'dd/MM/yyyy' }} ,\n            {{ availability.startTime }} à {{ availability.endTime }}\n          \n        \n      \n\n      \n        Réserver\n      \n    \n  \n\n\n    \n\n    \n                \n                    session-detail.component.scss\n                \n                .session-details {\n  display: flex;\n  justify-content: center;\n  .session-card {\n    max-width: 800px;\n    width: 100%;\n    margin: 20px;\n\n    .session-availability {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      mat-form-field {\n        width: 350px;\n      }\n    }\n\n    .session-image {\n      width: 100%;\n      max-height: 300px;\n      object-fit: cover;\n      margin-bottom: 10px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ session.title }}      {{ session.description }}        Disponibilité(s)          Aucune disponibilité                                            {{ availability.dayOfWeek }} -            {{ availability.fullDate | date : \\'dd/MM/yyyy\\' }} ,            {{ availability.startTime }} à {{ availability.endTime }}                                      Réserver            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SessionDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionEstablishmentListingPageComponent.html":{"url":"components/SessionEstablishmentListingPageComponent.html","title":"component - SessionEstablishmentListingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionEstablishmentListingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/session/vue/containers/session-listing-by-establishment-page/session-establishment-listing-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                session-listing\n            \n\n\n\n            \n                styleUrls\n                session-establishment-listing-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                session-establishment-listing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allSessionsByEstablishment\n                            \n                            \n                                sessions\n                            \n                            \n                                sessionsByEstablishment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isSessionOpenOnDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilterChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionService, route: ActivatedRoute, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/session/vue/containers/session-listing-by-establishment-page/session-establishment-listing-page.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isSessionOpenOnDate\n                        \n                    \n                \n            \n            \n                \nisSessionOpenOnDate(session: Session, date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/vue/containers/session-listing-by-establishment-page/session-establishment-listing-page.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                Session\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/vue/containers/session-listing-by-establishment-page/session-establishment-listing-page.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterChange\n                        \n                    \n                \n            \n            \n                \nonFilterChange(event: FilterPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/vue/containers/session-listing-by-establishment-page/session-establishment-listing-page.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                FilterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allSessionsByEstablishment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     sessionByEstablishment[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/containers/session-listing-by-establishment-page/session-establishment-listing-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : sessionsMock\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/containers/session-listing-by-establishment-page/session-establishment-listing-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessionsByEstablishment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         sessionByEstablishment\n\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/containers/session-listing-by-establishment-page/session-establishment-listing-page.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport {\n  SessionService,\n  sessionByEstablishment,\n} from '@/app/session/application/services/session.service';\n\nimport { ActivatedRoute } from '@angular/router';\nimport { FilterPayload } from '@/app/session/vue/components/session-filter/session-filter.component';\nimport { Session } from '@/app/session/domain/session';\nimport get from 'lodash/get';\nimport parseInt from 'lodash/parseInt';\nimport { sessionsMock } from '@/app/session/mock/mock-session';\n\n@Component({\n  selector: 'session-listing',\n  templateUrl: 'session-establishment-listing-page.component.html',\n  styleUrls: ['session-establishment-listing-page.component.scss'],\n})\nexport class SessionEstablishmentListingPageComponent implements OnInit {\n  sessions = sessionsMock;\n  sessionsByEstablishment!: sessionByEstablishment;\n  allSessionsByEstablishment!: sessionByEstablishment[];\n\n  constructor(\n    private sessionService: SessionService,\n    private route: ActivatedRoute,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe(param => {\n      const id: string = get(param, 'id');\n      this.sessionsByEstablishment =\n        this.sessionService.getOneSessionByEstablishment(parseInt(id));\n\n      this.sessionService.sessionsAsObservable.subscribe(() => {\n        this.sessionsByEstablishment =\n          this.sessionService.getOneSessionByEstablishment(parseInt(id));\n      });\n    });\n    this.allSessionsByEstablishment =\n      this.sessionService.getSessionByEstablishment();\n  }\n\n  onFilterChange(event: FilterPayload) {\n    const { type, title, date } = event;\n\n    this.sessionsByEstablishment.sessions =\n      this.sessionsByEstablishment.sessions.filter(session => {\n        const isTypeMatch =\n          !type || session.type.toLowerCase().includes(type.toLowerCase());\n        const isTitleMatch =\n          !title || session.title.toLowerCase().includes(title.toLowerCase());\n\n        const isOpenOnDate =\n          !date || this.isSessionOpenOnDate(session, new Date(date));\n\n        return isTypeMatch && isTitleMatch && isOpenOnDate;\n      });\n    if (!this.sessionService.isFilter) {\n      this.sessionService.getSessions();\n    }\n  }\n\n  isSessionOpenOnDate(session: Session, date: Date): boolean {\n    const currentDayOfWeek = date.toLocaleString('fr-FR', { weekday: 'long' });\n    const currentTime = date.toLocaleTimeString('fr-FR', {\n      hour: 'numeric',\n      minute: 'numeric',\n    });\n\n    const openingHours = session.openingHours.find(\n      openingHour => openingHour.dayOfWeek.toLowerCase() === currentDayOfWeek\n    );\n\n    if (!openingHours) {\n      return false; // Session non planifiée pour le jour actuel\n    }\n\n    return (\n      currentTime >= openingHours.startTime &&\n      currentTime \n    \n\n    \n        \n  \n    >\n  \n  \n    \n      \n        {{ sessionsByEstablishment.nomEstablishment }}\n      \n      {{ sessionsByEstablishment.address }}\n      \n        \n      \n    \n    \n      Désolé aucune session n'est disponible dans cet établissement\n    \n  \n\n\n    \n\n    \n                \n                    session-establishment-listing-page.component.scss\n                \n                :host {\n}\n.session-list-container {\n  padding: 20px;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n\n  .session {\n    cursor: pointer;\n    padding: 10px;\n  }\n}\n.session-filter {\n  padding: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      >                      {{ sessionsByEstablishment.nomEstablishment }}            {{ sessionsByEstablishment.address }}                                  Désolé aucune session n\\'est disponible dans cet établissement      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SessionEstablishmentListingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionFilterComponent.html":{"url":"components/SessionFilterComponent.html","title":"component - SessionFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/session/vue/components/session-filter/session-filter.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                session-filter\n            \n\n\n\n            \n                styleUrls\n                session-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                session-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchTitle\n                            \n                            \n                                selectedDate\n                            \n                            \n                                selectedType\n                            \n                            \n                                sessionTypes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterSessions\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/session/vue/components/session-filter/session-filter.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/session/vue/components/session-filter/session-filter.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterSessions\n                        \n                    \n                \n            \n            \n                \nfilterSessions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/vue/components/session-filter/session-filter.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        searchTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/components/session-filter/session-filter.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/components/session-filter/session-filter.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/components/session-filter/session-filter.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessionTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : Object.values(TrainingSession)\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/components/session-filter/session-filter.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { TrainingSession } from '@/app/session/domain/session';\nimport { SessionService } from '@/app/session/application/services/session.service';\n\nexport interface FilterPayload {\n  [key: string]: string;\n  type: string;\n  title: string;\n  date: string;\n}\n@Component({\n  selector: 'session-filter',\n  templateUrl: 'session-filter.component.html',\n  styleUrls: ['session-filter.component.scss'],\n})\nexport class SessionFilterComponent {\n  @Output() filterChange: EventEmitter =\n    new EventEmitter();\n\n  selectedType = '';\n  searchTitle = '';\n\n  sessionTypes: string[] = Object.values(TrainingSession);\n  selectedDate!: string;\n\n  constructor(private sessionService: SessionService) {}\n\n  filterSessions(): void {\n    const filterData: FilterPayload = {\n      type: this.selectedType ?? '',\n      title: this.searchTitle,\n      date: this.selectedDate ?? '',\n    };\n\n    for (const key in filterData) {\n      if (filterData[key] !== '') {\n        this.sessionService.isFilter = true;\n        break;\n      } else {\n        this.sessionService.isFilter = false;\n      }\n    }\n\n    this.filterChange.emit(filterData);\n  }\n}\n\n    \n\n    \n        \n  \n    Type de session\n    \n      Tous\n      \n        {{ sessionType }}\n      \n    \n  \n\n  \n    \n  \n\n  \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    session-filter.component.scss\n                \n                .filter-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Type de session          Tous              {{ sessionType }}                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SessionFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SessionModule.html":{"url":"modules/SessionModule.html","title":"module - SessionModule","body":"\n                   \n\n\n\n\n    Modules\n    SessionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SessionModule\n\n\n\ncluster_SessionModule_exports\n\n\n\ncluster_SessionModule_imports\n\n\n\ncluster_SessionModule_declarations\n\n\n\n\nSessionComponent\n\nSessionComponent\n\n\n\nSessionModule\n\nSessionModule\n\nSessionModule -->\n\nSessionComponent->SessionModule\n\n\n\n\n\nSessionDetailComponent\n\nSessionDetailComponent\n\nSessionModule -->\n\nSessionDetailComponent->SessionModule\n\n\n\n\n\nSessionEstablishmentListingPageComponent\n\nSessionEstablishmentListingPageComponent\n\nSessionModule -->\n\nSessionEstablishmentListingPageComponent->SessionModule\n\n\n\n\n\nSessionFilterComponent\n\nSessionFilterComponent\n\nSessionModule -->\n\nSessionFilterComponent->SessionModule\n\n\n\n\n\nSessionsListingAllComponent\n\nSessionsListingAllComponent\n\nSessionModule -->\n\nSessionsListingAllComponent->SessionModule\n\n\n\n\n\nSessionEstablishmentListingPageComponent \n\nSessionEstablishmentListingPageComponent \n\nSessionEstablishmentListingPageComponent  -->\n\nSessionModule->SessionEstablishmentListingPageComponent \n\n\n\n\n\nNgClass\n\nNgClass\n\nSessionModule -->\n\nNgClass->SessionModule\n\n\n\n\n\nNgForOf\n\nNgForOf\n\nSessionModule -->\n\nNgForOf->SessionModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nSessionModule -->\n\nNgIf->SessionModule\n\n\n\n\n\nNgOptimizedImage\n\nNgOptimizedImage\n\nSessionModule -->\n\nNgOptimizedImage->SessionModule\n\n\n\n\n\nRouterLink\n\nRouterLink\n\nSessionModule -->\n\nRouterLink->SessionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/session/session.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SessionComponent\n                        \n                        \n                            SessionDetailComponent\n                        \n                        \n                            SessionEstablishmentListingPageComponent\n                        \n                        \n                            SessionFilterComponent\n                        \n                        \n                            SessionsListingAllComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgClass\n                        \n                        \n                            NgForOf\n                        \n                        \n                            NgIf\n                        \n                        \n                            NgOptimizedImage\n                        \n                        \n                            RouterLink\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SessionEstablishmentListingPageComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { SessionEstablishmentListingPageComponent } from '@/app/session/vue/containers/session-listing-by-establishment-page/session-establishment-listing-page.component';\nimport { SessionComponent } from '@/app/session/vue/components/session/session.component';\nimport { MatCardModule } from '@angular/material/card';\nimport {\n  DatePipe,\n  NgClass,\n  NgForOf,\n  NgIf,\n  NgOptimizedImage,\n} from '@angular/common';\nimport { SessionFilterComponent } from '@/app/session/vue/components/session-filter/session-filter.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { RouterLink } from '@angular/router';\nimport { SessionDetailComponent } from '@/app/session/vue/containers/session-detail/session-detail.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { SessionsListingAllComponent } from './vue/containers/sessions-listing-all/sessions-listing-all.component';\n\n@NgModule({\n  declarations: [\n    SessionEstablishmentListingPageComponent,\n    SessionComponent,\n    SessionFilterComponent,\n    SessionDetailComponent,\n    SessionsListingAllComponent,\n  ],\n  imports: [\n    MatCardModule,\n    NgForOf,\n    NgClass,\n    NgOptimizedImage,\n    MatInputModule,\n    MatSelectModule,\n    FormsModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    RouterLink,\n    NgIf,\n    MatButtonModule,\n    DatePipe,\n  ],\n  providers: [],\n  exports: [SessionEstablishmentListingPageComponent],\n})\nexport class SessionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SessionRoutingModule.html":{"url":"modules/SessionRoutingModule.html","title":"module - SessionRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SessionRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/session/session-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { SessionEstablishmentListingPageComponent } from '@/app/session/vue/containers/session-listing-by-establishment-page/session-establishment-listing-page.component';\n\nconst route: Routes = [\n  {\n    path: ':id',\n    component: SessionEstablishmentListingPageComponent,\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(route)],\n  exports: [RouterModule],\n})\nexport class SessionRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/session/application/services/session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                establishments\n                            \n                            \n                                httpOptions\n                            \n                            \n                                    Private\n                                isFilterSubject\n                            \n                            \n                                    Private\n                                sessions\n                            \n                            \n                                    Private\n                                sessionsSubject\n                            \n                            \n                                    Private\n                                sessionUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateId\n                            \n                            \n                                getKeyByValue\n                            \n                            \n                                getOneSessionByEstablishment\n                            \n                            \n                                getSessionByEstablishment\n                            \n                            \n                                getSessionById\n                            \n                            \n                                getSessions\n                            \n                            \n                                getTrainingSessionImageUrl\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                insertSession\n                            \n                            \n                                updateSession\n                            \n                            \n                                validOpenings\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sessionsAsObservable\n                                \n                                \n                                    sessionsAsValue\n                                \n                                \n                                    updateSessions\n                                \n                                \n                                    isFilter\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(memory: InMemoryDataService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/session/application/services/session.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        memory\n                                                  \n                                                        \n                                                                        InMemoryDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateId\n                        \n                    \n                \n            \n            \n                \ngenerateId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/application/services/session.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getKeyByValue\n                        \n                    \n                \n            \n            \n                \ngetKeyByValue(obj: literal type, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/application/services/session.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOneSessionByEstablishment\n                        \n                    \n                \n            \n            \n                \ngetOneSessionByEstablishment(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/application/services/session.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         sessionByEstablishment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionByEstablishment\n                        \n                    \n                \n            \n            \n                \ngetSessionByEstablishment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/application/services/session.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     sessionByEstablishment[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessionById\n                        \n                    \n                \n            \n            \n                \ngetSessionById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/application/services/session.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Session\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSessions\n                        \n                    \n                \n            \n            \n                \ngetSessions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/application/services/session.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTrainingSessionImageUrl\n                        \n                    \n                \n            \n            \n                \ngetTrainingSessionImageUrl(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/application/services/session.service.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string, result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/application/services/session.service.ts:176\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gère les erreurs de requête HTTP.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                    \n                                        \nLe nom de l'opération pendant laquelle l'erreur s'est produite.\n\n\n                                    \n                                \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nLa valeur de retour en cas d'erreur.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: unknown) => Observable\n\n                    \n                    \n                        Un Observable du résultat.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertSession\n                        \n                    \n                \n            \n            \n                \ninsertSession(session: Session)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/application/services/session.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                Session\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSession\n                        \n                    \n                \n            \n            \n                \nupdateSession(updatedSession: Session)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/application/services/session.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updatedSession\n                                    \n                                                Session\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Session[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validOpenings\n                        \n                    \n                \n            \n            \n                \nvalidOpenings(openingsHour: OpeningHour[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/application/services/session.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    openingsHour\n                                    \n                                                OpeningHour[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OpeningHour[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        establishments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Establishment[]\n\n                    \n                \n                \n                    \n                        Default value : ESTABLISHMENTS\n                    \n                \n                    \n                        \n                                Defined in src/app/session/application/services/session.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/session/application/services/session.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isFilterSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/session/application/services/session.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sessions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Session[]\n\n                    \n                \n                \n                    \n                        Default value : sessionsMock\n                    \n                \n                    \n                        \n                                Defined in src/app/session/application/services/session.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sessionsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.sessions)\n                    \n                \n                    \n                        \n                                Defined in src/app/session/application/services/session.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sessionUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api/sessions'\n                    \n                \n                    \n                        \n                                Defined in src/app/session/application/services/session.service.ts:40\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sessionsAsObservable\n                    \n                \n\n                \n                    \n                        getsessionsAsObservable()\n                    \n                \n                            \n                                \n                                    Defined in src/app/session/application/services/session.service.ts:45\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sessionsAsValue\n                    \n                \n\n                \n                    \n                        getsessionsAsValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/session/application/services/session.service.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        updateSessions\n                    \n                \n\n\n                \n                    \n                        setupdateSessions(session: Session[])\n                    \n                \n                            \n                                \n                                    Defined in src/app/session/application/services/session.service.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            session\n                                                    \n                                                            \n                                                                            Session[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isFilter\n                    \n                \n\n                \n                    \n                        getisFilter()\n                    \n                \n                            \n                                \n                                    Defined in src/app/session/application/services/session.service.ts:72\n                                \n                            \n\n                \n                    \n                        setisFilter(isFilter)\n                    \n                \n                            \n                                \n                                    Defined in src/app/session/application/services/session.service.ts:76\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            isFilter\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {\n  OpeningHour,\n  Session,\n  TrainingSession,\n  TrainingSessionImages,\n} from '@/app/session/domain/session';\n\nimport { Establishment } from '@/app/establishment/domain/establishment';\nimport { Injectable } from '@angular/core';\nimport { ESTABLISHMENTS } from '@/app/establishment/mock/mock-establishment';\nimport { sessionsMock } from '@/app/session/mock/mock-session';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { InMemoryDataService } from '@/app/in-memory-data.service';\nimport { catchError, tap } from 'rxjs/operators';\n\nexport interface sessionByEstablishment {\n  nomEstablishment: string;\n  establishmentId: number;\n  address: string;\n  sessions: Session[];\n}\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionService {\n  private sessions: Session[] = sessionsMock;\n  private establishments: Establishment[] = ESTABLISHMENTS;\n\n  private sessionsSubject: BehaviorSubject = new BehaviorSubject(this.sessions);\n\n  private isFilterSubject: BehaviorSubject =\n    new BehaviorSubject(false);\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n  private sessionUrl = 'api/sessions';\n\n  constructor(private memory: InMemoryDataService, private http: HttpClient) {}\n\n  // Getter pour obtenir le BehaviorSubject en tant qu'Observable\n  get sessionsAsObservable(): Observable {\n    return this.sessionsSubject.asObservable();\n  }\n\n  get sessionsAsValue(): Session[] {\n    return this.sessionsSubject.value;\n  }\n  set updateSessions(session: Session[]) {\n    this.sessionsSubject.next(session);\n  }\n\n  getSessions(): void {\n    this.http\n      .get(this.sessionUrl)\n      .pipe(tap(), catchError(this.handleError('getSession', [])))\n      .subscribe(sessions => {\n        this.sessionsSubject.next(sessions);\n        return sessions;\n      });\n  }\n\n  generateId(): number {\n    const sessions = sessionsMock;\n    const id = this.memory.sessionId(sessions);\n    return id;\n  }\n\n  get isFilter(): boolean {\n    return this.isFilterSubject.value;\n  }\n\n  set isFilter(isFilter) {\n    this.isFilterSubject.next(isFilter);\n  }\n  insertSession(session: Session): Observable {\n    return this.http\n      .post(this.sessionUrl, session, this.httpOptions)\n      .pipe(\n        tap(newSession => {\n          const currentValue = this.sessionsSubject.getValue();\n          this.sessionsSubject.next([...currentValue, newSession]);\n        }),\n        catchError(this.handleError('insertSession'))\n      );\n  }\n\n  updateSession(updatedSession: Session): Session[] {\n    const index = this.sessionsAsValue.findIndex(\n      session => session.id === updatedSession.id\n    );\n    if (index !== -1) {\n      this.sessionsAsValue[index] = updatedSession;\n    }\n    return this.sessionsAsValue;\n  }\n  getSessionById(id: number): Session {\n    const sessionData = this.sessions.find(session => session.id === id);\n\n    return sessionData ?? ([] as unknown as Session);\n  }\n\n  getSessionByEstablishment(): sessionByEstablishment[] {\n    const sessionsByEstablishment: Map = new Map();\n\n    for (const session of this.sessions) {\n      if (session.establishmentId) {\n        if (sessionsByEstablishment.has(session.establishmentId)) {\n          sessionsByEstablishment.get(session.establishmentId)?.push(session);\n        } else {\n          sessionsByEstablishment.set(session.establishmentId, [session]);\n        }\n      }\n    }\n\n    const result: sessionByEstablishment[] = [];\n\n    for (const [establishmentId, sessions] of sessionsByEstablishment) {\n      const establishment = this.establishments.find(\n        e => e.id === establishmentId\n      );\n      if (establishment) {\n        result.push({\n          establishmentId: establishment.id,\n          nomEstablishment: establishment.nom,\n          address: establishment.address,\n          sessions,\n        });\n      }\n    }\n\n    return result;\n  }\n\n  getOneSessionByEstablishment(id: number): sessionByEstablishment {\n    return this.getSessionByEstablishment().find(\n      sessionByEstablishment => sessionByEstablishment.establishmentId === id\n    ) as sessionByEstablishment;\n  }\n\n  getTrainingSessionImageUrl(type: string): string {\n    return TrainingSessionImages[\n      this.getKeyByValue(TrainingSession, type) as keyof typeof TrainingSession\n    ];\n  }\n\n  getKeyByValue(\n    obj: { [key: string]: string },\n    value: string\n  ): string | undefined {\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === value) {\n        return key;\n      }\n    }\n    return undefined;\n  }\n\n  validOpenings(openingsHour: OpeningHour[]): OpeningHour[] {\n    const date = new Date();\n    return openingsHour.filter(\n      openingHour =>\n        new Date(openingHour.fullDate) > date &&\n        new Date().getTime().toLocaleString() (operation = 'operation', result?: T) {\n    return (error: unknown): Observable => {\n      console.error(`${operation} failed: ${error}`);\n      return of(result as T);\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionsListingAllComponent.html":{"url":"components/SessionsListingAllComponent.html","title":"component - SessionsListingAllComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionsListingAllComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/session/vue/containers/sessions-listing-all/sessions-listing-all.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sessions-listing-all\n            \n\n\n\n            \n                styleUrls\n                ./sessions-listing-all.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sessions-listing-all.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sessions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isSessionOpenOnDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilterChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sessionService: SessionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/session/vue/containers/sessions-listing-all/sessions-listing-all.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sessionService\n                                                  \n                                                        \n                                                                        SessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isSessionOpenOnDate\n                        \n                    \n                \n            \n            \n                \nisSessionOpenOnDate(session: Session, date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/vue/containers/sessions-listing-all/sessions-listing-all.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                Session\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/vue/containers/sessions-listing-all/sessions-listing-all.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterChange\n                        \n                    \n                \n            \n            \n                \nonFilterChange(event: FilterPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/app/session/vue/containers/sessions-listing-all/sessions-listing-all.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                FilterPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        sessions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Session[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/session/vue/containers/sessions-listing-all/sessions-listing-all.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { FilterPayload } from '@/app/session/vue/components/session-filter/session-filter.component';\nimport { Session } from '@/app/session/domain/session';\nimport { SessionService } from '@/app/session/application/services/session.service';\n\n@Component({\n  selector: 'app-sessions-listing-all',\n  templateUrl: './sessions-listing-all.component.html',\n  styleUrls: ['./sessions-listing-all.component.scss'],\n})\nexport class SessionsListingAllComponent implements OnInit {\n  sessions!: Session[];\n  constructor(private sessionService: SessionService) {}\n  ngOnInit() {\n    this.sessionService.getSessions();\n    this.sessionService.sessionsAsObservable.subscribe(sessions => {\n      this.sessions = sessions;\n    });\n  }\n\n  onFilterChange(event: FilterPayload) {\n    const { type, title, date } = event;\n\n    this.sessions = this.sessions.filter(session => {\n      const isTypeMatch =\n        !type || session.type.toLowerCase().includes(type.toLowerCase());\n      const isTitleMatch =\n        !title || session.title.toLowerCase().includes(title.toLowerCase());\n\n      const isOpenOnDate =\n        !date || this.isSessionOpenOnDate(session, new Date(date));\n\n      return isTypeMatch && isTitleMatch && isOpenOnDate;\n    });\n    if (!this.sessionService.isFilter) {\n      this.sessionService.getSessions();\n    }\n  }\n  isSessionOpenOnDate(session: Session, date: Date): boolean {\n    const currentDayOfWeek = date.toLocaleString('fr-FR', { weekday: 'long' });\n    const currentTime = date.toLocaleTimeString('fr-FR', {\n      hour: 'numeric',\n      minute: 'numeric',\n    });\n\n    const openingHours = session.openingHours.find(\n      openingHour => openingHour.dayOfWeek.toLowerCase() === currentDayOfWeek\n    );\n\n    if (!openingHours) {\n      return false; // Session non planifiée pour le jour actuel\n    }\n\n    return (\n      currentTime >= openingHours.startTime &&\n      currentTime \n    \n\n    \n        \n  \n    >\n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./sessions-listing-all.component.scss\n                \n                .session-list-container {\n  padding: 20px;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  .session {\n    cursor: pointer;\n    padding: 10px;\n  }\n}\n.session-filter {\n  padding: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      >                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SessionsListingAllComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user/domain/user.ts\n        \n\n\n            \n                Description\n            \n            \n                Cette interface définit le type d'un objet User.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Adresse e-mail de l'utilisateur.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Prénom de l'utilisateur.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identifiant unique de l'utilisateur.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nom de famille de l'utilisateur.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Mot de passe de l'utilisateur.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tableau de chaînes représentant les rôles attribués à l'utilisateur.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nom d'utilisateur utilisé pour la connexion.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  /**\n   * Identifiant unique de l'utilisateur.\n   */\n  id: number;\n\n  /**\n   * Nom d'utilisateur utilisé pour la connexion.\n   */\n  userName: string;\n\n  /**\n   * Prénom de l'utilisateur.\n   */\n  firstName: string;\n\n  /**\n   * Nom de famille de l'utilisateur.\n   */\n  lastName: string;\n\n  /**\n   * Adresse e-mail de l'utilisateur.\n   */\n  email: string;\n\n  /**\n   * Mot de passe de l'utilisateur.\n   */\n  password: string;\n\n  /**\n   * Tableau de chaînes représentant les rôles attribués à l'utilisateur.\n   */\n  roles: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDashboardComponent.html":{"url":"components/UserDashboardComponent.html","title":"component - UserDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/vue/components/user-dashboard/user-dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Le composant UserDashboardComponent sert à fournir une interface utilisateur pour afficher et modifier les détails de l'utilisateur.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-dashboard\n            \n\n\n\n            \n                styleUrls\n                ./user-dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editing\n                            \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                user\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmailError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleEdit\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, userService: UserFacadeService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/vue/components/user-dashboard/user-dashboard.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEmailError\n                        \n                    \n                \n            \n            \n                \ngetEmailError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/vue/components/user-dashboard/user-dashboard.component.ts:141\n                \n            \n\n\n            \n                \n                    Vérifie les erreurs dans le champ 'email' du formulaire utilisateur et renvoie un message d'erreur approprié.\n\n\n                    \n                    \n                    \n                        Returns :     \"Adresse email requis.\" | \"Email non valide\" | \"\"\n\n                    \n                    \n                        Un message d'erreur en cas d'erreur, sinon une chaîne vide.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/vue/components/user-dashboard/user-dashboard.component.ts:51\n                \n            \n\n\n            \n                \n                    Au moment de l'initialisation, récupère l'utilisateur à partir du service d'authentification\net met à jour le formulaire utilisateur avec les données de l'utilisateur.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEdit\n                        \n                    \n                \n            \n            \n                \ntoggleEdit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/vue/components/user-dashboard/user-dashboard.component.ts:74\n                \n            \n\n\n            \n                \n                    Bascule l'état d'édition du formulaire et active/désactive les champs du formulaire en conséquence.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/vue/components/user-dashboard/user-dashboard.component.ts:87\n                \n            \n\n\n            \n                \n                    Met à jour les informations de l'utilisateur existant.\nAffiche un message de confirmation en cas de succès, ou un message d'erreur en cas d'échec.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/user/vue/components/user-dashboard/user-dashboard.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user/vue/components/user-dashboard/user-dashboard.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/user/vue/components/user-dashboard/user-dashboard.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user/vue/components/user-dashboard/user-dashboard.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user/vue/components/user-dashboard/user-dashboard.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthService } from '@/app/auth/application/services/auth.service';\nimport { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { User } from '@/app/user/domain/user';\nimport { UserFacadeService } from '@/app/user/application/facade/user-facade.service';\nimport get from 'lodash/get';\nimport { isUndefined } from 'lodash';\n\n/**\n * Le composant `UserDashboardComponent` sert à fournir une interface utilisateur pour afficher et modifier les détails de l'utilisateur.\n *\n * @selector `app-user-dashboard`\n * @templateUrl `./user-dashboard.component.html`\n * @styleUrls [`./user-dashboard.component.scss`]\n */\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.scss'],\n})\nexport class UserDashboardComponent {\n  userForm: FormGroup;\n  editing = false;\n  user!: User | null | undefined;\n  error!: string;\n  isLoading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private userService: UserFacadeService,\n    private snackBar: MatSnackBar\n  ) {\n    this.userForm = this.fb.group({\n      firstName: [{ value: '', disabled: true }, Validators.required],\n      lastName: [{ value: '', disabled: true }, Validators.required],\n      email: [\n        { value: '', disabled: true },\n        [Validators.required, Validators.email],\n      ],\n      userName: [{ value: '', disabled: true }],\n    });\n  }\n\n  /**\n   * Au moment de l'initialisation, récupère l'utilisateur à partir du service d'authentification\n   * et met à jour le formulaire utilisateur avec les données de l'utilisateur.\n   */\n  ngOnInit() {\n    this.user = this.authService.getUser();\n\n    this.userForm = this.fb.group({\n      firstName: [\n        { value: this.user?.firstName, disabled: true },\n        Validators.required,\n      ],\n      lastName: [\n        { value: this.user?.lastName, disabled: true },\n        Validators.required,\n      ],\n      email: [\n        { value: this.user?.email, disabled: true },\n        [Validators.required, Validators.email],\n      ],\n      userName: [{ value: this.user?.userName, disabled: true }],\n    });\n  }\n\n  /**\n   * Bascule l'état d'édition du formulaire et active/désactive les champs du formulaire en conséquence.\n   */\n  toggleEdit() {\n    this.editing = !this.editing;\n    if (this.editing) {\n      this.userForm.enable();\n    } else {\n      this.userForm.disable();\n    }\n  }\n\n  /**\n   * Met à jour les informations de l'utilisateur existant.\n   * Affiche un message de confirmation en cas de succès, ou un message d'erreur en cas d'échec.\n   */\n  updateUser() {\n    const id = get(this.user, 'id');\n    const userName = get(this.user, 'userName');\n    const password = get(this.user, 'password');\n    const roles = get(this.user, 'roles');\n\n    if (isUndefined(id) || isUndefined(userName) || isUndefined(password)) {\n      return;\n    }\n\n    if (!this.userForm.valid) {\n      return;\n    }\n\n    this.isLoading = true;\n    this.editing = false;\n    const firstName: string = get(this.userForm.value, 'firstName');\n    const lastName: string = get(this.userForm.value, 'lastName');\n    const email: string = get(this.userForm.value, 'email');\n    const updatedUser: User = {\n      id,\n      userName,\n      firstName,\n      lastName,\n      email,\n      password,\n      roles: roles as string[],\n    };\n    this.userService.updateUser(updatedUser, (success: boolean) => {\n      if (success) {\n        this.authService.setCurrentUser(updatedUser);\n        this.snackBar.open(\n          'Les informations ont été mise à jour avec succès',\n          'Fermer',\n          {\n            duration: 5000,\n            panelClass: ['green-snackbar'],\n          }\n        );\n      } else {\n        this.snackBar.open(\n          \"Une erreur s'est produite lors de la mise à jour\",\n          'Fermer',\n          { duration: 5000 }\n        );\n      }\n      this.isLoading = false;\n    });\n  }\n\n  /**\n   * Vérifie les erreurs dans le champ 'email' du formulaire utilisateur et renvoie un message d'erreur approprié.\n   * @returns Un message d'erreur en cas d'erreur, sinon une chaîne vide.\n   */\n  getEmailError() {\n    if (this.userForm.controls['email'].hasError('required')) {\n      return 'Adresse email requis.';\n    }\n    const error = this.userForm.controls['email'].hasError('email')\n      ? 'Email non valide'\n      : '';\n    return error;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ editing ? 'Annuler' : 'Editer' }}\n  \n\n  \n    \n      \n    \n\n    \n      \n      \n        saisie du prénom requis.\n      \n    \n\n    \n      \n      \n        saisie du nom requis.\n      \n    \n\n    \n      \n      \n        {{ getEmailError() }}\n      \n    \n\n    \n      \n    \n    \n      Mettre à jour\n    \n  \n\n\n    \n\n    \n                \n                    ./user-dashboard.component.scss\n                \n                .user-dashboard {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  max-width: 800px;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\n  background: #c0c2cc;\n  border-radius: 4px;\n  padding: 3em 2em 2em 2em;\n  margin: 40px auto;\n\n  .edit-button {\n    position: absolute;\n    top: 1em;\n    right: 1em;\n    margin-top: -5px;\n  }\n\n  form {\n    width: 100%;\n\n    mat-form-field {\n      width: 100%;\n      margin-bottom: 1em;\n\n      input[readonly] {\n        color: gray;\n      }\n    }\n\n    .mat-form-field-appearance-outline .mat-form-field-outline {\n      color: #3f51b5;\n    }\n\n    .mat-form-field-appearance-outline.mat-form-field-invalid\n      .mat-form-field-outline {\n      color: #f44336;\n    }\n\n    .submit-button,\n    mat-spinner {\n      display: block;\n      margin: auto;\n    }\n\n    .submit-button {\n      margin-top: 1em;\n      width: 55%;\n    }\n  }\n}\n\n.green-snackbar {\n  background-color: green;\n  color: white;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ editing ? \\'Annuler\\' : \\'Editer\\' }}                                          saisie du prénom requis.                                  saisie du nom requis.                                  {{ getEmailError() }}                                  Mettre à jour      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacadeService.html":{"url":"injectables/UserFacadeService.html","title":"injectable - UserFacadeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserFacadeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user/application/facade/user-facade.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service UserFacadeService\nCe service agit comme une façade pour UserService.\nIl offre des méthodes pour obtenir, ajouter, mettre à jour et supprimer des utilisateurs.\nIl fournit également un observable pour un flux d'utilisateurs.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                generateId\n                            \n                            \n                                getUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/application/facade/user-facade.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/facade/user-facade.service.ts:46\n                \n            \n\n\n            \n                \n                    Ajoute un nouvel utilisateur via UserService.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'utilisateur à ajouter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable L'utilisateur ajouté.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: number, callback: (success: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/facade/user-facade.service.ts:64\n                \n            \n\n\n            \n                \n                    Supprime un utilisateur via UserService.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'ID de l'utilisateur à supprimer.\n\n                                    \n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Le callback à exécuter après la suppression.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateId\n                        \n                    \n                \n            \n            \n                \ngenerateId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/facade/user-facade.service.ts:72\n                \n            \n\n\n            \n                \n                    Génère un nouvel ID utilisateur via UserService.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        number L'ID généré.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/facade/user-facade.service.ts:37\n                \n            \n\n\n            \n                \n                    Récupère un utilisateur spécifique via UserService.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/facade/user-facade.service.ts:29\n                \n            \n\n\n            \n                \n                    Récupère tous les utilisateurs via UserService.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: User, callback: (success: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/facade/user-facade.service.ts:55\n                \n            \n\n\n            \n                \n                    Met à jour un utilisateur existant via UserService.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'utilisateur à mettre à jour.\n\n                                    \n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Le callback à exécuter après la mise à jour.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userService.users$\n                    \n                \n                    \n                        \n                                Defined in src/app/user/application/facade/user-facade.service.ts:22\n                        \n                    \n\n            \n                \n                    Un observable de tableau des utilisateurs. Il est utilisé pour récupérer les utilisateurs de UserService.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '@/app/user/domain/user';\nimport { UserService } from '@/app/user/application/services/user.service';\n\n/**\n * Service UserFacadeService\n *\n * Ce service agit comme une façade pour UserService.\n * Il offre des méthodes pour obtenir, ajouter, mettre à jour et supprimer des utilisateurs.\n * Il fournit également un observable pour un flux d'utilisateurs.\n *\n * @injectable providedIn: 'root'\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFacadeService {\n  /**\n   * Un observable de tableau des utilisateurs. Il est utilisé pour récupérer les utilisateurs de UserService.\n   */\n  users$ = this.userService.users$;\n\n  constructor(private userService: UserService) {}\n\n  /**\n   * Récupère tous les utilisateurs via UserService.\n   */\n  getUsers() {\n    this.userService.getUsers();\n  }\n\n  /**\n   * Récupère un utilisateur spécifique via UserService.\n   * @param id L'ID de l'utilisateur à récupérer.\n   */\n  getUser(userId: number) {\n    return this.userService.getUser(userId);\n  }\n\n  /**\n   * Ajoute un nouvel utilisateur via UserService.\n   * @param user L'utilisateur à ajouter.\n   * @return Observable L'utilisateur ajouté.\n   */\n  addUser(user: User): Observable {\n    return this.userService.addUser(user);\n  }\n\n  /**\n   * Met à jour un utilisateur existant via UserService.\n   * @param user L'utilisateur à mettre à jour.\n   * @param callback Le callback à exécuter après la mise à jour.\n   */\n  updateUser(user: User, callback: (success: boolean) => void) {\n    this.userService.updateUser(user, callback);\n  }\n\n  /**\n   * Supprime un utilisateur via UserService.\n   * @param id L'ID de l'utilisateur à supprimer.\n   * @param callback Le callback à exécuter après la suppression.\n   */\n  deleteUser(id: number, callback: (success: boolean) => void) {\n    this.userService.deleteUser(id, callback);\n  }\n\n  /**\n   * Génère un nouvel ID utilisateur via UserService.\n   * @return number L'ID généré.\n   */\n  generateId() {\n    return this.userService.generateId();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/vue/components/user-list/user-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component UserListComponent\nCe composant gère la liste des utilisateurs et les actions d'ajout, de mise à jour et de suppression des utilisateurs.\nLes données sont fournies par un tableau d'utilisateurs en entrée et les actions sont propagées à l'aide de la sortie d'événements.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n\n\n            \n                styleUrls\n                ./user-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayedColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onAdd\n                            \n                            \n                                onDelete\n                            \n                            \n                                onUpdate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        users\n                    \n                \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/vue/components/user-list/user-list.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        add\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/vue/components/user-list/user-list.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/vue/components/user-list/user-list.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/vue/components/user-list/user-list.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onAdd\n                        \n                    \n                \n            \n            \n                \nonAdd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/vue/components/user-list/user-list.component.ts:33\n                \n            \n\n\n            \n                \n                    Méthode pour déclencher l'événement d'ajout d'utilisateur.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/vue/components/user-list/user-list.component.ts:49\n                \n            \n\n\n            \n                \n                    Méthode pour déclencher l'événement de suppression d'utilisateur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Utilisateur à supprimer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdate\n                        \n                    \n                \n            \n            \n                \nonUpdate(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/vue/components/user-list/user-list.component.ts:41\n                \n            \n\n\n            \n                \n                    Méthode pour déclencher l'événement de mise à jour d'utilisateur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Utilisateur à mettre à jour.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['id', 'name', 'email', 'action']\n                    \n                \n                    \n                        \n                                Defined in src/app/user/vue/components/user-list/user-list.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { User } from '@/app/user/domain/user';\n\n/**\n * Component UserListComponent\n *\n * Ce composant gère la liste des utilisateurs et les actions d'ajout, de mise à jour et de suppression des utilisateurs.\n * Les données sont fournies par un tableau d'utilisateurs en entrée et les actions sont propagées à l'aide de la sortie d'événements.\n *\n * @selector app-user-list\n * @input users Liste des utilisateurs à afficher dans le tableau. Les utilisateurs sont des objets de type User.\n * @output add Événement déclenché lorsqu'un utilisateur est ajouté.\n * @output update Événement déclenché lorsqu'un utilisateur est mis à jour.\n * @output delete Événement déclenché lorsqu'un utilisateur est supprimé.\n */\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss'],\n})\nexport class UserListComponent {\n  @Input() users: User[] = [];\n  @Output() add = new EventEmitter();\n  @Output() update = new EventEmitter();\n  @Output() delete = new EventEmitter();\n\n  displayedColumns: string[] = ['id', 'name', 'email', 'action'];\n\n  /**\n   * Méthode pour déclencher l'événement d'ajout d'utilisateur.\n   */\n  onAdd() {\n    this.add.emit();\n  }\n\n  /**\n   * Méthode pour déclencher l'événement de mise à jour d'utilisateur.\n   * @param user Utilisateur à mettre à jour.\n   */\n  onUpdate(user: User) {\n    this.update.emit(user);\n  }\n\n  /**\n   * Méthode pour déclencher l'événement de suppression d'utilisateur.\n   * @param user Utilisateur à supprimer.\n   */\n  onDelete(user: User) {\n    this.delete.emit(user);\n  }\n}\n\n    \n\n    \n        \n  Add User\n  \n    \n    \n       ID \n       {{ user.id }} \n    \n\n    \n    \n       Name \n      \n        {{ user.firstName }} {{ user.lastName }}\n      \n    \n\n    \n    \n       Email \n       {{ user.email }} \n    \n\n    \n    \n       Actions \n      \n        \n          edit\n        \n        \n          delete\n        \n      \n    \n\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./user-list.component.scss\n                \n                .user-list {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  button {\n    margin-bottom: 10px;\n  }\n\n  mat-table {\n    width: 100%;\n    max-width: 800px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Add User                 ID        {{ user.id }}                    Name               {{ user.firstName }} {{ user.lastName }}                         Email        {{ user.email }}                    Actions                         edit                          delete                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserDashboardComponent\n\nUserDashboardComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserDashboardComponent->UserModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nUserModule -->\n\nUserListComponent->UserModule\n\n\n\n\n\nUsersPageComponent\n\nUsersPageComponent\n\nUserModule -->\n\nUsersPageComponent->UserModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nUserModule -->\n\nUserRoutingModule->UserModule\n\n\n\n\n\nUserFacadeService\n\nUserFacadeService\n\nUserModule -->\n\nUserFacadeService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Le UserModule fournit les fonctionnalités liées à la gestion des utilisateurs.\nIl déclare et exporte des composants pour la liste des utilisateurs, le tableau de bord de l'utilisateur,\net la page des utilisateurs. Il importe des modules Angular communs et des modules Material pour l'interface utilisateur.\nIl fournit également des services pour la manipulation des utilisateurs.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserDashboardComponent\n                        \n                        \n                            UserListComponent\n                        \n                        \n                            UsersPageComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            UserFacadeService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UserDashboardComponent } from './vue/components/user-dashboard/user-dashboard.component';\nimport { UserFacadeService } from '@/app/user/application/facade/user-facade.service';\nimport { UserListComponent } from '@/app/user/vue/components/user-list/user-list.component';\nimport { UserRoutingModule } from '@/app/user/user-routing.module';\nimport { UserService } from '@/app/user/application/services/user.service';\nimport { UsersPageComponent } from '@/app/user/vue/containers/users-page/users-page.component';\n\n/**\n * Le `UserModule` fournit les fonctionnalités liées à la gestion des utilisateurs.\n *\n * Il déclare et exporte des composants pour la liste des utilisateurs, le tableau de bord de l'utilisateur,\n * et la page des utilisateurs. Il importe des modules Angular communs et des modules Material pour l'interface utilisateur.\n * Il fournit également des services pour la manipulation des utilisateurs.\n */\n@NgModule({\n  declarations: [UsersPageComponent, UserListComponent, UserDashboardComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    MatButtonModule,\n    MatTableModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    ReactiveFormsModule,\n  ],\n  providers: [UserService, UserFacadeService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRoutingModule.html":{"url":"modules/UserRoutingModule.html","title":"module - UserRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user/user-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\n\nimport { NgModule } from '@angular/core';\nimport { UserDashboardComponent } from '@/app/user/vue/components/user-dashboard/user-dashboard.component';\nimport { UsersPageComponent } from '@/app/user/vue/containers/users-page/users-page.component';\nimport { adminGuard } from '@/app/auth/application/guards/admin.guard';\nimport { authGuard } from '@/app/auth/application/guards/auth.guard';\n\n/**\n * Routes de l'application relatives à la gestion des utilisateurs.\n *\n * Cette table de routage contient les routes vers les composants de la page des utilisateurs et du tableau de bord de l'utilisateur.\n * Les routes sont protégées par des gardiens de route (`AuthGuard` et `AdminGuard`).\n *\n * - La route '/users' affiche la page UsersPageComponent et n'est accessible qu'aux utilisateurs ayant le rôle 'admin'.\n * - La route '/account' affiche le UserDashboardComponent et n'est accessible qu'aux utilisateurs authentifiés.\n */\nconst routes: Routes = [\n  {\n    path: 'users',\n    component: UsersPageComponent,\n    canActivate: [authGuard, adminGuard],\n  },\n  {\n    path: 'account',\n    component: UserDashboardComponent,\n    canActivate: [authGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user/application/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Le service UserService fournit une interface pour manipuler les données utilisateur dans l'application.\nIl permet de récupérer, ajouter, supprimer et mettre à jour les utilisateurs via des requêtes HTTP.\nIl utilise un BehaviorSubject pour garder une trace de la liste actuelle des utilisateurs, ce qui permet\naux autres parties de l'application de s'abonner aux mises à jour de la liste des utilisateurs.\nSee InMemoryDataService pour la génération des ID utilisateur.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                users$\n                            \n                            \n                                    Private\n                                usersSubject\n                            \n                            \n                                    Private\n                                usersUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                generateId\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserNo404\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, memory: InMemoryDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/application/services/user.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        memory\n                                                  \n                                                        \n                                                                        InMemoryDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/services/user.service.ts:80\n                \n            \n\n\n            \n                \n                    Ajoute un nouvel utilisateur et met à jour le BehaviorSubject avec la nouvelle liste des utilisateurs.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nL'utilisateur à ajouter.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Un Observable de l'utilisateur ajouté.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: number, callback: (success: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/services/user.service.ts:95\n                \n            \n\n\n            \n                \n                    Supprime un utilisateur par son id et met à jour le BehaviorSubject avec la nouvelle liste des utilisateurs.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nL'identifiant de l'utilisateur à supprimer.\n\n\n                                    \n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nLa fonction à exécuter après la suppression de l'utilisateur.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateId\n                        \n                    \n                \n            \n            \n                \ngenerateId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/services/user.service.ts:147\n                \n            \n\n\n            \n                \n                    Génère un identifiant unique pour un nouvel utilisateur.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Un identifiant numérique unique.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/services/user.service.ts:68\n                \n            \n\n\n            \n                \n                    Récupère un utilisateur par son id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nL'identifiant de l'utilisateur à récupérer.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Un Observable de l'utilisateur.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserNo404\n                        \n                    \n                \n            \n            \n                \ngetUserNo404(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/services/user.service.ts:51\n                \n            \n\n\n            \n                \n                    Récupère un utilisateur par son id.\nSi l'utilisateur n'est pas trouvé, une erreur est renvoyée.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nL'identifiant de l'utilisateur à récupérer.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Un Observable de l'utilisateur.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/services/user.service.ts:36\n                \n            \n\n\n            \n                \n                    Récupère la liste actuelle des utilisateurs depuis l'API et met à jour le BehaviorSubject.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string, result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/services/user.service.ts:159\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gère les erreurs de requête HTTP.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                    \n                                        \nLe nom de l'opération pendant laquelle l'erreur s'est produite.\n\n\n                                    \n                                \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nLa valeur de retour en cas d'erreur.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: unknown) => Observable\n\n                    \n                    \n                        Un Observable du résultat.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: User, callback: (success: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/application/services/user.service.ts:121\n                \n            \n\n\n            \n                \n                    Met à jour un utilisateur existant et met à jour le BehaviorSubject avec la nouvelle liste des utilisateurs.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nL'utilisateur à mettre à jour.\n\n\n                                    \n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nLa fonction à exécuter après la mise à jour de l'utilisateur.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/user/application/services/user.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.usersSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/user/application/services/user.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/user/application/services/user.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api/users'\n                    \n                \n                    \n                        \n                                Defined in src/app/user/application/services/user.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BehaviorSubject, Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { InMemoryDataService } from '@/app/in-memory-data.service';\nimport { Injectable } from '@angular/core';\nimport { USERS } from '@/app/user/mock/mock-users';\nimport { User } from '@/app/user/domain/user';\n\n/**\n * Le service `UserService` fournit une interface pour manipuler les données utilisateur dans l'application.\n * Il permet de récupérer, ajouter, supprimer et mettre à jour les utilisateurs via des requêtes HTTP.\n *\n * Il utilise un `BehaviorSubject` pour garder une trace de la liste actuelle des utilisateurs, ce qui permet\n * aux autres parties de l'application de s'abonner aux mises à jour de la liste des utilisateurs.\n *\n * @see InMemoryDataService pour la génération des ID utilisateur.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n  private usersUrl = 'api/users';\n\n  private usersSubject = new BehaviorSubject([]);\n  users$ = this.usersSubject.asObservable();\n\n  constructor(private http: HttpClient, private memory: InMemoryDataService) {}\n\n  /**\n   * Récupère la liste actuelle des utilisateurs depuis l'API et met à jour le `BehaviorSubject`.\n   */\n  getUsers(): void {\n    this.http\n      .get(this.usersUrl)\n      .pipe(tap(), catchError(this.handleError('getUsers', [])))\n      .subscribe(users => {\n        this.usersSubject.next(users);\n      });\n  }\n\n  /**\n   * Récupère un utilisateur par son `id`.\n   * Si l'utilisateur n'est pas trouvé, une erreur est renvoyée.\n   * @param id - L'identifiant de l'utilisateur à récupérer.\n   * @returns Un Observable de l'utilisateur.\n   */\n  getUserNo404(id: number): Observable {\n    const url = `${this.usersUrl}/?id=${id}`;\n    return this.http.get(url).pipe(\n      map(users => users[0]),\n      tap(u => {\n        const outcome = u ? 'fetched' : 'did not find';\n        return outcome;\n      }),\n      catchError(this.handleError(`getUser id=${id}`))\n    );\n  }\n\n  /**\n   * Récupère un utilisateur par son `id`.\n   * @param id - L'identifiant de l'utilisateur à récupérer.\n   * @returns Un Observable de l'utilisateur.\n   */\n  getUser(id: number): Observable {\n    const url = `${this.usersUrl}/${id}`;\n    return this.http\n      .get(url)\n      .pipe(tap(), catchError(this.handleError(`getUser id=${id}`)));\n  }\n\n  /**\n   * Ajoute un nouvel utilisateur et met à jour le `BehaviorSubject` avec la nouvelle liste des utilisateurs.\n   * @param user - L'utilisateur à ajouter.\n   * @returns Un Observable de l'utilisateur ajouté.\n   */\n  addUser(user: User): Observable {\n    return this.http.post(this.usersUrl, user, this.httpOptions).pipe(\n      tap(newUser => {\n        const currentValue = this.usersSubject.getValue();\n        this.usersSubject.next([...currentValue, newUser]);\n      }),\n      catchError(this.handleError('addUser'))\n    );\n  }\n\n  /**\n   * Supprime un utilisateur par son `id` et met à jour le `BehaviorSubject` avec la nouvelle liste des utilisateurs.\n   * @param id - L'identifiant de l'utilisateur à supprimer.\n   * @param callback - La fonction à exécuter après la suppression de l'utilisateur.\n   */\n  deleteUser(id: number, callback: (success: boolean) => void): void {\n    const url = `${this.usersUrl}/${id}`;\n    this.http\n      .delete(url, this.httpOptions)\n      .pipe(\n        tap(() => {\n          const currentValue = this.usersSubject.getValue();\n          const updatedUsers = currentValue.filter(user => user.id !== id);\n          this.usersSubject.next(updatedUsers);\n          callback(true);\n        }),\n        catchError(this.handleError('deleteUser'))\n      )\n      .subscribe({\n        error: err => {\n          console.error(err);\n          callback(false);\n        },\n      });\n  }\n\n  /**\n   * Met à jour un utilisateur existant et met à jour le `BehaviorSubject` avec la nouvelle liste des utilisateurs.\n   * @param user - L'utilisateur à mettre à jour.\n   * @param callback - La fonction à exécuter après la mise à jour de l'utilisateur.\n   */\n  updateUser(user: User, callback: (success: boolean) => void): void {\n    const url = `${this.usersUrl}/${user.id}`;\n    this.http\n      .put(url, user, this.httpOptions)\n      .pipe(\n        tap(updatedUser => {\n          const currentValue = this.usersSubject.getValue();\n          const updatedUsers = currentValue.map(u =>\n            u.id === updatedUser.id ? updatedUser : u\n          );\n          this.usersSubject.next(updatedUsers);\n          callback(true);\n        }),\n        catchError(err => {\n          this.handleError(`updateUser ${err.message}`);\n          callback(false);\n          return of(null);\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * Génère un identifiant unique pour un nouvel utilisateur.\n   * @returns Un identifiant numérique unique.\n   */\n  generateId(): number {\n    const users = USERS;\n    const id = this.memory.genId(users);\n    return id;\n  }\n\n  /**\n   * Gère les erreurs de requête HTTP.\n   * @param operation - Le nom de l'opération pendant laquelle l'erreur s'est produite.\n   * @param result - La valeur de retour en cas d'erreur.\n   * @returns Un Observable du résultat.\n   */\n  private handleError(operation = 'operation', result?: T) {\n    return (error: unknown): Observable => {\n      console.error(`${operation} failed: ${error}`);\n      return of(result as T);\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersPageComponent.html":{"url":"components/UsersPageComponent.html","title":"component - UsersPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/vue/containers/users-page/users-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component UsersPageComponent\nCe composant gère la page des utilisateurs.\nIl utilise UserFacadeService pour récupérer, ajouter, mettre à jour et supprimer des utilisateurs.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-page\n            \n\n\n\n            \n                styleUrls\n                ./users-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./users-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userFacade: UserFacadeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/vue/containers/users-page/users-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacadeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUser\n                        \n                    \n                \n            \n            \n                \naddUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/vue/containers/users-page/users-page.component.ts:46\n                \n            \n\n\n            \n                \n                    Appelle la méthode addUser() de UserFacadeService pour ajouter un nouvel utilisateur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'utilisateur à ajouter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/vue/containers/users-page/users-page.component.ts:71\n                \n            \n\n\n            \n                \n                    Appelle la méthode deleteUser() de UserFacadeService pour supprimer un utilisateur.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'utilisateur à supprimer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/vue/containers/users-page/users-page.component.ts:38\n                \n            \n\n\n            \n                \n                    Appelle la méthode getUsers() de UserFacadeService pour récupérer la liste des utilisateurs.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/vue/containers/users-page/users-page.component.ts:31\n                \n            \n\n\n            \n                \n                    Initialise le composant en appelant getUsers().\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user/vue/containers/users-page/users-page.component.ts:57\n                \n            \n\n\n            \n                \n                    Appelle la méthode updateUser() de UserFacadeService pour mettre à jour un utilisateur existant.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        L'utilisateur à mettre à jour.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userFacade.users$\n                    \n                \n                    \n                        \n                                Defined in src/app/user/vue/containers/users-page/users-page.component.ts:24\n                        \n                    \n\n            \n                \n                    Un observable de tableau des utilisateurs. Il est utilisé pour récupérer les utilisateurs de UserFacadeService.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { User } from '@/app/user/domain/user';\nimport { UserFacadeService } from '@/app/user/application/facade/user-facade.service';\nimport get from 'lodash/get';\n\n/**\n * Component UsersPageComponent\n *\n * Ce composant gère la page des utilisateurs.\n * Il utilise UserFacadeService pour récupérer, ajouter, mettre à jour et supprimer des utilisateurs.\n *\n * @selector app-users-page\n */\n@Component({\n  selector: 'app-users-page',\n  templateUrl: './users-page.component.html',\n  styleUrls: ['./users-page.component.scss'],\n})\nexport class UsersPageComponent implements OnInit {\n  /**\n   * Un observable de tableau des utilisateurs. Il est utilisé pour récupérer les utilisateurs de UserFacadeService.\n   */\n  users$ = this.userFacade.users$;\n\n  constructor(private userFacade: UserFacadeService) {}\n\n  /**\n   * Initialise le composant en appelant getUsers().\n   */\n  ngOnInit(): void {\n    this.getUsers();\n  }\n\n  /**\n   * Appelle la méthode getUsers() de UserFacadeService pour récupérer la liste des utilisateurs.\n   */\n  getUsers(): void {\n    this.userFacade.getUsers();\n  }\n\n  /**\n   * Appelle la méthode addUser() de UserFacadeService pour ajouter un nouvel utilisateur.\n   * @param user L'utilisateur à ajouter.\n   */\n  addUser(user: User) {\n    if (!user) {\n      return;\n    }\n    this.userFacade.addUser(user);\n  }\n\n  /**\n   * Appelle la méthode updateUser() de UserFacadeService pour mettre à jour un utilisateur existant.\n   * @param user L'utilisateur à mettre à jour.\n   */\n  updateUser(user: User) {\n    this.userFacade.updateUser(user, (success: boolean) => {\n      if (success) {\n        this.getUsers();\n      } else {\n        console.log(`Failed to update user with id ${user.id}`);\n      }\n    });\n  }\n\n  /**\n   * Appelle la méthode deleteUser() de UserFacadeService pour supprimer un utilisateur.\n   * @param user L'utilisateur à supprimer.\n   */\n  deleteUser(user: User) {\n    const id: number = get(user, 'id');\n    this.userFacade.deleteUser(id, (success: boolean) => {\n      if (success) {\n        this.getUsers();\n      } else {\n        console.log(`Failed to delete user with id ${id}`);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./users-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'app-booking'},{'name': 'EstablishmentAddComponent', 'selector': 'app-establishment-add'},{'name': 'EstablishmentComponent', 'selector': 'app-establishment'},{'name': 'EstablishmentEditComponent', 'selector': 'app-establishment-edit'},{'name': 'EstablishmentListComponent', 'selector': 'app-establishment-list'},{'name': 'EstablishmentPageComponent', 'selector': 'app-establishment-page'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SessionComponent', 'selector': 'session'},{'name': 'SessionDetailComponent', 'selector': 'session-detail'},{'name': 'SessionEstablishmentListingPageComponent', 'selector': 'session-listing'},{'name': 'SessionFilterComponent', 'selector': 'session-filter'},{'name': 'SessionsListingAllComponent', 'selector': 'app-sessions-listing-all'},{'name': 'UserDashboardComponent', 'selector': 'app-user-dashboard'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'UsersPageComponent', 'selector': 'app-users-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-initializer.service.ts\n            \n            injectable\n            AppInitializerService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/app/auth/application/guards/admin.guard.ts\n            \n            variable\n            adminGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/application/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/application/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/auth/application/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/auth/application/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                src/app/booking/application/facade/booking-facade.service.ts\n            \n            injectable\n            BookingFacadeService\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/booking/application/service/booking.service.ts\n            \n            injectable\n            BookingService\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/booking/domain/booking.ts\n            \n            interface\n            Booking\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/booking/mock/mock-booking.ts\n            \n            variable\n            BOOKINGS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/booking/vue/component/booking.component.ts\n            \n            component\n            BookingComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/establishment/application/facade/establishment-facade.service.ts\n            \n            injectable\n            EstablishmentFacadeService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/establishment/application/services/establishment.service.ts\n            \n            injectable\n            EstablishmentService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/establishment/domain/establishment.ts\n            \n            interface\n            Establishment\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/establishment/domain/establishment.ts\n            \n            interface\n            FormattedOpeningHour\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/establishment/mock/mock-establishment.ts\n            \n            variable\n            ESTABLISHMENTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/establishment/vue/components/establishment-add/establishment-add.component.ts\n            \n            component\n            EstablishmentAddComponent\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/establishment/vue/components/establishment-card/establishment.component.ts\n            \n            component\n            EstablishmentComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts\n            \n            component\n            EstablishmentEditComponent\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                src/app/establishment/vue/components/establishment-edit/establishment-edit.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/establishment/vue/components/establishment-list/establishment-list.component.ts\n            \n            component\n            EstablishmentListComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/establishment/vue/containers/establishment-page/establishment-page.component.ts\n            \n            component\n            EstablishmentPageComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/in-memory-data.service.ts\n            \n            injectable\n            InMemoryDataService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/session/application/services/session.service.ts\n            \n            injectable\n            SessionService\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                src/app/session/application/services/session.service.ts\n            \n            interface\n            sessionByEstablishment\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/session/domain/session.ts\n            \n            interface\n            OpeningHour\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/session/domain/session.ts\n            \n            interface\n            Session\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/session/domain/session.ts\n            \n            variable\n            TrainingSessionImages\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/session/mock/mock-session.ts\n            \n            variable\n            sessionsMock\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/session/vue/components/session-filter/session-filter.component.ts\n            \n            component\n            SessionFilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/session/vue/components/session-filter/session-filter.component.ts\n            \n            interface\n            FilterPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/session/vue/components/session/session.component.ts\n            \n            component\n            SessionComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/session/vue/containers/session-detail/session-detail.component.ts\n            \n            component\n            SessionDetailComponent\n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                src/app/session/vue/containers/session-listing-by-establishment-page/session-establishment-listing-page.component.ts\n            \n            component\n            SessionEstablishmentListingPageComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/session/vue/containers/sessions-listing-all/sessions-listing-all.component.ts\n            \n            component\n            SessionsListingAllComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/user/application/facade/user-facade.service.ts\n            \n            injectable\n            UserFacadeService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/user/application/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                src/app/user/domain/user.ts\n            \n            interface\n            User\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/user/mock/mock-users.ts\n            \n            variable\n            USERS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/user/vue/components/user-dashboard/user-dashboard.component.ts\n            \n            component\n            UserDashboardComponent\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/user/vue/components/user-list/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/user/vue/containers/users-page/users-page.component.ts\n            \n            component\n            UsersPageComponent\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.3\n        \n            @angular/cdk : ~16.0.2\n        \n            @angular/common : ^16.0.3\n        \n            @angular/compiler : ^16.0.3\n        \n            @angular/core : ^16.0.3\n        \n            @angular/forms : ^16.0.3\n        \n            @angular/material : ~16.0.2\n        \n            @angular/platform-browser : ^16.0.3\n        \n            @angular/platform-browser-dynamic : ^16.0.3\n        \n            @angular/router : ^16.0.3\n        \n            @jridgewell/sourcemap-codec : ^1.4.15\n        \n            @ngtools/webpack : ^16.0.5\n        \n            @npmcli/fs : ^3.1.0\n        \n            @types/node : ^20.2.5\n        \n            angular-in-memory-web-api : ^0.16.0\n        \n            animate.css : ^4.1.1\n        \n            bcryptjs : ^2.4.3\n        \n            crypto-browserify : ^3.12.0\n        \n            eslint-plugin-jsdoc : ^46.2.6\n        \n            karma-coverage-istanbul-reporter : ^3.0.3\n        \n            ngx-logger : ^5.0.12\n        \n            ngx-toastr : ^17.0.2\n        \n            postcss : ^8.4.24\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.5.3\n        \n            typescript : 4.9.3\n        \n            webpack : 5.54.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TrainingSession   (src/.../session.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/session/domain/session.ts\n    \n        \n            \n                \n                    \n                        \n                        TrainingSession\n                    \n                \n                    \n                        \n                            Enumération des différents types de Sessions.\n\n                        \n                    \n                        \n                            \n                                 CARDIO\n                            \n                        \n                        \n                            \n                                Value : Entraînement cardiovasculaire\n                            \n                        \n                        \n                            \n                                 STRENGTH\n                            \n                        \n                        \n                            \n                                Value : Entraînement en force\n                            \n                        \n                        \n                            \n                                 GROUP\n                            \n                        \n                        \n                            \n                                Value : Entraînement en groupe\n                            \n                        \n                        \n                            \n                                 YOGA\n                            \n                        \n                        \n                            \n                                Value : Yoga ou Pilates\n                            \n                        \n                        \n                            \n                                 FUNCTIONAL\n                            \n                        \n                        \n                            \n                                Value : Entraînement fonctionnel\n                            \n                        \n                        \n                            \n                                 OUTDOOR\n                            \n                        \n                        \n                            \n                                Value : Entraînement en plein air\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFitBooking\nClick here to access the github repository\nProject web developer\n\nVOUVOU Brandon\nKEITA Lansana\nATINHOUNON Nalvac\n\nDefault account usernames\n\n242darkman\nlanskei\nnalvac\nuser\n\nPassword for all accounts is passer123\nInstall project dependencies\nRun yarn or yarn install for installing all projects dependencies\nDevelopment server\nRun yarn start for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nFonctionnalités\nAuthentification\n\nCréation de compte : Les nouveaux utilisateurs peuvent créer un compte en fournissant les informations nécessaires telles que le nom d'utilisateur, l'adresse e-mail et le mot de passe.\n\nConnexion : Les utilisateurs peuvent se connecter à leur compte en utilisant leur username et leur mot de passe.\n\nDéconnexion : Les utilisateurs peuvent se déconnecter de leur compte à tout moment pour garantir la sécurité de leurs informations.\n\n\nConsultation des séances de sport\n\nLes utilisateurs doivent pouvoir consulter les séances de sport disponibles.\nLes séances de sport doivent être affichées par établissement, thème , date et\nheure.\nLes utilisateurs doivent pouvoir filtrer les séances de sport en fonction de critères tels que la localisation, le thème et la date\n\nRéservation de séances de sport\n\nLes utilisateurs authentifiés doivent pouvoir réserver une séance de sport disponible.\nEn cas de conflit de réservation pour un même créneau horaire, l'utilisateur doit pouvoir choisir parmi les établissements disponibles.\nLes utilisateurs doivent pouvoir visualiser\n\nGestion des établissements\n\nLes administrateurs de l'application doivent pouvoir gérer les établissements, y compris l'ajout, la modification et la suppression des établissements\nLes informations sur les établissements, telles que les horaires d'ouverture, les adresses, les coordonnées, etc.doivent être configurables.\n\nNotifications\n\nLes utilisateurs doivent recevoir des notifications de confirmation de réservation.\nLes utilisateurs doivent être avertis des annulations ou des modifications de réservation.\n\n;\nLes barres vertes indique des opérations qui sont optimisées et qui s'exécutent bien.\nLe jaune indique des avertissements ou des opérations qui prennent plus de temps que la normale à s'exécuter\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookingRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EstablishmentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EstablishmentRouting\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SessionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SessionRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BookingModule\n\n\n\ncluster_BookingModule_declarations\n\n\n\ncluster_BookingModule_imports\n\n\n\ncluster_EstablishmentModule\n\n\n\ncluster_EstablishmentModule_declarations\n\n\n\ncluster_EstablishmentModule_imports\n\n\n\ncluster_EstablishmentModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_declarations\n\n\n\ncluster_LoginModule_imports\n\n\n\ncluster_LoginModule_providers\n\n\n\ncluster_RegisterModule\n\n\n\ncluster_RegisterModule_declarations\n\n\n\ncluster_RegisterModule_imports\n\n\n\ncluster_SessionModule\n\n\n\ncluster_SessionModule_declarations\n\n\n\ncluster_SessionModule_imports\n\n\n\ncluster_SessionModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBookingModule\n\nBookingModule\n\nAppModule -->\n\nBookingModule->AppModule\n\n\n\n\n\nEstablishmentModule\n\nEstablishmentModule\n\nAppModule -->\n\nEstablishmentModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nEstablishmentModule->HomeModule\n\n\n\n\n\nEstablishmentComponent \n\nEstablishmentComponent \n\nEstablishmentComponent  -->\n\nEstablishmentModule->EstablishmentComponent \n\n\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nRegisterModule\n\nRegisterModule\n\nAppModule -->\n\nRegisterModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nBookingComponent\n\nBookingComponent\n\nBookingModule -->\n\nBookingComponent->BookingModule\n\n\n\n\n\nBookingRoutingModule\n\nBookingRoutingModule\n\nBookingModule -->\n\nBookingRoutingModule->BookingModule\n\n\n\n\n\nEstablishmentAddComponent\n\nEstablishmentAddComponent\n\nEstablishmentModule -->\n\nEstablishmentAddComponent->EstablishmentModule\n\n\n\n\n\nEstablishmentComponent\n\nEstablishmentComponent\n\nEstablishmentModule -->\n\nEstablishmentComponent->EstablishmentModule\n\n\n\n\n\nEstablishmentEditComponent\n\nEstablishmentEditComponent\n\nEstablishmentModule -->\n\nEstablishmentEditComponent->EstablishmentModule\n\n\n\n\n\nEstablishmentListComponent\n\nEstablishmentListComponent\n\nEstablishmentModule -->\n\nEstablishmentListComponent->EstablishmentModule\n\n\n\n\n\nEstablishmentPageComponent\n\nEstablishmentPageComponent\n\nEstablishmentModule -->\n\nEstablishmentPageComponent->EstablishmentModule\n\n\n\n\n\nEstablishmentRouting\n\nEstablishmentRouting\n\nEstablishmentModule -->\n\nEstablishmentRouting->EstablishmentModule\n\n\n\n\n\nNgForOf\n\nNgForOf\n\nEstablishmentModule -->\n\nNgForOf->EstablishmentModule\n\n\n\n\n\nSessionModule\n\nSessionModule\n\nSessionModule -->\n\nNgForOf->SessionModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nEstablishmentModule -->\n\nNgIf->EstablishmentModule\n\n\n\nSessionModule -->\n\nNgIf->SessionModule\n\n\n\n\n\nNgOptimizedImage\n\nNgOptimizedImage\n\nEstablishmentModule -->\n\nNgOptimizedImage->EstablishmentModule\n\n\n\nSessionModule -->\n\nNgOptimizedImage->SessionModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\nHomeModule -->\n\nSessionModule->HomeModule\n\n\n\n\n\nSessionEstablishmentListingPageComponent \n\nSessionEstablishmentListingPageComponent \n\nSessionEstablishmentListingPageComponent  -->\n\nSessionModule->SessionEstablishmentListingPageComponent \n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nLoginModule -->\n\nLoginComponent->LoginModule\n\n\n\n\n\nLoginRoutingModule\n\nLoginRoutingModule\n\nLoginModule -->\n\nLoginRoutingModule->LoginModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nLoginModule -->\n\nAuthService->LoginModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nRegisterModule -->\n\nRegisterComponent->RegisterModule\n\n\n\n\n\nRegisterRoutingModule\n\nRegisterRoutingModule\n\nRegisterModule -->\n\nRegisterRoutingModule->RegisterModule\n\n\n\n\n\nSessionComponent\n\nSessionComponent\n\nSessionModule -->\n\nSessionComponent->SessionModule\n\n\n\n\n\nSessionDetailComponent\n\nSessionDetailComponent\n\nSessionModule -->\n\nSessionDetailComponent->SessionModule\n\n\n\n\n\nSessionEstablishmentListingPageComponent\n\nSessionEstablishmentListingPageComponent\n\nSessionModule -->\n\nSessionEstablishmentListingPageComponent->SessionModule\n\n\n\n\n\nSessionFilterComponent\n\nSessionFilterComponent\n\nSessionModule -->\n\nSessionFilterComponent->SessionModule\n\n\n\n\n\nSessionsListingAllComponent\n\nSessionsListingAllComponent\n\nSessionModule -->\n\nSessionsListingAllComponent->SessionModule\n\n\n\n\n\nNgClass\n\nNgClass\n\nSessionModule -->\n\nNgClass->SessionModule\n\n\n\n\n\nRouterLink\n\nRouterLink\n\nSessionModule -->\n\nRouterLink->SessionModule\n\n\n\n\n\nUserDashboardComponent\n\nUserDashboardComponent\n\nUserModule -->\n\nUserDashboardComponent->UserModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nUserModule -->\n\nUserListComponent->UserModule\n\n\n\n\n\nUsersPageComponent\n\nUsersPageComponent\n\nUserModule -->\n\nUsersPageComponent->UserModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nUserModule -->\n\nUserRoutingModule->UserModule\n\n\n\n\n\nUserFacadeService\n\nUserFacadeService\n\nUserModule -->\n\nUserFacadeService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        14 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/sessionByEstablishment.html":{"url":"interfaces/sessionByEstablishment.html","title":"interface - sessionByEstablishment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  sessionByEstablishment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/session/application/services/session.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            establishmentId\n                                        \n                                \n                                \n                                        \n                                            nomEstablishment\n                                        \n                                \n                                \n                                        \n                                            sessions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        establishmentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        establishmentId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nomEstablishment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nomEstablishment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessions:         Session[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Session[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  OpeningHour,\n  Session,\n  TrainingSession,\n  TrainingSessionImages,\n} from '@/app/session/domain/session';\n\nimport { Establishment } from '@/app/establishment/domain/establishment';\nimport { Injectable } from '@angular/core';\nimport { ESTABLISHMENTS } from '@/app/establishment/mock/mock-establishment';\nimport { sessionsMock } from '@/app/session/mock/mock-session';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { InMemoryDataService } from '@/app/in-memory-data.service';\nimport { catchError, tap } from 'rxjs/operators';\n\nexport interface sessionByEstablishment {\n  nomEstablishment: string;\n  establishmentId: number;\n  address: string;\n  sessions: Session[];\n}\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionService {\n  private sessions: Session[] = sessionsMock;\n  private establishments: Establishment[] = ESTABLISHMENTS;\n\n  private sessionsSubject: BehaviorSubject = new BehaviorSubject(this.sessions);\n\n  private isFilterSubject: BehaviorSubject =\n    new BehaviorSubject(false);\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n  private sessionUrl = 'api/sessions';\n\n  constructor(private memory: InMemoryDataService, private http: HttpClient) {}\n\n  // Getter pour obtenir le BehaviorSubject en tant qu'Observable\n  get sessionsAsObservable(): Observable {\n    return this.sessionsSubject.asObservable();\n  }\n\n  get sessionsAsValue(): Session[] {\n    return this.sessionsSubject.value;\n  }\n  set updateSessions(session: Session[]) {\n    this.sessionsSubject.next(session);\n  }\n\n  getSessions(): void {\n    this.http\n      .get(this.sessionUrl)\n      .pipe(tap(), catchError(this.handleError('getSession', [])))\n      .subscribe(sessions => {\n        this.sessionsSubject.next(sessions);\n        return sessions;\n      });\n  }\n\n  generateId(): number {\n    const sessions = sessionsMock;\n    const id = this.memory.sessionId(sessions);\n    return id;\n  }\n\n  get isFilter(): boolean {\n    return this.isFilterSubject.value;\n  }\n\n  set isFilter(isFilter) {\n    this.isFilterSubject.next(isFilter);\n  }\n  insertSession(session: Session): Observable {\n    return this.http\n      .post(this.sessionUrl, session, this.httpOptions)\n      .pipe(\n        tap(newSession => {\n          const currentValue = this.sessionsSubject.getValue();\n          this.sessionsSubject.next([...currentValue, newSession]);\n        }),\n        catchError(this.handleError('insertSession'))\n      );\n  }\n\n  updateSession(updatedSession: Session): Session[] {\n    const index = this.sessionsAsValue.findIndex(\n      session => session.id === updatedSession.id\n    );\n    if (index !== -1) {\n      this.sessionsAsValue[index] = updatedSession;\n    }\n    return this.sessionsAsValue;\n  }\n  getSessionById(id: number): Session {\n    const sessionData = this.sessions.find(session => session.id === id);\n\n    return sessionData ?? ([] as unknown as Session);\n  }\n\n  getSessionByEstablishment(): sessionByEstablishment[] {\n    const sessionsByEstablishment: Map = new Map();\n\n    for (const session of this.sessions) {\n      if (session.establishmentId) {\n        if (sessionsByEstablishment.has(session.establishmentId)) {\n          sessionsByEstablishment.get(session.establishmentId)?.push(session);\n        } else {\n          sessionsByEstablishment.set(session.establishmentId, [session]);\n        }\n      }\n    }\n\n    const result: sessionByEstablishment[] = [];\n\n    for (const [establishmentId, sessions] of sessionsByEstablishment) {\n      const establishment = this.establishments.find(\n        e => e.id === establishmentId\n      );\n      if (establishment) {\n        result.push({\n          establishmentId: establishment.id,\n          nomEstablishment: establishment.nom,\n          address: establishment.address,\n          sessions,\n        });\n      }\n    }\n\n    return result;\n  }\n\n  getOneSessionByEstablishment(id: number): sessionByEstablishment {\n    return this.getSessionByEstablishment().find(\n      sessionByEstablishment => sessionByEstablishment.establishmentId === id\n    ) as sessionByEstablishment;\n  }\n\n  getTrainingSessionImageUrl(type: string): string {\n    return TrainingSessionImages[\n      this.getKeyByValue(TrainingSession, type) as keyof typeof TrainingSession\n    ];\n  }\n\n  getKeyByValue(\n    obj: { [key: string]: string },\n    value: string\n  ): string | undefined {\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === value) {\n        return key;\n      }\n    }\n    return undefined;\n  }\n\n  validOpenings(openingsHour: OpeningHour[]): OpeningHour[] {\n    const date = new Date();\n    return openingsHour.filter(\n      openingHour =>\n        new Date(openingHour.fullDate) > date &&\n        new Date().getTime().toLocaleString() (operation = 'operation', result?: T) {\n    return (error: unknown): Observable => {\n      console.error(`${operation} failed: ${error}`);\n      return of(result as T);\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adminGuard   (src/.../admin.guard.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            BOOKINGS   (src/.../mock-booking.ts)\n                        \n                        \n                            ESTABLISHMENTS   (src/.../mock-establishment.ts)\n                        \n                        \n                            sessionsMock   (src/.../mock-session.ts)\n                        \n                        \n                            TrainingSessionImages   (src/.../session.ts)\n                        \n                        \n                            USERS   (src/.../mock-users.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/application/guards/admin.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adminGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot\n) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  const token = authService.getToken();\n  const user = authService.getUser();\n  const isUserAuthenticated = !!user;\n  const isTokenValid = authService.verifyToken(token);\n  const isAdmin = user ? includes(user.roles, 'admin') : false;\n\n  if (route && state && isUserAuthenticated && isTokenValid && isAdmin) {\n    return true;\n  }\n\n  authService.logout();\n  return router.navigateByUrl('/login');\n}\n                    \n                \n\n            \n                \n                    Le garde d'administration (admin guard) sert à protéger les routes et à vérifier si l'utilisateur est authentifié et possède le rôle 'admin'.\nSi l'utilisateur est authentifié, que le token est valide et que l'utilisateur a le rôle 'admin', l'accès à la route est autorisé.\nSinon, l'utilisateur est déconnecté et redirigé vers la page de login.\n\n                \n            \n\n        \n    \n\n    src/app/auth/application/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot\n) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  const token = authService.getToken();\n  const user = authService.getUser();\n  const isUserAuthenticated = !!user;\n  const isTokenValid = authService.verifyToken(token);\n\n  if (route && state && isUserAuthenticated && isTokenValid) {\n    return true;\n  }\n\n  authService.logout();\n  return router.navigateByUrl('/login');\n}\n                    \n                \n\n            \n                \n                    Le garde d'authentification (auth guard) sert à protéger les routes et à vérifier si l'utilisateur est authentifié.\nSi l'utilisateur est authentifié et que le token est valide, l'accès à la route est autorisé.\nSinon, l'utilisateur est déconnecté et redirigé vers la page de login.\n\n                \n            \n\n        \n    \n\n    src/app/booking/mock/mock-booking.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BOOKINGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Booking[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 1,\n    userId: 1,\n    sessionId: 1,\n    timeBook: [\n      {\n        dayOfWeek: 'Monday',\n        startTime: '09:00',\n        endTime: '10:00',\n        fullDate: new Date(2023, 0, 2).getTime(),\n        availablePlace: 10,\n      },\n    ],\n  },\n  {\n    id: 2,\n    userId: 2,\n    sessionId: 2,\n    timeBook: [\n      {\n        dayOfWeek: 'Tuesday',\n        startTime: '10:00',\n        endTime: '11:00',\n        fullDate: new Date(2023, 0, 3).getTime(),\n        availablePlace: 8,\n      },\n    ],\n  },\n  {\n    id: 3,\n    userId: 3,\n    sessionId: 3,\n    timeBook: [\n      {\n        dayOfWeek: 'Wednesday',\n        startTime: '11:00',\n        endTime: '12:00',\n        fullDate: new Date(2023, 0, 4).getTime(),\n        availablePlace: 6,\n      },\n    ],\n  },\n  {\n    id: 4,\n    userId: 1,\n    sessionId: 1,\n    timeBook: [\n      {\n        dayOfWeek: 'Thursday',\n        startTime: '12:00',\n        endTime: '13:00',\n        fullDate: new Date(2023, 0, 5).getTime(),\n        availablePlace: 4,\n      },\n    ],\n  },\n  {\n    id: 5,\n    userId: 2,\n    sessionId: 2,\n    timeBook: [\n      {\n        dayOfWeek: 'Friday',\n        startTime: '13:00',\n        endTime: '14:00',\n        fullDate: new Date(2023, 0, 6).getTime(),\n        availablePlace: 2,\n      },\n    ],\n  },\n  {\n    id: 6,\n    userId: 3,\n    sessionId: 3,\n    timeBook: [\n      {\n        dayOfWeek: 'Saturday',\n        startTime: '14:00',\n        endTime: '15:00',\n        fullDate: new Date(2023, 0, 7).getTime(),\n        availablePlace: 0,\n      },\n    ],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/establishment/mock/mock-establishment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ESTABLISHMENTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Establishment[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 1,\n    nom: 'Gymnase Fitness Plus',\n    address: '123 Rue du Sport, 75001 Paris, France',\n    opening: '07:00',\n    close: '22:00',\n    imgUrl: 'assets/pictures/porte-maillot-600x400-c-default.png',\n    phoneNumber: '+33 1 23 45 67 89',\n    openingHours: [\n      { dayOfWeek: 'Lundi', startTime: '09:00', endTime: '18:00' },\n      { dayOfWeek: 'Jeudi', startTime: '09:00', endTime: '18:00' },\n      { dayOfWeek: 'Vendredi', startTime: '09:00', endTime: '18:00' },\n      { dayOfWeek: 'Samedi', startTime: '09:00', endTime: '13:00' },\n    ],\n  },\n  {\n    id: 2,\n    nom: 'Stade Olympique',\n    address: '456 Avenue des Sportifs, 75008 Paris, France',\n    opening: '07:00',\n    close: '22:00',\n    imgUrl: 'assets/pictures/bandeau-club-gambetta-1-600x400-c-default.jpeg',\n    phoneNumber: '+33 1 98 76 54 32',\n    openingHours: [\n      { dayOfWeek: 'Lundi', startTime: '09:00', endTime: '18:00' },\n      { dayOfWeek: 'Mardi', startTime: '09:00', endTime: '18:00' },\n      { dayOfWeek: 'Jeudi', startTime: '09:00', endTime: '18:00' },\n    ],\n  },\n  {\n    id: 3,\n    nom: 'Salle de Musculation Power Gym',\n    address: '789 Rue de la Forme, 75016 Paris, France',\n    opening: '07:00',\n    close: '22:00',\n    imgUrl: 'assets/pictures/dsc5365-600x400-c-default.jpeg',\n    phoneNumber: '+33 1 55 66 77 88',\n    openingHours: [\n      { dayOfWeek: 'Lundi', startTime: '09:00', endTime: '22:00' },\n      { dayOfWeek: 'Mardi', startTime: '09:00', endTime: '22:00' },\n      { dayOfWeek: 'Mercredi', startTime: '09:00', endTime: '22:00' },\n      { dayOfWeek: 'Vendredi', startTime: '09:00', endTime: '22:00' },\n    ],\n  },\n  {\n    id: 4,\n    nom: 'Centre de Boxe Punch Club',\n    address: '1010 Rue des Boxeurs, 75012 Paris, France',\n    opening: '07:00',\n    close: '22:00',\n    imgUrl: 'assets/pictures/espace-cardio-besancon-1-600x400-c-default.jpeg',\n    phoneNumber: '+33 1 22 33 44 55',\n    openingHours: [\n      { dayOfWeek: 'Lundi', startTime: '07:30', endTime: '21:00' },\n      { dayOfWeek: 'Mardi', startTime: '07:30', endTime: '21:00' },\n      { dayOfWeek: 'Mercredi', startTime: '07:30', endTime: '21:00' },\n    ],\n  },\n  {\n    id: 5,\n    nom: 'Studio Yoga Zen',\n    address: '555 Rue du Yoga, 75020 Paris, France',\n    opening: '07:00',\n    close: '22:00',\n    imgUrl: 'assets/pictures/espace-cardio-muscu-1-1-600x400-c-default.jpeg',\n    phoneNumber: '+33 1 66 77 88 99',\n    openingHours: [\n      { dayOfWeek: 'Lundi', startTime: '10:00', endTime: '19:30' },\n      { dayOfWeek: 'Mardi', startTime: '10:00', endTime: '19:30' },\n      { dayOfWeek: 'Vendredi', startTime: '10:00', endTime: '19:30' },\n      { dayOfWeek: 'Samedi', startTime: '09:00', endTime: '12:30' },\n    ],\n  },\n  {\n    id: 6,\n    nom: 'Centre de Natation AquaSport',\n    address: '222 Place de la Natation, 75009 Paris, France',\n    opening: '07:00',\n    close: '22:00',\n    imgUrl:\n      'assets/pictures/espace-cardio-muscu-clermont-1-1-600x400-c-default.jpeg',\n    phoneNumber: '+33 1 11 22 33 44',\n    openingHours: [\n      { dayOfWeek: 'Mercredi', startTime: '06:30', endTime: '19:00' },\n      { dayOfWeek: 'Jeudi', startTime: '06:30', endTime: '19:00' },\n      { dayOfWeek: 'Vendredi', startTime: '06:30', endTime: '19:00' },\n      { dayOfWeek: 'Samedi', startTime: '08:00', endTime: '15:00' },\n    ],\n  },\n  {\n    id: 7,\n    nom: 'Salle de CrossFit IronFit',\n    address: '333 Rue du CrossFit, 75005 Paris, France',\n    opening: '07:00',\n    close: '22:00',\n    imgUrl:\n      'assets/pictures/espace-cardio-muscu-marseille-1-1-600x400-c-default.jpeg',\n    phoneNumber: '+33 1 44 55 66 77',\n    openingHours: [\n      { dayOfWeek: 'Lundi', startTime: '10:00', endTime: '20:00' },\n      { dayOfWeek: 'Mercredi', startTime: '10:00', endTime: '20:00' },\n      { dayOfWeek: 'Jeudi', startTime: '10:00', endTime: '20:00' },\n    ],\n  },\n  {\n    id: 8,\n    nom: \"Club d'Escalade Vertigo\",\n    address: \"444 Avenue de l'Escalade, 75017 Paris, France\",\n    opening: '07:00',\n    close: '22:00',\n    imgUrl:\n      'assets/pictures/espace-cardio-muscu-tassin-1-1-600x400-c-default.jpeg',\n    phoneNumber: '+33 1 99 88 77 66',\n    openingHours: [\n      { dayOfWeek: 'Lundi', startTime: '09:30', endTime: '22:00' },\n      { dayOfWeek: 'Mercredi', startTime: '09:30', endTime: '22:00' },\n      { dayOfWeek: 'Vendredi', startTime: '09:30', endTime: '22:00' },\n      { dayOfWeek: 'Samedi', startTime: '10:00', endTime: '20:00' },\n    ],\n  },\n  {\n    id: 9,\n    nom: 'Terrain de Football SoccerCity',\n    address: '777 Boulevard du Football, 75013 Paris, France',\n    opening: '07:00',\n    close: '22:00',\n    imgUrl: 'assets/pictures/espace-cardio-villeurbanne-600x400-c-default.jpeg',\n    phoneNumber: '+33 1 12 34 56 78',\n    openingHours: [\n      { dayOfWeek: 'Mardi', startTime: '16:00', endTime: '22:00' },\n      { dayOfWeek: 'Mercredi', startTime: '16:00', endTime: '22:00' },\n      { dayOfWeek: 'Vendredi', startTime: '16:00', endTime: '22:00' },\n      { dayOfWeek: 'Samedi', startTime: '09:00', endTime: '14:00' },\n    ],\n  },\n  {\n    id: 10,\n    nom: 'Salle de Danse MoveIt',\n    address: '888 Rue de la Danse, 75014 Paris, France',\n    opening: '07:00',\n    close: '22:00',\n    imgUrl: 'assets/pictures/piscine-confluence-600x400-c-default.jpeg',\n    phoneNumber: '+33 1 23 45 67 89',\n    openingHours: [\n      { dayOfWeek: 'Lundi', startTime: '14:00', endTime: '20:00' },\n      { dayOfWeek: 'Mardi', startTime: '14:00', endTime: '20:00' },\n      { dayOfWeek: 'Samedi', startTime: '09:00', endTime: '18:00' },\n    ],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/session/mock/mock-session.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sessionsMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Session[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 1,\n    establishmentId: 1,\n    title: 'Session de Cardio',\n    description: 'Entraînement cardiovasculaire intensif',\n    type: TrainingSession.CARDIO,\n    openingHours: [\n      {\n        dayOfWeek: 'Lundi',\n        startTime: '09:00',\n        endTime: '20:30',\n        fullDate: new Date(2023, 6, 27, 19, 0).getTime(),\n        availablePlace: 10,\n      },\n      {\n        dayOfWeek: 'Mercredi',\n        startTime: '14:00',\n        endTime: '15:30',\n        fullDate: new Date(2023, 6, 19, 14, 0).getTime(),\n        availablePlace: 10,\n      },\n    ],\n  },\n  {\n    id: 2,\n    establishmentId: 2,\n    title: 'Séance de Yoga',\n    description: 'Yoga pour se détendre et se ressourcer',\n    type: TrainingSession.YOGA,\n    openingHours: [\n      {\n        dayOfWeek: 'Mardi',\n        startTime: '17:00',\n        endTime: '18:30',\n        fullDate: new Date(2023, 6, 18, 17, 0).getTime(),\n        availablePlace: 10,\n      },\n      {\n        dayOfWeek: 'Vendredi',\n        startTime: '10:00',\n        endTime: '11:30',\n        fullDate: new Date(2023, 6, 21, 10, 0).getTime(),\n        availablePlace: 10,\n      },\n    ],\n  },\n  {\n    id: 3,\n    establishmentId: 3,\n    title: 'Séance de Strength',\n    description: 'Entraînement musculaire intense',\n    type: TrainingSession.STRENGTH,\n    openingHours: [\n      {\n        dayOfWeek: 'Jeudi',\n        startTime: '18:00',\n        endTime: '19:30',\n        fullDate: new Date(2023, 6, 20, 18, 0).getTime(),\n        availablePlace: 10,\n      },\n      {\n        dayOfWeek: 'Samedi',\n        startTime: '09:30',\n        endTime: '11:00',\n        fullDate: new Date(2023, 6, 22, 9, 30).getTime(),\n        availablePlace: 10,\n      },\n    ],\n  },\n  {\n    id: 4,\n    establishmentId: 2,\n    title: 'Séance de Group',\n    description: 'Entraînement en groupe convivial',\n    type: TrainingSession.GROUP,\n    openingHours: [\n      {\n        dayOfWeek: 'Mardi',\n        startTime: '10:00',\n        endTime: '11:30',\n        fullDate: new Date(2023, 6, 18, 10, 0).getTime(),\n        availablePlace: 10,\n      },\n      {\n        dayOfWeek: 'Jeudi',\n        startTime: '16:00',\n        endTime: '17:30',\n        fullDate: new Date(2023, 6, 20, 16, 0).getTime(),\n        availablePlace: 10,\n      },\n    ],\n  },\n  {\n    id: 5,\n    establishmentId: 5,\n    title: 'Séance de Functional',\n    description: 'Entraînement fonctionnel pour tous niveaux',\n    type: TrainingSession.FUNCTIONAL,\n    openingHours: [\n      {\n        dayOfWeek: 'Lundi',\n        startTime: '17:00',\n        endTime: '18:30',\n        fullDate: new Date(2023, 6, 17, 17, 0).getTime(),\n        availablePlace: 10,\n      },\n      {\n        dayOfWeek: 'Mercredi',\n        startTime: '08:30',\n        endTime: '10:00',\n        fullDate: new Date(2023, 6, 19, 8, 30).getTime(),\n        availablePlace: 10,\n      },\n    ],\n  },\n  {\n    id: 6,\n    establishmentId: 4,\n    title: 'Séance de Outdoor',\n    description: 'Entraînement en plein air dans la nature',\n    type: TrainingSession.OUTDOOR,\n    openingHours: [\n      {\n        dayOfWeek: 'Vendredi',\n        startTime: '15:00',\n        endTime: '16:30',\n        fullDate: new Date(2023, 6, 21, 15, 0).getTime(),\n        availablePlace: 10,\n      },\n      {\n        dayOfWeek: 'Dimanche',\n        startTime: '11:00',\n        endTime: '12:30',\n        fullDate: new Date(2023, 6, 23, 11, 0).getTime(),\n        availablePlace: 10,\n      },\n    ],\n  },\n  {\n    id: 7,\n    establishmentId: 7,\n    title: 'Séance de Yoga',\n    description: 'Yoga pour se détendre et se ressourcer',\n    type: TrainingSession.YOGA,\n    openingHours: [\n      {\n        dayOfWeek: 'Lundi',\n        startTime: '08:00',\n        endTime: '09:30',\n        fullDate: new Date(2023, 6, 17, 8, 0).getTime(),\n        availablePlace: 10,\n      },\n      {\n        dayOfWeek: 'Mercredi',\n        startTime: '17:30',\n        endTime: '19:00',\n        fullDate: new Date(2023, 6, 19, 17, 30).getTime(),\n        availablePlace: 10,\n      },\n    ],\n  },\n  {\n    id: 8,\n    establishmentId: 8,\n    title: 'Séance de Cardio',\n    description: 'Entraînement cardiovasculaire intensif',\n    type: TrainingSession.CARDIO,\n    openingHours: [\n      {\n        dayOfWeek: 'Mardi',\n        startTime: '15:00',\n        endTime: '16:30',\n        fullDate: new Date(2023, 6, 18, 15, 0).getTime(),\n        availablePlace: 10,\n      },\n      {\n        dayOfWeek: 'Jeudi',\n        startTime: '09:30',\n        endTime: '11:00',\n        fullDate: new Date(2023, 6, 20, 9, 30).getTime(),\n        availablePlace: 10,\n      },\n    ],\n  },\n  {\n    id: 9,\n    establishmentId: 9,\n    title: 'Séance de Strength',\n    description: 'Entraînement musculaire intense',\n    type: TrainingSession.STRENGTH,\n    openingHours: [\n      {\n        dayOfWeek: 'Lundi',\n        startTime: '18:00',\n        endTime: '19:30',\n        fullDate: new Date(2023, 6, 17, 18, 0).getTime(),\n        availablePlace: 10,\n      },\n      {\n        dayOfWeek: 'Mercredi',\n        startTime: '09:00',\n        endTime: '10:30',\n        fullDate: new Date(2023, 6, 19, 9, 0).getTime(),\n        availablePlace: 10,\n      },\n    ],\n  },\n  {\n    id: 10,\n    establishmentId: 1,\n    title: 'Séance de Group',\n    description: 'Entraînement en groupe convivial',\n    type: TrainingSession.GROUP,\n    openingHours: [\n      {\n        dayOfWeek: 'Vendredi',\n        startTime: '16:00',\n        endTime: '17:30',\n        fullDate: new Date(2023, 6, 27, 20, 0).getTime(),\n        availablePlace: 10,\n      },\n      {\n        dayOfWeek: 'Samedi',\n        startTime: '10:00',\n        endTime: '11:30',\n        fullDate: new Date(2023, 6, 22, 10, 0).getTime(),\n        availablePlace: 10,\n      },\n    ],\n  },\n]\n                    \n                \n\n            \n                \n                    Un mock des Sessions de formation pour les tests et le développement.\n\n                \n            \n\n        \n    \n\n    src/app/session/domain/session.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TrainingSessionImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /** Chemin d'accès à l'image pour le cardio. */\n  CARDIO: 'assets/pictures/cardio.jpeg',\n\n  /** Chemin d'accès à l'image pour l'entraînement en force. */\n  STRENGTH: 'assets/pictures/strength.jpeg',\n\n  /** Chemin d'accès à l'image pour l'entraînement en groupe. */\n  GROUP: 'assets/pictures/group.gif',\n\n  /** Chemin d'accès à l'image pour le yoga. */\n  YOGA: 'assets/pictures/yoga.jpeg',\n\n  /** Chemin d'accès à l'image pour l'entraînement fonctionnel. */\n  FUNCTIONAL: 'assets/pictures/functional.jpeg',\n\n  /** Chemin d'accès à l'image pour l'entraînement en plein air. */\n  OUTDOOR: 'assets/pictures/outdoor.jpg',\n}\n                    \n                \n\n            \n                \n                    Objet contenant les chemins d'accès aux images pour chaque type de Session.\n\n                \n            \n\n        \n    \n\n    src/app/user/mock/mock-users.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 1,\n    userName: '242darkman',\n    firstName: 'Brandon',\n    lastName: 'VOUVOU',\n    email: 'bvouvou2@myges.fr',\n    password: '$2a$10$B16ws8u/Y0J8TJitdmdF5epN5YVQHr587Wi2ma0RSGFv4cpX4Y/Xm',\n    roles: ['user', 'admin'],\n  },\n  {\n    id: 2,\n    userName: 'lanskei',\n    firstName: 'Lansana',\n    lastName: 'KEITA',\n    email: 'lkeita2@myges.fr',\n    password: '$2a$10$B16ws8u/Y0J8TJitdmdF5epN5YVQHr587Wi2ma0RSGFv4cpX4Y/Xm',\n    roles: ['user', 'admin'],\n  },\n  {\n    id: 3,\n    userName: 'nalvac',\n    firstName: 'Nalvac',\n    lastName: 'ATINHOUNON',\n    email: 'natinhounon@myges.fr',\n    password: '$2a$10$B16ws8u/Y0J8TJitdmdF5epN5YVQHr587Wi2ma0RSGFv4cpX4Y/Xm',\n    roles: ['user', 'admin'],\n  },\n  {\n    id: 4,\n    userName: 'user',\n    firstName: 'John',\n    lastName: 'Doe',\n    email: 'jdoe@myges.fr',\n    password: '$2a$10$B16ws8u/Y0J8TJitdmdF5epN5YVQHr587Wi2ma0RSGFv4cpX4Y/Xm',\n    roles: ['user'],\n  },\n]\n                    \n                \n\n            \n                \n                    Liste des utilisateurs prédéfinis.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
